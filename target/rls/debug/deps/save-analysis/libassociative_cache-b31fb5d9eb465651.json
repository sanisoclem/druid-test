{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1","program":"C:\\Users\\Mel\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","associative_cache","--edition=2018","C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=b31fb5d9eb465651","-C","extra-filename=-b31fb5d9eb465651","--out-dir","c:\\Users\\Mel\\Workspace\\src\\druid-test\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Mel\\Workspace\\src\\druid-test\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Mel\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Mel\\Workspace\\src\\druid-test\\target\\rls\\debug\\deps\\libassociative_cache-b31fb5d9eb465651.rmeta"},"prelude":{"crate_id":{"name":"associative_cache","disambiguator":[13027251333247036097,0]},"crate_root":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src","external_crates":[{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}}],"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":0,"byte_end":33845,"line_start":1,"line_end":1131,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement.rs","byte_start":51416,"byte_end":51424,"line_start":4,"line_end":4,"column_start":17,"column_end":25},"alias_span":null,"name":"Capacity","value":"","parent":{"krate":0,"index":131}},{"kind":"Use","ref_id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement.rs","byte_start":51426,"byte_end":51437,"line_start":4,"line_end":4,"column_start":27,"column_end":38},"alias_span":null,"name":"Replacement","value":"","parent":{"krate":0,"index":131}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement.rs","byte_start":51467,"byte_end":51468,"line_start":7,"line_end":7,"column_start":14,"column_end":15},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":131}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":450,"byte_end":451,"line_start":16,"line_end":16,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":468,"byte_end":469,"line_start":17,"line_end":17,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"EntryKind, Entry","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":488,"byte_end":489,"line_start":18,"line_end":18,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":505,"byte_end":506,"line_start":19,"line_end":19,"column_start":15,"column_end":16},"alias_span":null,"name":"*","value":"IntoIter, Iter, IterMut","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":529,"byte_end":530,"line_start":20,"line_end":20,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":0,"byte_end":33845,"line_start":1,"line_end":1131,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":8},{"krate":0,"index":42},{"krate":0,"index":71},{"krate":0,"index":131},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":225},{"krate":0,"index":1121},{"krate":0,"index":1132},{"krate":0,"index":233},{"krate":0,"index":240}],"decl_id":null,"docs":" This crate provides a generic, fixed-size, N-way associative cache data\n structure that supports random and least recently used replacement (or your\n own custom algorithm).","sig":null,"attributes":[{"value":"/ This crate provides a generic, fixed-size, N-way associative cache data","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":0,"byte_end":75,"line_start":1,"line_end":1,"column_start":1,"column_end":76}},{"value":"/ structure that supports random and least recently used replacement (or your","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":76,"byte_end":155,"line_start":2,"line_end":2,"column_start":1,"column_end":80}},{"value":"/ own custom algorithm).","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":156,"byte_end":182,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":183,"byte_end":186,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Dive into the documentation for","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":187,"byte_end":222,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/ [`AssociativeCache`](./struct.AssociativeCache.html) to begin.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":223,"byte_end":289,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"deny(missing_docs, missing_debug_implementations)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":291,"byte_end":344,"line_start":8,"line_end":8,"column_start":1,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\capacity.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"capacity","qualname":"::capacity","value":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\capacity.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":268},{"krate":0,"index":317},{"krate":0,"index":319},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":333},{"krate":0,"index":335},{"krate":0,"index":270},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":272},{"krate":0,"index":359},{"krate":0,"index":361},{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":377},{"krate":0,"index":274},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":276},{"krate":0,"index":401},{"krate":0,"index":403},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":419},{"krate":0,"index":278},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":280},{"krate":0,"index":443},{"krate":0,"index":445},{"krate":0,"index":447},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":282},{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":284},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":286},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":512},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":288},{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":531},{"krate":0,"index":533},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":541},{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":290},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":552},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":292},{"krate":0,"index":569},{"krate":0,"index":571},{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":294}],"decl_id":null,"docs":" Constant cache capacity implementations.\n","sig":null,"attributes":[{"value":"/ Constant cache capacity implementations.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\capacity.rs","byte_start":33847,"byte_end":33891,"line_start":1,"line_end":1,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\capacity.rs","byte_start":34335,"byte_end":34344,"line_start":21,"line_end":21,"column_start":5,"column_end":14},"name":"Capacity1","qualname":"::capacity::Capacity1","value":"","parent":null,"children":[],"decl_id":null,"docs":" Constant cache capacity = 1.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\capacity.rs","byte_start":34392,"byte_end":34401,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"name":"Capacity2","qualname":"::capacity::Capacity2","value":"","parent":null,"children":[],"decl_id":null,"docs":" Constant cache capacity = 2.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\capacity.rs","byte_start":34449,"byte_end":34458,"line_start":25,"line_end":25,"column_start":5,"column_end":14},"name":"Capacity4","qualname":"::capacity::Capacity4","value":"","parent":null,"children":[],"decl_id":null,"docs":" Constant cache capacity = 4.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\capacity.rs","byte_start":34506,"byte_end":34515,"line_start":27,"line_end":27,"column_start":5,"column_end":14},"name":"Capacity8","qualname":"::capacity::Capacity8","value":"","parent":null,"children":[],"decl_id":null,"docs":" Constant cache capacity = 8.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\capacity.rs","byte_start":34564,"byte_end":34574,"line_start":29,"line_end":29,"column_start":5,"column_end":15},"name":"Capacity16","qualname":"::capacity::Capacity16","value":"","parent":null,"children":[],"decl_id":null,"docs":" Constant cache capacity = 16.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\capacity.rs","byte_start":34624,"byte_end":34634,"line_start":31,"line_end":31,"column_start":5,"column_end":15},"name":"Capacity32","qualname":"::capacity::Capacity32","value":"","parent":null,"children":[],"decl_id":null,"docs":" Constant cache capacity = 32.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":422},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\capacity.rs","byte_start":34684,"byte_end":34694,"line_start":33,"line_end":33,"column_start":5,"column_end":15},"name":"Capacity64","qualname":"::capacity::Capacity64","value":"","parent":null,"children":[],"decl_id":null,"docs":" Constant cache capacity = 64.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":443},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\capacity.rs","byte_start":34745,"byte_end":34756,"line_start":35,"line_end":35,"column_start":5,"column_end":16},"name":"Capacity128","qualname":"::capacity::Capacity128","value":"","parent":null,"children":[],"decl_id":null,"docs":" Constant cache capacity = 128.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":464},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\capacity.rs","byte_start":34808,"byte_end":34819,"line_start":37,"line_end":37,"column_start":5,"column_end":16},"name":"Capacity256","qualname":"::capacity::Capacity256","value":"","parent":null,"children":[],"decl_id":null,"docs":" Constant cache capacity = 256.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\capacity.rs","byte_start":34871,"byte_end":34882,"line_start":39,"line_end":39,"column_start":5,"column_end":16},"name":"Capacity512","qualname":"::capacity::Capacity512","value":"","parent":null,"children":[],"decl_id":null,"docs":" Constant cache capacity = 512.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\capacity.rs","byte_start":34935,"byte_end":34947,"line_start":41,"line_end":41,"column_start":5,"column_end":17},"name":"Capacity1024","qualname":"::capacity::Capacity1024","value":"","parent":null,"children":[],"decl_id":null,"docs":" Constant cache capacity = 1024.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":527},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\capacity.rs","byte_start":35001,"byte_end":35013,"line_start":43,"line_end":43,"column_start":5,"column_end":17},"name":"Capacity2048","qualname":"::capacity::Capacity2048","value":"","parent":null,"children":[],"decl_id":null,"docs":" Constant cache capacity = 2048.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":548},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\capacity.rs","byte_start":35067,"byte_end":35079,"line_start":45,"line_end":45,"column_start":5,"column_end":17},"name":"Capacity4096","qualname":"::capacity::Capacity4096","value":"","parent":null,"children":[],"decl_id":null,"docs":" Constant cache capacity = 4096.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":569},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\capacity.rs","byte_start":35133,"byte_end":35145,"line_start":47,"line_end":47,"column_start":5,"column_end":17},"name":"Capacity8192","qualname":"::capacity::Capacity8192","value":"","parent":null,"children":[],"decl_id":null,"docs":" Constant cache capacity = 8192.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":8},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"entry","qualname":"::entry","value":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":23},{"krate":0,"index":590},{"krate":0,"index":597},{"krate":0,"index":31}],"decl_id":null,"docs":" An API for get-or-create operations on cache entries, similar to\n `std::collections::HashMap`'s entry API.\n","sig":null,"attributes":[{"value":"/ An API for get-or-create operations on cache entries, similar to","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":35158,"byte_end":35226,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"/ `std::collections::HashMap`'s entry API.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":35227,"byte_end":35271,"line_start":2,"line_end":2,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":13},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":35476,"byte_end":35481,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Entry","qualname":"::entry::Entry","value":"Entry {  }","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22}],"decl_id":null,"docs":" A potentially-empty entry in a cache, used to perform get-or-create\n operations on the cache.","sig":null,"attributes":[{"value":"/ A potentially-empty entry in a cache, used to perform get-or-create","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":35302,"byte_end":35373,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/ operations on the cache.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":35374,"byte_end":35402,"line_start":8,"line_end":8,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":35403,"byte_end":35406,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Constructed via the `AssociativeCache::entry` method.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":35407,"byte_end":35464,"line_start":10,"line_end":10,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":38519,"byte_end":38533,"line_start":104,"line_end":104,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<impl FnOnce() -> K: FnOnce() -> K,\nimpl FnOnce() -> V: FnOnce() ->\nV>(Self, impl FnOnce() -> K, impl FnOnce() -> V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying cached data, creating and inserting it into the cache\n if it doesn't already exist.","sig":null,"attributes":[{"value":"/ Get the underlying cached data, creating and inserting it into the cache","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":36511,"byte_end":36587,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ if it doesn't already exist.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":36592,"byte_end":36624,"line_start":57,"line_end":57,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":36629,"byte_end":36632,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ## Differences from `std::collections::HashMap`'s `Entry` API","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":36637,"byte_end":36702,"line_start":59,"line_end":59,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":36707,"byte_end":36710,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ `std::collections::HashMap`'s `Entry` API takes unconditional ownership","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":36715,"byte_end":36790,"line_start":61,"line_end":61,"column_start":5,"column_end":80}},{"value":"/ of the query key, even in scenarios where there is already an entry with","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":36795,"byte_end":36871,"line_start":62,"line_end":62,"column_start":5,"column_end":81}},{"value":"/ that key in the map. This means that if your keys are expensive to","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":36876,"byte_end":36946,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/ create (like `String` and its heap allocation) that you have to eagerly","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":36951,"byte_end":37026,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ construct the key even if you don't end up needing it.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":37031,"byte_end":37089,"line_start":65,"line_end":65,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":37094,"byte_end":37097,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ In contrast, the `associative_cache::Entry` API allows you to get an","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":37102,"byte_end":37174,"line_start":67,"line_end":67,"column_start":5,"column_end":77}},{"value":"/ `Entry` with just a borrow of a key, allowing you to delay the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":37179,"byte_end":37245,"line_start":68,"line_end":68,"column_start":5,"column_end":71}},{"value":"/ potentially-expensive key construction until we actually need","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":37250,"byte_end":37315,"line_start":69,"line_end":69,"column_start":5,"column_end":70}},{"value":"/ it. However, this is not without drawbacks. Now the `or_insert_with`","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":37320,"byte_end":37392,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ method needs a way to construct an owned key: the `make_key` parameter","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":37397,"byte_end":37471,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ here. **`make_key` must return an owned key that is equivalent to the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":37476,"byte_end":37549,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ borrowed key that was used to get this `Entry`.** Failure to do this","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":37554,"byte_end":37626,"line_start":73,"line_end":73,"column_start":5,"column_end":77}},{"value":"/ will result in an invalid cache (likely manifesting as wasted entries","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":37631,"byte_end":37704,"line_start":74,"line_end":74,"column_start":5,"column_end":78}},{"value":"/ that take up space but can't ever be queried for).","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":37709,"byte_end":37763,"line_start":75,"line_end":75,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":37768,"byte_end":37771,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":37776,"byte_end":37789,"line_start":77,"line_end":77,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":37794,"byte_end":37797,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":37802,"byte_end":37809,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use associative_cache::*;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":37814,"byte_end":37843,"line_start":80,"line_end":80,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":37848,"byte_end":37851,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let mut cache = AssociativeCache::<","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":37856,"byte_end":37895,"line_start":82,"line_end":82,"column_start":5,"column_end":44}},{"value":"/     String,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":37900,"byte_end":37915,"line_start":83,"line_end":83,"column_start":5,"column_end":20}},{"value":"/     usize,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":37920,"byte_end":37934,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/     Capacity4,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":37939,"byte_end":37957,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/     HashTwoWay,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":37962,"byte_end":37981,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/     RoundRobinReplacement,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":37986,"byte_end":38016,"line_start":87,"line_end":87,"column_start":5,"column_end":35}},{"value":"/ >::default();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":38021,"byte_end":38038,"line_start":88,"line_end":88,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":38043,"byte_end":38046,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ // Get or create an entry for \"hi\", delaying the `&str` to `String`","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":38051,"byte_end":38122,"line_start":90,"line_end":90,"column_start":5,"column_end":76}},{"value":"/ // allocation until if/when we actually insert into the cache.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":38127,"byte_end":38193,"line_start":91,"line_end":91,"column_start":5,"column_end":71}},{"value":"/ let val = cache.entry(\"hi\").or_insert_with(","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":38198,"byte_end":38245,"line_start":92,"line_end":92,"column_start":5,"column_end":52}},{"value":"/     || \"hi\".to_string(),","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":38250,"byte_end":38278,"line_start":93,"line_end":93,"column_start":5,"column_end":33}},{"value":"/     || 42,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":38283,"byte_end":38297,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/ );","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":38302,"byte_end":38308,"line_start":95,"line_end":95,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":38313,"byte_end":38316,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ // The cache was empty, so we inserted the default value of 42.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":38321,"byte_end":38388,"line_start":97,"line_end":97,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(*val, 42);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":38393,"byte_end":38418,"line_start":98,"line_end":98,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":38423,"byte_end":38426,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ // We can modify the value.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":38431,"byte_end":38462,"line_start":100,"line_end":100,"column_start":5,"column_end":36}},{"value":"/ *val += 1;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":38467,"byte_end":38481,"line_start":101,"line_end":101,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":38486,"byte_end":38493,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":38498,"byte_end":38507,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":40462,"byte_end":40494,"line_start":163,"line_end":163,"column_start":12,"column_end":44},"name":"take_entry_that_will_be_replaced","qualname":"<Entry>::take_entry_that_will_be_replaced","value":"pub fn take_entry_that_will_be_replaced(&mut Self) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" If inserting into this `Entry` will replace another entry in the\n cache, remove that other entry from the cache and return it now.","sig":null,"attributes":[{"value":"/ If inserting into this `Entry` will replace another entry in the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":39440,"byte_end":39508,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ cache, remove that other entry from the cache and return it now.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":39513,"byte_end":39581,"line_start":132,"line_end":132,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":39586,"byte_end":39589,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":39594,"byte_end":39607,"line_start":134,"line_end":134,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":39612,"byte_end":39615,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":39620,"byte_end":39627,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ use associative_cache::*;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":39632,"byte_end":39661,"line_start":137,"line_end":137,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":39666,"byte_end":39669,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let mut cache = AssociativeCache::<","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":39674,"byte_end":39713,"line_start":139,"line_end":139,"column_start":5,"column_end":44}},{"value":"/     String,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":39718,"byte_end":39733,"line_start":140,"line_end":140,"column_start":5,"column_end":20}},{"value":"/     usize,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":39738,"byte_end":39752,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/     Capacity256,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":39757,"byte_end":39777,"line_start":142,"line_end":142,"column_start":5,"column_end":25}},{"value":"/     HashTwoWay,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":39782,"byte_end":39801,"line_start":143,"line_end":143,"column_start":5,"column_end":24}},{"value":"/     RoundRobinReplacement,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":39806,"byte_end":39836,"line_start":144,"line_end":144,"column_start":5,"column_end":35}},{"value":"/ >::default();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":39841,"byte_end":39858,"line_start":145,"line_end":145,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":39863,"byte_end":39866,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ cache.insert(\"hi\".to_string(), 5);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":39871,"byte_end":39909,"line_start":147,"line_end":147,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":39914,"byte_end":39917,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let mut entry = cache.entry(\"bye\");","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":39922,"byte_end":39961,"line_start":149,"line_end":149,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":39966,"byte_end":39969,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ // Because this entry could replace the entry for \"hi\" depending on the hash","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":39974,"byte_end":40054,"line_start":151,"line_end":151,"column_start":5,"column_end":85}},{"value":"/ // function in use, we have an opportunity to recover the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":40059,"byte_end":40120,"line_start":152,"line_end":152,"column_start":5,"column_end":66}},{"value":"/ // about-to-be-replaced entry here.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":40125,"byte_end":40164,"line_start":153,"line_end":153,"column_start":5,"column_end":44}},{"value":"/ if let Some((key, val)) = entry.take_entry_that_will_be_replaced() {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":40169,"byte_end":40241,"line_start":154,"line_end":154,"column_start":5,"column_end":77}},{"value":"/     assert_eq!(key, \"hi\");","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":40246,"byte_end":40276,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(val, 5);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":40281,"byte_end":40308,"line_start":156,"line_end":156,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":40313,"byte_end":40318,"line_start":157,"line_end":157,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":40323,"byte_end":40326,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ let val = entry.or_insert_with(|| \"bye\".into(), || 1337);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":40331,"byte_end":40392,"line_start":159,"line_end":159,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(*val, 1337);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":40397,"byte_end":40424,"line_start":160,"line_end":160,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":40429,"byte_end":40436,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":40441,"byte_end":40450,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\indices.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"indices","qualname":"::indices","value":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\indices.rs","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":635},{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":644},{"krate":0,"index":647},{"krate":0,"index":649},{"krate":0,"index":653},{"krate":0,"index":655},{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":664},{"krate":0,"index":599},{"krate":0,"index":668},{"krate":0,"index":671},{"krate":0,"index":674},{"krate":0,"index":677},{"krate":0,"index":680},{"krate":0,"index":682},{"krate":0,"index":686},{"krate":0,"index":688},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":697},{"krate":0,"index":605},{"krate":0,"index":701},{"krate":0,"index":704},{"krate":0,"index":707},{"krate":0,"index":710},{"krate":0,"index":713},{"krate":0,"index":715},{"krate":0,"index":719},{"krate":0,"index":721},{"krate":0,"index":724},{"krate":0,"index":727},{"krate":0,"index":730},{"krate":0,"index":611},{"krate":0,"index":734},{"krate":0,"index":737},{"krate":0,"index":740},{"krate":0,"index":743},{"krate":0,"index":746},{"krate":0,"index":748},{"krate":0,"index":752},{"krate":0,"index":754},{"krate":0,"index":757},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":617},{"krate":0,"index":767},{"krate":0,"index":770},{"krate":0,"index":773},{"krate":0,"index":776},{"krate":0,"index":779},{"krate":0,"index":781},{"krate":0,"index":785},{"krate":0,"index":787},{"krate":0,"index":790},{"krate":0,"index":793},{"krate":0,"index":796},{"krate":0,"index":623},{"krate":0,"index":800},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":812},{"krate":0,"index":814},{"krate":0,"index":818},{"krate":0,"index":820},{"krate":0,"index":823},{"krate":0,"index":826},{"krate":0,"index":829},{"krate":0,"index":629},{"krate":0,"index":70},{"krate":0,"index":893},{"krate":0,"index":895},{"krate":0,"index":897},{"krate":0,"index":899},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":907},{"krate":0,"index":909},{"krate":0,"index":911},{"krate":0,"index":833},{"krate":0,"index":838},{"krate":0,"index":914},{"krate":0,"index":916},{"krate":0,"index":918},{"krate":0,"index":920},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":928},{"krate":0,"index":930},{"krate":0,"index":932},{"krate":0,"index":843},{"krate":0,"index":848},{"krate":0,"index":935},{"krate":0,"index":937},{"krate":0,"index":939},{"krate":0,"index":941},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":949},{"krate":0,"index":951},{"krate":0,"index":953},{"krate":0,"index":853},{"krate":0,"index":858},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":960},{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":970},{"krate":0,"index":972},{"krate":0,"index":974},{"krate":0,"index":863},{"krate":0,"index":868},{"krate":0,"index":977},{"krate":0,"index":979},{"krate":0,"index":981},{"krate":0,"index":983},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":991},{"krate":0,"index":993},{"krate":0,"index":995},{"krate":0,"index":873},{"krate":0,"index":878},{"krate":0,"index":998},{"krate":0,"index":1000},{"krate":0,"index":1002},{"krate":0,"index":1004},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1012},{"krate":0,"index":1014},{"krate":0,"index":1016},{"krate":0,"index":883},{"krate":0,"index":888}],"decl_id":null,"docs":" Various kinds of associativity and `Indices` implementations.\n","sig":null,"attributes":[{"value":"/ Various kinds of associativity and `Indices` implementations.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\indices.rs","byte_start":40814,"byte_end":40879,"line_start":1,"line_end":1,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\indices.rs","byte_start":42225,"byte_end":42241,"line_start":50,"line_end":50,"column_start":5,"column_end":21},"name":"HashDirectMapped","qualname":"::indices::HashDirectMapped","value":"HashDirectMapped {  }","parent":null,"children":[{"krate":0,"index":637}],"decl_id":null,"docs":" Direct-mapped (i.e. one-way associative) caching based on the key's\n `Hash` implementation.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\indices.rs","byte_start":42425,"byte_end":42435,"line_start":55,"line_end":55,"column_start":5,"column_end":15},"name":"HashTwoWay","qualname":"::indices::HashTwoWay","value":"HashTwoWay {  }","parent":null,"children":[{"krate":0,"index":670}],"decl_id":null,"docs":" Two-way set associative caching based on the key's `Hash`\n implementation.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":701},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\indices.rs","byte_start":42620,"byte_end":42631,"line_start":60,"line_end":60,"column_start":5,"column_end":16},"name":"HashFourWay","qualname":"::indices::HashFourWay","value":"HashFourWay {  }","parent":null,"children":[{"krate":0,"index":703}],"decl_id":null,"docs":" Four-way set associative caching based on the key's `Hash`\n implementation.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":734},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\indices.rs","byte_start":42817,"byte_end":42829,"line_start":65,"line_end":65,"column_start":5,"column_end":17},"name":"HashEightWay","qualname":"::indices::HashEightWay","value":"HashEightWay {  }","parent":null,"children":[{"krate":0,"index":736}],"decl_id":null,"docs":" Eight-way set associative caching based on the key's `Hash`\n implementation.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":767},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\indices.rs","byte_start":43017,"byte_end":43031,"line_start":70,"line_end":70,"column_start":5,"column_end":19},"name":"HashSixteenWay","qualname":"::indices::HashSixteenWay","value":"HashSixteenWay {  }","parent":null,"children":[{"krate":0,"index":769}],"decl_id":null,"docs":" Sixteen-way set associative caching based on the key's `Hash`\n implementation.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":800},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\indices.rs","byte_start":43207,"byte_end":43223,"line_start":74,"line_end":74,"column_start":5,"column_end":21},"name":"HashThirtyTwoWay","qualname":"::indices::HashThirtyTwoWay","value":"HashThirtyTwoWay {  }","parent":null,"children":[{"krate":0,"index":802}],"decl_id":null,"docs":" 32-way set associative caching based on the key's `Hash` implementation.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\indices.rs","byte_start":44927,"byte_end":44946,"line_start":127,"line_end":127,"column_start":5,"column_end":24},"name":"PointerDirectMapped","qualname":"::indices::PointerDirectMapped","value":"","parent":null,"children":[],"decl_id":null,"docs":" Direct-mapped (i.e. one-way associative) caching based on the key's\n pointer value.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":914},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\indices.rs","byte_start":45114,"byte_end":45127,"line_start":131,"line_end":131,"column_start":5,"column_end":18},"name":"PointerTwoWay","qualname":"::indices::PointerTwoWay","value":"","parent":null,"children":[],"decl_id":null,"docs":" Two-way set associative caching based on the key's pointer value.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":935},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\indices.rs","byte_start":45296,"byte_end":45310,"line_start":135,"line_end":135,"column_start":5,"column_end":19},"name":"PointerFourWay","qualname":"::indices::PointerFourWay","value":"","parent":null,"children":[],"decl_id":null,"docs":" Four-way set associative caching based on the key's pointer value.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":956},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\indices.rs","byte_start":45480,"byte_end":45495,"line_start":139,"line_end":139,"column_start":5,"column_end":20},"name":"PointerEightWay","qualname":"::indices::PointerEightWay","value":"","parent":null,"children":[],"decl_id":null,"docs":" Eight-way set associative caching based on the key's pointer value.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":977},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\indices.rs","byte_start":45667,"byte_end":45684,"line_start":143,"line_end":143,"column_start":5,"column_end":22},"name":"PointerSixteenWay","qualname":"::indices::PointerSixteenWay","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sixteen-way set associative caching based on the key's pointer value.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":998},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\indices.rs","byte_start":45852,"byte_end":45871,"line_start":147,"line_end":147,"column_start":5,"column_end":24},"name":"PointerThirtyTwoWay","qualname":"::indices::PointerThirtyTwoWay","value":"","parent":null,"children":[],"decl_id":null,"docs":" 32-way set associative caching based on the key's pointer value.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iter","value":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":83},{"krate":0,"index":93},{"krate":0,"index":1019},{"krate":0,"index":1025},{"krate":0,"index":102},{"krate":0,"index":109},{"krate":0,"index":1030},{"krate":0,"index":1036},{"krate":0,"index":112},{"krate":0,"index":119},{"krate":0,"index":1041},{"krate":0,"index":1046},{"krate":0,"index":122},{"krate":0,"index":128}],"decl_id":null,"docs":" Various iterator implementations and type definitions for\n `AssociativeCache`.\n","sig":null,"attributes":[{"value":"/ Various iterator implementations and type definitions for","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":47448,"byte_end":47509,"line_start":1,"line_end":1,"column_start":1,"column_end":62}},{"value":"/ `AssociativeCache`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":47510,"byte_end":47533,"line_start":2,"line_end":2,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1019},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":48776,"byte_end":48780,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"Iter","qualname":"::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024}],"decl_id":null,"docs":" An iterator over shared borrows of the cache keys and values.","sig":null,"attributes":[{"value":"/ An iterator over shared borrows of the cache keys and values.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":48632,"byte_end":48697,"line_start":57,"line_end":57,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":48698,"byte_end":48701,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ See `AssociativeCache::iter` for details.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":48702,"byte_end":48747,"line_start":59,"line_end":59,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1030},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":49687,"byte_end":49694,"line_start":97,"line_end":97,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::iter::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":1034},{"krate":0,"index":1035}],"decl_id":null,"docs":" An iterator over shared borrows of the cache keys and mutable borrows of the\n cache values.","sig":null,"attributes":[{"value":"/ An iterator over shared borrows of the cache keys and mutable borrows of the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":49506,"byte_end":49586,"line_start":92,"line_end":92,"column_start":1,"column_end":81}},{"value":"/ cache values.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":49587,"byte_end":49604,"line_start":93,"line_end":93,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":49605,"byte_end":49608,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ See `AssociativeCache::iter_mut` for details.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":49609,"byte_end":49658,"line_start":95,"line_end":95,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1041},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":50596,"byte_end":50604,"line_start":132,"line_end":132,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":1044},{"krate":0,"index":1045}],"decl_id":null,"docs":" An iterator that consumes and takes ownership of a cache's keys and values.","sig":null,"attributes":[{"value":"/ An iterator that consumes and takes ownership of a cache's keys and values.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":50433,"byte_end":50512,"line_start":128,"line_end":128,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":50513,"byte_end":50516,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ See `AssociativeCache::into_iter` for details.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":50517,"byte_end":50567,"line_start":130,"line_end":130,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"replacement","qualname":"::replacement","value":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement.rs","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":194},{"krate":0,"index":1099},{"krate":0,"index":1101},{"krate":0,"index":1103},{"krate":0,"index":1105},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1114},{"krate":0,"index":1116},{"krate":0,"index":1118},{"krate":0,"index":195}],"decl_id":null,"docs":" Implementations of various replacement algorithms used when inserting into a\n full cache.\n","sig":null,"attributes":[{"value":"/ Implementations of various replacement algorithms used when inserting into a","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement.rs","byte_start":51302,"byte_end":51382,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ full cache.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement.rs","byte_start":51383,"byte_end":51398,"line_start":2,"line_end":2,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lru","qualname":"::replacement::lru","value":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":1050},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":1060},{"krate":0,"index":1062},{"krate":0,"index":1066},{"krate":0,"index":1068},{"krate":0,"index":1071},{"krate":0,"index":1074},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":181},{"krate":0,"index":1077},{"krate":0,"index":1079},{"krate":0,"index":1081},{"krate":0,"index":1083},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1092},{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":186}],"decl_id":null,"docs":" Least recently used (LRU) replacement policy implementation and traits for\n working with LRU timestamps.\n","sig":null,"attributes":[{"value":"/ Least recently used (LRU) replacement policy implementation and traits for","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":53895,"byte_end":53973,"line_start":1,"line_end":1,"column_start":1,"column_end":79}},{"value":"/ working with LRU timestamps.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":53974,"byte_end":54006,"line_start":2,"line_end":2,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":54432,"byte_end":54444,"line_start":15,"line_end":15,"column_start":11,"column_end":23},"name":"LruTimestamp","qualname":"::replacement::lru::LruTimestamp","value":"LruTimestamp","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157}],"decl_id":null,"docs":" A trait for anything that has a timestamp that we can use with an LRU cache\n replacement policy.","sig":null,"attributes":[{"value":"/ A trait for anything that has a timestamp that we can use with an LRU cache","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":54101,"byte_end":54180,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ replacement policy.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":54181,"byte_end":54204,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":54205,"byte_end":54208,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Don't already have a timestamp in your cache value? Consider using the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":54209,"byte_end":54283,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ `WithLruTimestamp<T>` wrapper type around your cache value. That is likely a","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":54284,"byte_end":54364,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ little easier than implementing this trait yourself.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":54365,"byte_end":54421,"line_start":14,"line_end":14,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":54651,"byte_end":54660,"line_start":20,"line_end":20,"column_start":10,"column_end":19},"name":"Timestamp","qualname":"::replacement::lru::LruTimestamp::Timestamp","value":"type Timestamp: PartialOrd;","parent":{"krate":0,"index":154},"children":[],"decl_id":null,"docs":" The timestamp type that will be compared.","sig":null,"attributes":[{"value":"/ The timestamp type that will be compared.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":54451,"byte_end":54496,"line_start":16,"line_end":16,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":54501,"byte_end":54504,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ The entry with smallest timestamp value (according to its `PartialOrd`","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":54509,"byte_end":54583,"line_start":18,"line_end":18,"column_start":5,"column_end":79}},{"value":"/ implementation) is the one that will be replaced.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":54588,"byte_end":54641,"line_start":19,"line_end":19,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":54724,"byte_end":54737,"line_start":23,"line_end":23,"column_start":8,"column_end":21},"name":"get_timestamp","qualname":"::replacement::lru::LruTimestamp::get_timestamp","value":"pub fn get_timestamp(&Self) -> &Self::Timestamp","parent":{"krate":0,"index":154},"children":[],"decl_id":null,"docs":" Get this cache value's timestamp.\n","sig":null,"attributes":[{"value":"/ Get this cache value's timestamp.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":54679,"byte_end":54716,"line_start":22,"line_end":22,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":55085,"byte_end":55101,"line_start":31,"line_end":31,"column_start":8,"column_end":24},"name":"update_timestamp","qualname":"::replacement::lru::LruTimestamp::update_timestamp","value":"pub fn update_timestamp(&Self)","parent":{"krate":0,"index":154},"children":[],"decl_id":null,"docs":" Update this cache value's timestamp.","sig":null,"attributes":[{"value":"/ Update this cache value's timestamp.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":54771,"byte_end":54811,"line_start":25,"line_end":25,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":54816,"byte_end":54819,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Note that this takes `&self`, not `&mut self`, because this is called on","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":54824,"byte_end":54900,"line_start":27,"line_end":27,"column_start":5,"column_end":81}},{"value":"/ all cache hits, where we don't necessarily have `&mut` access to the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":54905,"byte_end":54977,"line_start":28,"line_end":28,"column_start":5,"column_end":77}},{"value":"/ cache. It is up to implementors to use internal mutability to update the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":54982,"byte_end":55058,"line_start":29,"line_end":29,"column_start":5,"column_end":81}},{"value":"/ timestamp.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":55063,"byte_end":55077,"line_start":30,"line_end":30,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1050},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":55927,"byte_end":55943,"line_start":60,"line_end":60,"column_start":12,"column_end":28},"name":"WithLruTimestamp","qualname":"::replacement::lru::WithLruTimestamp","value":"WithLruTimestamp {  }","parent":null,"children":[{"krate":0,"index":1052},{"krate":0,"index":1053}],"decl_id":null,"docs":" A wrapper around a `T` cache value that maintains a timestamp for use with\n LRU cache replacement policies.","sig":null,"attributes":[{"value":"/ A wrapper around a `T` cache value that maintains a timestamp for use with","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":55113,"byte_end":55191,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ LRU cache replacement policies.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":55192,"byte_end":55227,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":55228,"byte_end":55231,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Provides `Deref[Mut]` and `As{Ref,Mut}` implementations, so it is easy to","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":55232,"byte_end":55309,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ drop in with minimal source changes.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":55310,"byte_end":55350,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":55351,"byte_end":55354,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ You can recover ownership of the inner `T` value via","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":55355,"byte_end":55411,"line_start":40,"line_end":40,"column_start":1,"column_end":57}},{"value":"/ `WithLruTimestamp::into_inner(x)` once a value has been removed from the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":55412,"byte_end":55488,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ cache.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":55489,"byte_end":55499,"line_start":42,"line_end":42,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":55500,"byte_end":55503,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":55504,"byte_end":55517,"line_start":44,"line_end":44,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":55518,"byte_end":55521,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":55522,"byte_end":55529,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ use associative_cache::*;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":55530,"byte_end":55559,"line_start":47,"line_end":47,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":55560,"byte_end":55563,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ let cache = AssociativeCache::<","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":55564,"byte_end":55599,"line_start":49,"line_end":49,"column_start":1,"column_end":36}},{"value":"/     String,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":55600,"byte_end":55615,"line_start":50,"line_end":50,"column_start":1,"column_end":16}},{"value":"/     // Wrap your cache value in `WithLruTimestamp`...","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":55616,"byte_end":55673,"line_start":51,"line_end":51,"column_start":1,"column_end":58}},{"value":"/     WithLruTimestamp<usize>,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":55674,"byte_end":55706,"line_start":52,"line_end":52,"column_start":1,"column_end":33}},{"value":"/     Capacity128,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":55707,"byte_end":55727,"line_start":53,"line_end":53,"column_start":1,"column_end":21}},{"value":"/     HashEightWay,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":55728,"byte_end":55749,"line_start":54,"line_end":54,"column_start":1,"column_end":22}},{"value":"/     // ... and take advantage of LRU cache replacement!","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":55750,"byte_end":55809,"line_start":55,"line_end":55,"column_start":1,"column_end":60}},{"value":"/     LruReplacement,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":55810,"byte_end":55833,"line_start":56,"line_end":56,"column_start":1,"column_end":24}},{"value":"/ >::default();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":55834,"byte_end":55851,"line_start":57,"line_end":57,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":55852,"byte_end":55859,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":57212,"byte_end":57215,"line_start":127,"line_end":127,"column_start":12,"column_end":15},"name":"new","qualname":"<WithLruTimestamp<T>>::new","value":"pub fn new(T) -> WithLruTimestamp<T>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `WithLruTimestamp` wrapper around an inner value.","sig":null,"attributes":[{"value":"/ Construct a new `WithLruTimestamp` wrapper around an inner value.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":56924,"byte_end":56993,"line_start":116,"line_end":116,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":56998,"byte_end":57001,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":57006,"byte_end":57020,"line_start":118,"line_end":118,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":57025,"byte_end":57028,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":57033,"byte_end":57040,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/ use associative_cache::*;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":57045,"byte_end":57074,"line_start":121,"line_end":121,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":57079,"byte_end":57082,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let inner = \"hello!\".to_string();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":57087,"byte_end":57124,"line_start":123,"line_end":123,"column_start":5,"column_end":42}},{"value":"/ let outer = WithLruTimestamp::new(inner);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":57129,"byte_end":57174,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":57179,"byte_end":57186,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":57191,"byte_end":57200,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":57723,"byte_end":57733,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<WithLruTimestamp<T>>::into_inner","value":"pub fn into_inner(WithLruTimestamp<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Recover the inner `T` value by consuming a `WithLruTimestamp<T>`.","sig":null,"attributes":[{"value":"/ Recover the inner `T` value by consuming a `WithLruTimestamp<T>`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":57368,"byte_end":57437,"line_start":134,"line_end":134,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":57442,"byte_end":57445,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":57450,"byte_end":57464,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":57469,"byte_end":57472,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":57477,"byte_end":57484,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/ use associative_cache::*;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":57489,"byte_end":57518,"line_start":139,"line_end":139,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":57523,"byte_end":57526,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let outer = WithLruTimestamp::new(\"hello!\".to_string());","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":57531,"byte_end":57591,"line_start":141,"line_end":141,"column_start":5,"column_end":65}},{"value":"/ let inner = WithLruTimestamp::into_inner(outer);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":57596,"byte_end":57648,"line_start":142,"line_end":142,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(inner, \"hello!\");","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":57653,"byte_end":57685,"line_start":143,"line_end":143,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":57690,"byte_end":57697,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":57702,"byte_end":57711,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1077},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":58391,"byte_end":58405,"line_start":172,"line_end":172,"column_start":12,"column_end":26},"name":"LruReplacement","qualname":"::replacement::lru::LruReplacement","value":"LruReplacement {  }","parent":null,"children":[{"krate":0,"index":1078}],"decl_id":null,"docs":" Least recently used (LRU) cache replacement.","sig":null,"attributes":[{"value":"/ Least recently used (LRU) cache replacement.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":58077,"byte_end":58125,"line_start":165,"line_end":165,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":58126,"byte_end":58129,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ When considering which one of N cache values to replace, choose the one that","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":58130,"byte_end":58210,"line_start":167,"line_end":167,"column_start":1,"column_end":81}},{"value":"/ was least recently used.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":58211,"byte_end":58239,"line_start":168,"line_end":168,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":58240,"byte_end":58243,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ Requires that the cache value type implement `LruTimestamp`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":58244,"byte_end":58308,"line_start":170,"line_end":170,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1099},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement.rs","byte_start":51908,"byte_end":51929,"line_start":17,"line_end":17,"column_start":12,"column_end":33},"name":"RoundRobinReplacement","qualname":"::replacement::RoundRobinReplacement","value":"RoundRobinReplacement {  }","parent":null,"children":[{"krate":0,"index":1100}],"decl_id":null,"docs":" Choose cache entries to replace in a round-robin order.","sig":null,"attributes":[{"value":"/ Choose cache entries to replace in a round-robin order.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement.rs","byte_start":51471,"byte_end":51530,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement.rs","byte_start":51531,"byte_end":51534,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ When considering `n` items to potentially replace, first it will replace the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement.rs","byte_start":51535,"byte_end":51615,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ `0`th item, and then next time it will replace the `1`st item, ..., then the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement.rs","byte_start":51616,"byte_end":51696,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ `n-1`th item, then the `0`th item, etc...","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement.rs","byte_start":51697,"byte_end":51742,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement.rs","byte_start":51743,"byte_end":51746,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This replacement policy is simple and fast, but can suffer from harmonics.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement.rs","byte_start":51747,"byte_end":51825,"line_start":15,"line_end":15,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1182,"byte_end":1190,"line_start":52,"line_end":52,"column_start":11,"column_end":19},"name":"Capacity","qualname":"::Capacity","value":"Capacity","parent":null,"children":[{"krate":0,"index":219}],"decl_id":null,"docs":" A constant cache capacity.","sig":null,"attributes":[{"value":"/ A constant cache capacity.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":622,"byte_end":652,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":653,"byte_end":656,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Provided `Capacity` Implementations","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":657,"byte_end":699,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":700,"byte_end":703,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This crate defines all power-of-two capacities up to 8192 as","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":704,"byte_end":768,"line_start":31,"line_end":31,"column_start":1,"column_end":65}},{"value":"/ `associative_cache::CapacityN`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":769,"byte_end":804,"line_start":32,"line_end":32,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":805,"byte_end":808,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":809,"byte_end":816,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ use associative_cache::Capacity256;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":817,"byte_end":856,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":857,"byte_end":864,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":865,"byte_end":868,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ## Defining Custom Cache Capacities","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":869,"byte_end":908,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":909,"byte_end":912,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ You may implement this trait yourself to define your own custom cache","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":913,"byte_end":986,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/ capacities:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":987,"byte_end":1002,"line_start":41,"line_end":41,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1003,"byte_end":1006,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1007,"byte_end":1014,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use associative_cache::Capacity;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1015,"byte_end":1051,"line_start":44,"line_end":44,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1052,"byte_end":1055,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ pub struct Capacity42;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1056,"byte_end":1082,"line_start":46,"line_end":46,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1083,"byte_end":1086,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ impl Capacity for Capacity42 {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1087,"byte_end":1121,"line_start":48,"line_end":48,"column_start":1,"column_end":35}},{"value":"/     const CAPACITY: usize = 42;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1122,"byte_end":1157,"line_start":49,"line_end":49,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1158,"byte_end":1163,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1164,"byte_end":1171,"line_start":51,"line_end":51,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1289,"byte_end":1297,"line_start":56,"line_end":56,"column_start":11,"column_end":19},"name":"CAPACITY","qualname":"::Capacity::CAPACITY","value":"usize","parent":{"krate":0,"index":218},"children":[],"decl_id":null,"docs":" The constant capacity for a cache.","sig":null,"attributes":[{"value":"/ The constant capacity for a cache.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1197,"byte_end":1235,"line_start":53,"line_end":53,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1240,"byte_end":1243,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Must be greater than zero.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1248,"byte_end":1278,"line_start":55,"line_end":55,"column_start":5,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":3175,"byte_end":3182,"line_start":107,"line_end":107,"column_start":11,"column_end":18},"name":"Indices","qualname":"::Indices","value":"Indices<K, C>","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224}],"decl_id":null,"docs":" Given a cache key, return all the slots within the cache where its entry\n might be.","sig":null,"attributes":[{"value":"/ Given a cache key, return all the slots within the cache where its entry","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1309,"byte_end":1385,"line_start":59,"line_end":59,"column_start":1,"column_end":77}},{"value":"/ might be.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1386,"byte_end":1399,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1400,"byte_end":1403,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Associativity","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1404,"byte_end":1424,"line_start":62,"line_end":62,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1425,"byte_end":1428,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The associativity of a cache is how many slots in the cache a key might","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1429,"byte_end":1504,"line_start":64,"line_end":64,"column_start":1,"column_end":76}},{"value":"/ reside in. There are generally many more possible values than there is","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1505,"byte_end":1579,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ capacity in the cache. Allowing a entry to be in one of multiple slots","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1580,"byte_end":1654,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/ within the cache raises the cache hit rate, but takes a little extra time","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1655,"byte_end":1732,"line_start":67,"line_end":67,"column_start":1,"column_end":78}},{"value":"/ when querying the cache because each of those multiple slots need to be","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1733,"byte_end":1808,"line_start":68,"line_end":68,"column_start":1,"column_end":76}},{"value":"/ considered.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1809,"byte_end":1824,"line_start":69,"line_end":69,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1825,"byte_end":1828,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ * **Direct-mapped:** A cache key corresponds to only one possible slot in","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1829,"byte_end":1906,"line_start":71,"line_end":71,"column_start":1,"column_end":78}},{"value":"/   the cache.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1907,"byte_end":1923,"line_start":72,"line_end":72,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1924,"byte_end":1927,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ * **Two-way:** A cache key corresponds to two possible slots in the cache.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":1928,"byte_end":2006,"line_start":74,"line_end":74,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":2007,"byte_end":2010,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ * **Four-way:** A cache key corresponds to four possible slots in the cache.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":2011,"byte_end":2091,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":2092,"byte_end":2095,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ * Etc...","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":2096,"byte_end":2108,"line_start":78,"line_end":78,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":2109,"byte_end":2112,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ [Wikipedia has more details on cache","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":2113,"byte_end":2153,"line_start":80,"line_end":80,"column_start":1,"column_end":41}},{"value":"/ associativity.](https://en.wikipedia.org/wiki/CPU_cache#Associativity)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":2154,"byte_end":2228,"line_start":81,"line_end":81,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":2229,"byte_end":2232,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ## Provided Implementations","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":2233,"byte_end":2264,"line_start":83,"line_end":83,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":2265,"byte_end":2268,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ This crate provides two flavors of associativity out of the box:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":2269,"byte_end":2337,"line_start":85,"line_end":85,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":2338,"byte_end":2341,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ 1. `Hash`-based implementations: `HashDirectMapped` and","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":2342,"byte_end":2401,"line_start":87,"line_end":87,"column_start":1,"column_end":60}},{"value":"/    `Hash{Two,Four,Eight,Sixteen,ThirtyTwo}Way` provide various associativity","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":2402,"byte_end":2482,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/    levels based on the key's `Hash` implementation.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":2483,"byte_end":2538,"line_start":89,"line_end":89,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":2539,"byte_end":2542,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ 2. Pointer-based implementations: `PointerDirectMapped` and","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":2543,"byte_end":2606,"line_start":91,"line_end":91,"column_start":1,"column_end":64}},{"value":"/    `Pointer{Two,Four,Eight,Sixteen,ThirtyTwo}Way` provide various","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":2607,"byte_end":2676,"line_start":92,"line_end":92,"column_start":1,"column_end":70}},{"value":"/    associativity levels based on the pointer value, taking advantage of its","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":2677,"byte_end":2756,"line_start":93,"line_end":93,"column_start":1,"column_end":80}},{"value":"/    referenced type's alignment. This will generally provide faster lookups","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":2757,"byte_end":2835,"line_start":94,"line_end":94,"column_start":1,"column_end":79}},{"value":"/    than hashing, but is less general.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":2836,"byte_end":2877,"line_start":95,"line_end":95,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":2878,"byte_end":2881,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ## Custom Implementation Requirements","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":2882,"byte_end":2923,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":2924,"byte_end":2927,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ Implementations must be determinisitc.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":2928,"byte_end":2970,"line_start":99,"line_end":99,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":2971,"byte_end":2974,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ All indices yielded must be within the capacity.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":2975,"byte_end":3027,"line_start":101,"line_end":101,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":3028,"byte_end":3031,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ The iterator must always be non-empty.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":3032,"byte_end":3074,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":3075,"byte_end":3078,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ For example, to implement a two-way cache, return an iterator of two","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":3079,"byte_end":3151,"line_start":105,"line_end":105,"column_start":1,"column_end":73}},{"value":"/ indices.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":3152,"byte_end":3164,"line_start":106,"line_end":106,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":3382,"byte_end":3389,"line_start":114,"line_end":114,"column_start":10,"column_end":17},"name":"Indices","qualname":"::Indices::Indices","value":"type Indices: ExactSizeIterator<Item = usize>;","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":" The iterator over indices within the range `0..C::CAPACITY` yielding the\n slots in the cache where the key's entry might reside.\n","sig":null,"attributes":[{"value":"/ The iterator over indices within the range `0..C::CAPACITY` yielding the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":3233,"byte_end":3309,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ slots in the cache where the key's entry might reside.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":3314,"byte_end":3372,"line_start":113,"line_end":113,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":3572,"byte_end":3579,"line_start":118,"line_end":118,"column_start":8,"column_end":15},"name":"indices","qualname":"::Indices::indices","value":"pub fn indices(&K) -> Self::Indices","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":" Get the indices within the range `0..C::CAPACITY` representing slots in\n the cache where the given key's entry might reside.\n","sig":null,"attributes":[{"value":"/ Get the indices within the range `0..C::CAPACITY` representing slots in","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":3429,"byte_end":3504,"line_start":116,"line_end":116,"column_start":5,"column_end":80}},{"value":"/ the cache where the given key's entry might reside.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":3509,"byte_end":3564,"line_start":117,"line_end":117,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":3967,"byte_end":3978,"line_start":128,"line_end":128,"column_start":11,"column_end":22},"name":"Replacement","qualname":"::Replacement","value":"Replacement<V, C: Capacity>","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":232}],"decl_id":null,"docs":" Given that we need to replace a cache entry when inserting a new one, consider\n each `(index, entry)` pair and return the index whose entry should be\n replaced.","sig":null,"attributes":[{"value":"/ Given that we need to replace a cache entry when inserting a new one, consider","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":3610,"byte_end":3692,"line_start":121,"line_end":121,"column_start":1,"column_end":83}},{"value":"/ each `(index, entry)` pair and return the index whose entry should be","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":3693,"byte_end":3766,"line_start":122,"line_end":122,"column_start":1,"column_end":74}},{"value":"/ replaced.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":3767,"byte_end":3780,"line_start":123,"line_end":123,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":3781,"byte_end":3784,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ The given iterator will always be non-empty, and its indices will always be","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":3785,"byte_end":3864,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/ within the capacity, assuming the `Indices` that this is paired with is","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":3865,"byte_end":3940,"line_start":126,"line_end":126,"column_start":1,"column_end":76}},{"value":"/ conformant.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":3941,"byte_end":3956,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":4070,"byte_end":4092,"line_start":130,"line_end":130,"column_start":8,"column_end":30},"name":"choose_for_replacement","qualname":"::Replacement::choose_for_replacement","value":"pub fn choose_for_replacement<'a,\nimpl ExactSizeIterator<Item = (usize, &'a V)>: ExactSizeIterator<Item =\n(usize, &'a V)>>(&mut Self, impl ExactSizeIterator<Item = (usize, &'a V)>)\n-> usize where V: 'a","parent":{"krate":0,"index":225},"children":[],"decl_id":null,"docs":" Choose which of the given cache entries will be replaced.\n","sig":null,"attributes":[{"value":"/ Choose which of the given cache entries will be replaced.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":4001,"byte_end":4062,"line_start":129,"line_end":129,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":4288,"byte_end":4294,"line_start":138,"line_end":138,"column_start":8,"column_end":14},"name":"on_hit","qualname":"::Replacement::on_hit","value":"pub fn on_hit(&Self, &V)","parent":{"krate":0,"index":225},"children":[],"decl_id":null,"docs":" Called whenever an existing cache entry is hit.\n","sig":null,"attributes":[{"value":"/ Called whenever an existing cache entry is hit.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":4229,"byte_end":4280,"line_start":137,"line_end":137,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":4407,"byte_end":4416,"line_start":143,"line_end":143,"column_start":8,"column_end":17},"name":"on_insert","qualname":"::Replacement::on_insert","value":"pub fn on_insert(&Self, &V)","parent":{"krate":0,"index":225},"children":[],"decl_id":null,"docs":" Called whenever a new cache entry is inserted.\n","sig":null,"attributes":[{"value":"/ Called whenever a new cache entry is inserted.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":4349,"byte_end":4399,"line_start":142,"line_end":142,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1121},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":6062,"byte_end":6078,"line_start":202,"line_end":202,"column_start":12,"column_end":28},"name":"AssociativeCache","qualname":"::AssociativeCache","value":"AssociativeCache {  }","parent":null,"children":[{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131}],"decl_id":null,"docs":" A fixed-size associative cache mapping `K` keys to `V` values.","sig":null,"attributes":[{"value":"/ A fixed-size associative cache mapping `K` keys to `V` values.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":4469,"byte_end":4535,"line_start":148,"line_end":148,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":4536,"byte_end":4539,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ ## Capacity","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":4540,"byte_end":4555,"line_start":150,"line_end":150,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":4556,"byte_end":4559,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ The cache has a constant, fixed-size capacity which is controlled by the `C`","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":4560,"byte_end":4640,"line_start":152,"line_end":152,"column_start":1,"column_end":81}},{"value":"/ type parameter and the `Capacity` trait. The memory for the cache entries is","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":4641,"byte_end":4721,"line_start":153,"line_end":153,"column_start":1,"column_end":81}},{"value":"/ eagerly allocated once and never resized.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":4722,"byte_end":4767,"line_start":154,"line_end":154,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":4768,"byte_end":4771,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ ## Associativity","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":4772,"byte_end":4792,"line_start":156,"line_end":156,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":4793,"byte_end":4796,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ The cache can be configured as direct-mapped, two-way associative, four-way","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":4797,"byte_end":4876,"line_start":158,"line_end":158,"column_start":1,"column_end":80}},{"value":"/ associative, etc... via the `I` type parameter and `Indices` trait.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":4877,"byte_end":4948,"line_start":159,"line_end":159,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":4949,"byte_end":4952,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ ## Replacement Policy","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":4953,"byte_end":4978,"line_start":161,"line_end":161,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":4979,"byte_end":4982,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ Can be configured to replace the least-recently used entry, or a random","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":4983,"byte_end":5058,"line_start":163,"line_end":163,"column_start":1,"column_end":76}},{"value":"/ entry via the `R` type parameter and the `Replacement` trait.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5059,"byte_end":5124,"line_start":164,"line_end":164,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5125,"byte_end":5128,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5129,"byte_end":5144,"line_start":166,"line_end":166,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5145,"byte_end":5148,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5149,"byte_end":5156,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/ use associative_cache::*;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5157,"byte_end":5186,"line_start":169,"line_end":169,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5187,"byte_end":5190,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ // A two-way associative cache with random replacement mapping","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5191,"byte_end":5257,"line_start":171,"line_end":171,"column_start":1,"column_end":67}},{"value":"/ // `String`s to `usize`s.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5258,"byte_end":5287,"line_start":172,"line_end":172,"column_start":1,"column_end":30}},{"value":"/ let cache = AssociativeCache::<","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5288,"byte_end":5323,"line_start":173,"line_end":173,"column_start":1,"column_end":36}},{"value":"/     String,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5324,"byte_end":5339,"line_start":174,"line_end":174,"column_start":1,"column_end":16}},{"value":"/     usize,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5340,"byte_end":5354,"line_start":175,"line_end":175,"column_start":1,"column_end":15}},{"value":"/     Capacity512,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5355,"byte_end":5375,"line_start":176,"line_end":176,"column_start":1,"column_end":21}},{"value":"/     HashTwoWay,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5376,"byte_end":5395,"line_start":177,"line_end":177,"column_start":1,"column_end":20}},{"value":"/     RandomReplacement","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5396,"byte_end":5421,"line_start":178,"line_end":178,"column_start":1,"column_end":26}},{"value":"/ >::default();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5422,"byte_end":5439,"line_start":179,"line_end":179,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5440,"byte_end":5443,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ // A four-way associative cache with random replacement mapping","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5444,"byte_end":5511,"line_start":181,"line_end":181,"column_start":1,"column_end":68}},{"value":"/ // `*mut usize`s to `Vec<u8>`s.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5512,"byte_end":5547,"line_start":182,"line_end":182,"column_start":1,"column_end":36}},{"value":"/ let cache = AssociativeCache::<","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5548,"byte_end":5583,"line_start":183,"line_end":183,"column_start":1,"column_end":36}},{"value":"/     *mut usize,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5584,"byte_end":5603,"line_start":184,"line_end":184,"column_start":1,"column_end":20}},{"value":"/     Vec<u8>,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5604,"byte_end":5620,"line_start":185,"line_end":185,"column_start":1,"column_end":17}},{"value":"/     Capacity32,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5621,"byte_end":5640,"line_start":186,"line_end":186,"column_start":1,"column_end":20}},{"value":"/     PointerFourWay,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5641,"byte_end":5664,"line_start":187,"line_end":187,"column_start":1,"column_end":24}},{"value":"/     RandomReplacement","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5665,"byte_end":5690,"line_start":188,"line_end":188,"column_start":1,"column_end":26}},{"value":"/ >::default();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5691,"byte_end":5708,"line_start":189,"line_end":189,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5709,"byte_end":5712,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ // An eight-way associative, least recently used (LRU) cache mapping","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5713,"byte_end":5785,"line_start":191,"line_end":191,"column_start":1,"column_end":73}},{"value":"/ // `std::path::PathBuf`s to `std::fs::File`s.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5786,"byte_end":5835,"line_start":192,"line_end":192,"column_start":1,"column_end":50}},{"value":"/ let cache = AssociativeCache::<","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5836,"byte_end":5871,"line_start":193,"line_end":193,"column_start":1,"column_end":36}},{"value":"/     std::path::PathBuf,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5872,"byte_end":5899,"line_start":194,"line_end":194,"column_start":1,"column_end":28}},{"value":"/     WithLruTimestamp<std::fs::File>,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5900,"byte_end":5940,"line_start":195,"line_end":195,"column_start":1,"column_end":41}},{"value":"/     Capacity128,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5941,"byte_end":5961,"line_start":196,"line_end":196,"column_start":1,"column_end":21}},{"value":"/     HashEightWay,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5962,"byte_end":5983,"line_start":197,"line_end":197,"column_start":1,"column_end":22}},{"value":"/     LruReplacement,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":5984,"byte_end":6007,"line_start":198,"line_end":198,"column_start":1,"column_end":24}},{"value":"/ >::default();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":6008,"byte_end":6025,"line_start":199,"line_end":199,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":6026,"byte_end":6033,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":7329,"byte_end":7352,"line_start":253,"line_end":253,"column_start":12,"column_end":35},"name":"with_replacement_policy","qualname":"<AssociativeCache<K, V, C, I, R>>::with_replacement_policy","value":"pub fn with_replacement_policy(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an `AssociativeCache` with the given replacement policy.","sig":null,"attributes":[{"value":"/ Construct an `AssociativeCache` with the given replacement policy.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":6618,"byte_end":6688,"line_start":229,"line_end":229,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":6693,"byte_end":6696,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":6701,"byte_end":6715,"line_start":231,"line_end":231,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":6720,"byte_end":6723,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":6728,"byte_end":6735,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/ # fn foo() {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":6740,"byte_end":6756,"line_start":234,"line_end":234,"column_start":5,"column_end":21}},{"value":"/ # #[cfg(feature = \"rand\")]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":6761,"byte_end":6791,"line_start":235,"line_end":235,"column_start":5,"column_end":35}},{"value":"/ use associative_cache::*;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":6796,"byte_end":6825,"line_start":236,"line_end":236,"column_start":5,"column_end":34}},{"value":"/ use rand::{rngs::StdRng, SeedableRng};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":6830,"byte_end":6872,"line_start":237,"line_end":237,"column_start":5,"column_end":47}},{"value":"/ use std::path::PathBuf;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":6877,"byte_end":6904,"line_start":238,"line_end":238,"column_start":5,"column_end":32}},{"value":"/ use std::fs::File;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":6909,"byte_end":6931,"line_start":239,"line_end":239,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":6936,"byte_end":6939,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ // Note: `RandomReplacement` requires the \"rand\" feature to be enabled.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":6944,"byte_end":7019,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/ let policy = RandomReplacement::with_rng(StdRng::seed_from_u64(42));","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":7024,"byte_end":7096,"line_start":242,"line_end":242,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":7101,"byte_end":7104,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ let cache = AssociativeCache::<","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":7109,"byte_end":7144,"line_start":244,"line_end":244,"column_start":5,"column_end":40}},{"value":"/     PathBuf,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":7149,"byte_end":7165,"line_start":245,"line_end":245,"column_start":5,"column_end":21}},{"value":"/     File,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":7170,"byte_end":7183,"line_start":246,"line_end":246,"column_start":5,"column_end":18}},{"value":"/     Capacity128,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":7188,"byte_end":7208,"line_start":247,"line_end":247,"column_start":5,"column_end":25}},{"value":"/     HashEightWay,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":7213,"byte_end":7234,"line_start":248,"line_end":248,"column_start":5,"column_end":26}},{"value":"/     _,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":7239,"byte_end":7249,"line_start":249,"line_end":249,"column_start":5,"column_end":15}},{"value":"/ >::with_replacement_policy(policy);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":7254,"byte_end":7293,"line_start":250,"line_end":250,"column_start":5,"column_end":44}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":7298,"byte_end":7305,"line_start":251,"line_end":251,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":7310,"byte_end":7317,"line_start":252,"line_end":252,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":7835,"byte_end":7853,"line_start":270,"line_end":270,"column_start":12,"column_end":30},"name":"replacement_policy","qualname":"<AssociativeCache<K, V, C, I, R>>::replacement_policy","value":"pub fn replacement_policy(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to this cache's replacement policy.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to this cache's replacement policy.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":7747,"byte_end":7809,"line_start":268,"line_end":268,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":7814,"byte_end":7823,"line_start":269,"line_end":269,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8005,"byte_end":8027,"line_start":276,"line_end":276,"column_start":12,"column_end":34},"name":"replacement_policy_mut","qualname":"<AssociativeCache<K, V, C, I, R>>::replacement_policy_mut","value":"pub fn replacement_policy_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Get an exclusive reference to this cache's replacement policy.\n","sig":null,"attributes":[{"value":"/ Get an exclusive reference to this cache's replacement policy.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":7913,"byte_end":7979,"line_start":274,"line_end":274,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":7984,"byte_end":7993,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8183,"byte_end":8191,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"capacity","qualname":"<AssociativeCache<K, V, C, I, R>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get this cache's constant capacity, aka `C::CAPACITY`.\n","sig":null,"attributes":[{"value":"/ Get this cache's constant capacity, aka `C::CAPACITY`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8099,"byte_end":8157,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8162,"byte_end":8171,"line_start":281,"line_end":281,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9511,"byte_end":9514,"line_start":326,"line_end":326,"column_start":12,"column_end":15},"name":"len","qualname":"<AssociativeCache<K, V, C, I, R>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the number of entries in this cache.","sig":null,"attributes":[{"value":"/ Get the number of entries in this cache.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8294,"byte_end":8338,"line_start":287,"line_end":287,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8343,"byte_end":8346,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ This is always less than or equal to the capacity.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8351,"byte_end":8405,"line_start":289,"line_end":289,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8410,"byte_end":8413,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8418,"byte_end":8432,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8437,"byte_end":8440,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8445,"byte_end":8452,"line_start":293,"line_end":293,"column_start":5,"column_end":12}},{"value":"/ use associative_cache::*;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8457,"byte_end":8486,"line_start":294,"line_end":294,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8491,"byte_end":8494,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ let mut cache = AssociativeCache::<","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8499,"byte_end":8538,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/     String,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8543,"byte_end":8558,"line_start":297,"line_end":297,"column_start":5,"column_end":20}},{"value":"/     usize,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8563,"byte_end":8577,"line_start":298,"line_end":298,"column_start":5,"column_end":19}},{"value":"/     Capacity16,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8582,"byte_end":8601,"line_start":299,"line_end":299,"column_start":5,"column_end":24}},{"value":"/     HashDirectMapped,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8606,"byte_end":8631,"line_start":300,"line_end":300,"column_start":5,"column_end":30}},{"value":"/     RoundRobinReplacement,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8636,"byte_end":8666,"line_start":301,"line_end":301,"column_start":5,"column_end":35}},{"value":"/ >::default();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8671,"byte_end":8688,"line_start":302,"line_end":302,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8693,"byte_end":8696,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ // Initially, the cache is empty.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8701,"byte_end":8738,"line_start":304,"line_end":304,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(cache.len(), 0);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8743,"byte_end":8774,"line_start":305,"line_end":305,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8779,"byte_end":8782,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let old_entry = cache.insert(\"hi\".to_string(), 2);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8787,"byte_end":8841,"line_start":307,"line_end":307,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8846,"byte_end":8849,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ // We know the cache was empty, so there can't be an old entry that was","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8854,"byte_end":8929,"line_start":309,"line_end":309,"column_start":5,"column_end":80}},{"value":"/ // replaced.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8934,"byte_end":8950,"line_start":310,"line_end":310,"column_start":5,"column_end":21}},{"value":"/ assert!(old_entry.is_none());","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8955,"byte_end":8988,"line_start":311,"line_end":311,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":8993,"byte_end":8996,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ // And now the length is 1.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9001,"byte_end":9032,"line_start":313,"line_end":313,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(cache.len(), 1);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9037,"byte_end":9068,"line_start":314,"line_end":314,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9073,"byte_end":9076,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ // Insert another entry. If this doesn't conflict with the existing","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9081,"byte_end":9152,"line_start":316,"line_end":316,"column_start":5,"column_end":76}},{"value":"/ // entry, then we should have a length of 2. If it did conflict, and we","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9157,"byte_end":9232,"line_start":317,"line_end":317,"column_start":5,"column_end":80}},{"value":"/ // replaced the old entry, then we should still have a length of 1.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9237,"byte_end":9308,"line_start":318,"line_end":318,"column_start":5,"column_end":76}},{"value":"/ if cache.insert(\"bye\".to_string(), 3).is_none() {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9313,"byte_end":9366,"line_start":319,"line_end":319,"column_start":5,"column_end":58}},{"value":"/     assert_eq!(cache.len(), 2);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9371,"byte_end":9406,"line_start":320,"line_end":320,"column_start":5,"column_end":40}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9411,"byte_end":9423,"line_start":321,"line_end":321,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(cache.len(), 1);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9428,"byte_end":9463,"line_start":322,"line_end":322,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9468,"byte_end":9473,"line_start":323,"line_end":323,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9478,"byte_end":9485,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9490,"byte_end":9499,"line_start":325,"line_end":325,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":10619,"byte_end":10625,"line_start":362,"line_end":362,"column_start":12,"column_end":18},"name":"insert","qualname":"<AssociativeCache<K, V, C, I, R>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<(K, V)> where I: Indices<K, C>,\nK: PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Insert a new entry into the cache.","sig":null,"attributes":[{"value":"/ Insert a new entry into the cache.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9613,"byte_end":9651,"line_start":331,"line_end":331,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9656,"byte_end":9659,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ If there is an old entry for this key, or if another entry ends up","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9664,"byte_end":9734,"line_start":333,"line_end":333,"column_start":5,"column_end":75}},{"value":"/ getting replaced by this new one, return the old entry.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9739,"byte_end":9798,"line_start":334,"line_end":334,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9803,"byte_end":9806,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9811,"byte_end":9825,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9830,"byte_end":9833,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9838,"byte_end":9845,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"/ use associative_cache::*;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9850,"byte_end":9879,"line_start":339,"line_end":339,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9884,"byte_end":9887,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ let mut cache = AssociativeCache::<","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9892,"byte_end":9931,"line_start":341,"line_end":341,"column_start":5,"column_end":44}},{"value":"/     String,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9936,"byte_end":9951,"line_start":342,"line_end":342,"column_start":5,"column_end":20}},{"value":"/     usize,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9956,"byte_end":9970,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/     Capacity1,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9975,"byte_end":9993,"line_start":344,"line_end":344,"column_start":5,"column_end":23}},{"value":"/     HashDirectMapped,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":9998,"byte_end":10023,"line_start":345,"line_end":345,"column_start":5,"column_end":30}},{"value":"/     RoundRobinReplacement,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":10028,"byte_end":10058,"line_start":346,"line_end":346,"column_start":5,"column_end":35}},{"value":"/ >::default();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":10063,"byte_end":10080,"line_start":347,"line_end":347,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":10085,"byte_end":10088,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ // Insert an entry for \"hi\" into the cache.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":10093,"byte_end":10140,"line_start":349,"line_end":349,"column_start":5,"column_end":52}},{"value":"/ let old_entry = cache.insert(\"hi\".to_string(), 42);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":10145,"byte_end":10200,"line_start":350,"line_end":350,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":10205,"byte_end":10208,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ // The cache was empty, so no old entry.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":10213,"byte_end":10257,"line_start":352,"line_end":352,"column_start":5,"column_end":49}},{"value":"/ assert!(old_entry.is_none());","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":10262,"byte_end":10295,"line_start":353,"line_end":353,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":10300,"byte_end":10303,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ // Insert an entry for \"bye\" into the cache.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":10308,"byte_end":10356,"line_start":355,"line_end":355,"column_start":5,"column_end":53}},{"value":"/ let old_entry = cache.insert(\"bye\".to_string(), 1337);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":10361,"byte_end":10419,"line_start":356,"line_end":356,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":10424,"byte_end":10427,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ // Because the cache only has a capacity of one, we replaced \"hi\" when","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":10432,"byte_end":10506,"line_start":358,"line_end":358,"column_start":5,"column_end":79}},{"value":"/ // inserting \"bye\".","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":10511,"byte_end":10534,"line_start":359,"line_end":359,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(old_entry, Some((\"hi\".to_string(), 42)));","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":10539,"byte_end":10595,"line_start":360,"line_end":360,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":10600,"byte_end":10607,"line_start":361,"line_end":361,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":14210,"byte_end":14213,"line_start":466,"line_end":466,"column_start":12,"column_end":15},"name":"get","qualname":"<AssociativeCache<K, V, C, I, R>>::get","value":"pub fn get<Q>(&Self, &Q) -> Option<&V> where K: Borrow<Q>, I: Indices<Q, C>,\nQ: ?Sized + PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the value for a given key, if it exists in the\n cache.","sig":null,"attributes":[{"value":"/ Get a shared reference to the value for a given key, if it exists in the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":13495,"byte_end":13571,"line_start":441,"line_end":441,"column_start":5,"column_end":81}},{"value":"/ cache.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":13576,"byte_end":13586,"line_start":442,"line_end":442,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":13591,"byte_end":13594,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":13599,"byte_end":13613,"line_start":444,"line_end":444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":13618,"byte_end":13621,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":13626,"byte_end":13633,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ use associative_cache::*;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":13638,"byte_end":13667,"line_start":447,"line_end":447,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":13672,"byte_end":13675,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let mut cache = AssociativeCache::<","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":13680,"byte_end":13719,"line_start":449,"line_end":449,"column_start":5,"column_end":44}},{"value":"/     String,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":13724,"byte_end":13739,"line_start":450,"line_end":450,"column_start":5,"column_end":20}},{"value":"/     usize,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":13744,"byte_end":13758,"line_start":451,"line_end":451,"column_start":5,"column_end":19}},{"value":"/     Capacity1,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":13763,"byte_end":13781,"line_start":452,"line_end":452,"column_start":5,"column_end":23}},{"value":"/     HashDirectMapped,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":13786,"byte_end":13811,"line_start":453,"line_end":453,"column_start":5,"column_end":30}},{"value":"/     RoundRobinReplacement,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":13816,"byte_end":13846,"line_start":454,"line_end":454,"column_start":5,"column_end":35}},{"value":"/ >::default();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":13851,"byte_end":13868,"line_start":455,"line_end":455,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":13873,"byte_end":13876,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ // Returns `None` if there is no cache entry for the key.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":13881,"byte_end":13942,"line_start":457,"line_end":457,"column_start":5,"column_end":66}},{"value":"/ assert!(cache.get(\"hi\").is_none());","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":13947,"byte_end":13986,"line_start":458,"line_end":458,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":13991,"byte_end":13994,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ cache.insert(\"hi\".to_string(), 1234);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":13999,"byte_end":14040,"line_start":460,"line_end":460,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":14045,"byte_end":14048,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ // Otherwise, returns the value if there is an entry for the key.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":14053,"byte_end":14122,"line_start":462,"line_end":462,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(cache.get(\"hi\"), Some(&1234));","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":14127,"byte_end":14172,"line_start":463,"line_end":463,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":14177,"byte_end":14184,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":14189,"byte_end":14198,"line_start":465,"line_end":465,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":15714,"byte_end":15721,"line_start":520,"line_end":520,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AssociativeCache<K, V, C, I, R>>::get_mut","value":"pub fn get_mut<Q>(&mut Self, &Q) -> Option<&mut V> where K: Borrow<Q>,\nI: Indices<Q, C>, Q: ?Sized + PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Get an exclusive reference to the value for a given key, if it exists in\n the cache.","sig":null,"attributes":[{"value":"/ Get an exclusive reference to the value for a given key, if it exists in","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":14883,"byte_end":14959,"line_start":491,"line_end":491,"column_start":5,"column_end":81}},{"value":"/ the cache.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":14964,"byte_end":14978,"line_start":492,"line_end":492,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":14983,"byte_end":14986,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":14991,"byte_end":15005,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":15010,"byte_end":15013,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":15018,"byte_end":15025,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/ use associative_cache::*;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":15030,"byte_end":15059,"line_start":497,"line_end":497,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":15064,"byte_end":15067,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ let mut cache = AssociativeCache::<","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":15072,"byte_end":15111,"line_start":499,"line_end":499,"column_start":5,"column_end":44}},{"value":"/     String,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":15116,"byte_end":15131,"line_start":500,"line_end":500,"column_start":5,"column_end":20}},{"value":"/     usize,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":15136,"byte_end":15150,"line_start":501,"line_end":501,"column_start":5,"column_end":19}},{"value":"/     Capacity1,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":15155,"byte_end":15173,"line_start":502,"line_end":502,"column_start":5,"column_end":23}},{"value":"/     HashDirectMapped,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":15178,"byte_end":15203,"line_start":503,"line_end":503,"column_start":5,"column_end":30}},{"value":"/     RoundRobinReplacement,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":15208,"byte_end":15238,"line_start":504,"line_end":504,"column_start":5,"column_end":35}},{"value":"/ >::default();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":15243,"byte_end":15260,"line_start":505,"line_end":505,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":15265,"byte_end":15268,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ // Returns `None` if there is no cache entry for the key.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":15273,"byte_end":15334,"line_start":507,"line_end":507,"column_start":5,"column_end":66}},{"value":"/ assert!(cache.get_mut(\"hi\").is_none());","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":15339,"byte_end":15382,"line_start":508,"line_end":508,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":15387,"byte_end":15390,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ cache.insert(\"hi\".to_string(), 1234);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":15395,"byte_end":15436,"line_start":510,"line_end":510,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":15441,"byte_end":15444,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ // Otherwise, returns the value if there is an entry for the key.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":15449,"byte_end":15518,"line_start":512,"line_end":512,"column_start":5,"column_end":74}},{"value":"/ let val = cache.get_mut(\"hi\").unwrap();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":15523,"byte_end":15566,"line_start":513,"line_end":513,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(*val, 1234);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":15571,"byte_end":15598,"line_start":514,"line_end":514,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":15603,"byte_end":15606,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ // And we can assign to the cache value.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":15611,"byte_end":15655,"line_start":516,"line_end":516,"column_start":5,"column_end":49}},{"value":"/ *val = 5678;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":15660,"byte_end":15676,"line_start":517,"line_end":517,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":15681,"byte_end":15688,"line_start":518,"line_end":518,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":15693,"byte_end":15702,"line_start":519,"line_end":519,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":17344,"byte_end":17350,"line_start":576,"line_end":576,"column_start":12,"column_end":18},"name":"remove","qualname":"<AssociativeCache<K, V, C, I, R>>::remove","value":"pub fn remove<Q>(&mut Self, &Q) -> Option<V> where K: Borrow<Q>,\nI: Indices<Q, C>, Q: ?Sized + PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Remove an entry from the cache.","sig":null,"attributes":[{"value":"/ Remove an entry from the cache.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":16466,"byte_end":16501,"line_start":546,"line_end":546,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":16506,"byte_end":16509,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ If an entry for the key existed in the cache, it is removed and `Some`","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":16514,"byte_end":16588,"line_start":548,"line_end":548,"column_start":5,"column_end":79}},{"value":"/ is returned. Otherwise, `None` is returned.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":16593,"byte_end":16640,"line_start":549,"line_end":549,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":16645,"byte_end":16648,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":16653,"byte_end":16667,"line_start":551,"line_end":551,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":16672,"byte_end":16675,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":16680,"byte_end":16687,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/ use associative_cache::*;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":16692,"byte_end":16721,"line_start":554,"line_end":554,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":16726,"byte_end":16729,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ let mut cache = AssociativeCache::<","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":16734,"byte_end":16773,"line_start":556,"line_end":556,"column_start":5,"column_end":44}},{"value":"/     String,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":16778,"byte_end":16793,"line_start":557,"line_end":557,"column_start":5,"column_end":20}},{"value":"/     usize,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":16798,"byte_end":16812,"line_start":558,"line_end":558,"column_start":5,"column_end":19}},{"value":"/     Capacity1,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":16817,"byte_end":16835,"line_start":559,"line_end":559,"column_start":5,"column_end":23}},{"value":"/     HashDirectMapped,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":16840,"byte_end":16865,"line_start":560,"line_end":560,"column_start":5,"column_end":30}},{"value":"/     RoundRobinReplacement,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":16870,"byte_end":16900,"line_start":561,"line_end":561,"column_start":5,"column_end":35}},{"value":"/ >::default();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":16905,"byte_end":16922,"line_start":562,"line_end":562,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":16927,"byte_end":16930,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ // Returns `None` if there is no cache entry for the key and therefore","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":16935,"byte_end":17009,"line_start":564,"line_end":564,"column_start":5,"column_end":79}},{"value":"/ // nothing was removed.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":17014,"byte_end":17041,"line_start":565,"line_end":565,"column_start":5,"column_end":32}},{"value":"/ assert!(cache.remove(\"hi\").is_none());","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":17046,"byte_end":17088,"line_start":566,"line_end":566,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":17093,"byte_end":17096,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ cache.insert(\"hi\".to_string(), 1234);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":17101,"byte_end":17142,"line_start":568,"line_end":568,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":17147,"byte_end":17150,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ // Otherwise, returns the value that was removed if there was an entry","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":17155,"byte_end":17229,"line_start":570,"line_end":570,"column_start":5,"column_end":79}},{"value":"/ // for the key.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":17234,"byte_end":17253,"line_start":571,"line_end":571,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(cache.remove(\"hi\"), Some(1234));","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":17258,"byte_end":17305,"line_start":572,"line_end":572,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":17311,"byte_end":17318,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":17323,"byte_end":17332,"line_start":575,"line_end":575,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":18780,"byte_end":18786,"line_start":627,"line_end":627,"column_start":12,"column_end":18},"name":"retain","qualname":"<AssociativeCache<K, V, C, I, R>>::retain","value":"pub fn retain<impl FnMut(&K, &mut V) -> bool: FnMut(&K, &mut V) ->\nbool>(&mut Self, impl FnMut(&K, &mut V) -> bool)","parent":null,"children":[],"decl_id":null,"docs":" Retain only the cache entries specified by the predicate.","sig":null,"attributes":[{"value":"/ Retain only the cache entries specified by the predicate.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":18038,"byte_end":18099,"line_start":601,"line_end":601,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":18104,"byte_end":18107,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ Calls `f` with each entry in the cache, and removes all entries where","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":18112,"byte_end":18185,"line_start":603,"line_end":603,"column_start":5,"column_end":78}},{"value":"/ `f` returned false.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":18190,"byte_end":18213,"line_start":604,"line_end":604,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":18218,"byte_end":18221,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":18226,"byte_end":18240,"line_start":606,"line_end":606,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":18245,"byte_end":18248,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":18253,"byte_end":18260,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ use associative_cache::*;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":18265,"byte_end":18294,"line_start":609,"line_end":609,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":18299,"byte_end":18302,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ let mut cache = AssociativeCache::<","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":18307,"byte_end":18346,"line_start":611,"line_end":611,"column_start":5,"column_end":44}},{"value":"/     char,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":18351,"byte_end":18364,"line_start":612,"line_end":612,"column_start":5,"column_end":18}},{"value":"/     usize,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":18369,"byte_end":18383,"line_start":613,"line_end":613,"column_start":5,"column_end":19}},{"value":"/     Capacity8,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":18388,"byte_end":18406,"line_start":614,"line_end":614,"column_start":5,"column_end":23}},{"value":"/     HashDirectMapped,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":18411,"byte_end":18436,"line_start":615,"line_end":615,"column_start":5,"column_end":30}},{"value":"/     RoundRobinReplacement,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":18441,"byte_end":18471,"line_start":616,"line_end":616,"column_start":5,"column_end":35}},{"value":"/ >::default();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":18476,"byte_end":18493,"line_start":617,"line_end":617,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":18498,"byte_end":18501,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ for (i, ch) in \"I let my tape rock, 'til my tape popped\".char_indices() {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":18506,"byte_end":18583,"line_start":619,"line_end":619,"column_start":5,"column_end":82}},{"value":"/     cache.insert(ch, i);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":18588,"byte_end":18616,"line_start":620,"line_end":620,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":18621,"byte_end":18626,"line_start":621,"line_end":621,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":18631,"byte_end":18634,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in cache.iter() {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":18639,"byte_end":18675,"line_start":623,"line_end":623,"column_start":5,"column_end":41}},{"value":"/     println!(\"Last saw character '{}' at index {}\", key, val);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":18680,"byte_end":18746,"line_start":624,"line_end":624,"column_start":5,"column_end":71}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":18751,"byte_end":18756,"line_start":625,"line_end":625,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":18761,"byte_end":18768,"line_start":626,"line_end":626,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":19762,"byte_end":19767,"line_start":663,"line_end":663,"column_start":12,"column_end":17},"name":"entry","qualname":"<AssociativeCache<K, V, C, I, R>>::entry","value":"pub fn entry<Q>(&mut Self, &Q) -> Entry<, K, V, C, I, R> where K: Borrow<Q>,\nI: Indices<Q, C>, Q: ?Sized + PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Get the key's corresponding slot within the cache for in-place mutation\n and performing get-or-create operations.","sig":null,"attributes":[{"value":"/ Get the key's corresponding slot within the cache for in-place mutation","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":19063,"byte_end":19138,"line_start":638,"line_end":638,"column_start":5,"column_end":80}},{"value":"/ and performing get-or-create operations.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":19143,"byte_end":19187,"line_start":639,"line_end":639,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":19192,"byte_end":19195,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":19200,"byte_end":19214,"line_start":641,"line_end":641,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":19219,"byte_end":19222,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":19227,"byte_end":19234,"line_start":643,"line_end":643,"column_start":5,"column_end":12}},{"value":"/ use associative_cache::*;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":19239,"byte_end":19268,"line_start":644,"line_end":644,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":19273,"byte_end":19276,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ let mut cache = AssociativeCache::<","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":19281,"byte_end":19320,"line_start":646,"line_end":646,"column_start":5,"column_end":44}},{"value":"/     String,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":19325,"byte_end":19340,"line_start":647,"line_end":647,"column_start":5,"column_end":20}},{"value":"/     usize,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":19345,"byte_end":19359,"line_start":648,"line_end":648,"column_start":5,"column_end":19}},{"value":"/     Capacity4,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":19364,"byte_end":19382,"line_start":649,"line_end":649,"column_start":5,"column_end":23}},{"value":"/     HashTwoWay,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":19387,"byte_end":19406,"line_start":650,"line_end":650,"column_start":5,"column_end":24}},{"value":"/     RoundRobinReplacement,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":19411,"byte_end":19441,"line_start":651,"line_end":651,"column_start":5,"column_end":35}},{"value":"/ >::default();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":19446,"byte_end":19463,"line_start":652,"line_end":652,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":19468,"byte_end":19471,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ for word in \"she sells sea shells down by the sea shore\".split_whitespace() {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":19476,"byte_end":19557,"line_start":654,"line_end":654,"column_start":5,"column_end":86}},{"value":"/     let count = cache.entry(word).or_insert_with(","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":19562,"byte_end":19615,"line_start":655,"line_end":655,"column_start":5,"column_end":58}},{"value":"/         || word.to_string(),","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":19620,"byte_end":19652,"line_start":656,"line_end":656,"column_start":5,"column_end":37}},{"value":"/         || 0,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":19657,"byte_end":19674,"line_start":657,"line_end":657,"column_start":5,"column_end":22}},{"value":"/     );","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":19679,"byte_end":19689,"line_start":658,"line_end":658,"column_start":5,"column_end":15}},{"value":"/     *count += 1;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":19694,"byte_end":19714,"line_start":659,"line_end":659,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":19719,"byte_end":19724,"line_start":660,"line_end":660,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":19729,"byte_end":19736,"line_start":661,"line_end":661,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":19741,"byte_end":19750,"line_start":662,"line_end":662,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":22959,"byte_end":22963,"line_start":760,"line_end":760,"column_start":12,"column_end":16},"name":"iter","qualname":"<AssociativeCache<K, V, C, I, R>>::iter","value":"pub fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over shared references to this cache's keys and values.","sig":null,"attributes":[{"value":"/ Iterate over shared references to this cache's keys and values.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":22141,"byte_end":22208,"line_start":733,"line_end":733,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":22213,"byte_end":22216,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":22221,"byte_end":22235,"line_start":735,"line_end":735,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":22240,"byte_end":22243,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":22248,"byte_end":22255,"line_start":737,"line_end":737,"column_start":5,"column_end":12}},{"value":"/ use associative_cache::*;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":22260,"byte_end":22289,"line_start":738,"line_end":738,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":22294,"byte_end":22297,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ let mut cache = AssociativeCache::<","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":22302,"byte_end":22341,"line_start":740,"line_end":740,"column_start":5,"column_end":44}},{"value":"/     String,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":22346,"byte_end":22361,"line_start":741,"line_end":741,"column_start":5,"column_end":20}},{"value":"/     usize,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":22366,"byte_end":22380,"line_start":742,"line_end":742,"column_start":5,"column_end":19}},{"value":"/     Capacity4,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":22385,"byte_end":22403,"line_start":743,"line_end":743,"column_start":5,"column_end":23}},{"value":"/     HashTwoWay,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":22408,"byte_end":22427,"line_start":744,"line_end":744,"column_start":5,"column_end":24}},{"value":"/     RoundRobinReplacement,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":22432,"byte_end":22462,"line_start":745,"line_end":745,"column_start":5,"column_end":35}},{"value":"/ >::default();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":22467,"byte_end":22484,"line_start":746,"line_end":746,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":22489,"byte_end":22492,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ // First, insert some entries into the cache. Note that this is more","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":22497,"byte_end":22569,"line_start":748,"line_end":748,"column_start":5,"column_end":77}},{"value":"/ // entries than the cache has capacity for.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":22574,"byte_end":22621,"line_start":749,"line_end":749,"column_start":5,"column_end":52}},{"value":"/ for s in vec![\"red\", \"blue\", \"green\", \"pink\", \"purple\", \"orange\"] {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":22626,"byte_end":22697,"line_start":750,"line_end":750,"column_start":5,"column_end":76}},{"value":"/     cache.insert(s.to_string(), s.len());","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":22702,"byte_end":22747,"line_start":751,"line_end":751,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":22752,"byte_end":22757,"line_start":752,"line_end":752,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":22762,"byte_end":22765,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ // Now iterate over the entries that are still in the cache:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":22770,"byte_end":22834,"line_start":754,"line_end":754,"column_start":5,"column_end":69}},{"value":"/ for (k, v) in cache.iter() {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":22839,"byte_end":22871,"line_start":755,"line_end":755,"column_start":5,"column_end":37}},{"value":"/     println!(\"{} -> {}\", k, v);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":22876,"byte_end":22911,"line_start":756,"line_end":756,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":22916,"byte_end":22921,"line_start":757,"line_end":757,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":22926,"byte_end":22933,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":22938,"byte_end":22947,"line_start":759,"line_end":759,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":24005,"byte_end":24013,"line_start":795,"line_end":795,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<AssociativeCache<K, V, C, I, R>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over shared references to this cache's keys and exclusive\n references to its values.","sig":null,"attributes":[{"value":"/ Iterate over shared references to this cache's keys and exclusive","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23047,"byte_end":23116,"line_start":764,"line_end":764,"column_start":5,"column_end":74}},{"value":"/ references to its values.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23121,"byte_end":23150,"line_start":765,"line_end":765,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23155,"byte_end":23158,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23163,"byte_end":23177,"line_start":767,"line_end":767,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23182,"byte_end":23185,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23190,"byte_end":23197,"line_start":769,"line_end":769,"column_start":5,"column_end":12}},{"value":"/ use associative_cache::*;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23202,"byte_end":23231,"line_start":770,"line_end":770,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23236,"byte_end":23239,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ let mut cache = AssociativeCache::<","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23244,"byte_end":23283,"line_start":772,"line_end":772,"column_start":5,"column_end":44}},{"value":"/     String,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23288,"byte_end":23303,"line_start":773,"line_end":773,"column_start":5,"column_end":20}},{"value":"/     usize,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23308,"byte_end":23322,"line_start":774,"line_end":774,"column_start":5,"column_end":19}},{"value":"/     Capacity4,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23327,"byte_end":23345,"line_start":775,"line_end":775,"column_start":5,"column_end":23}},{"value":"/     HashTwoWay,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23350,"byte_end":23369,"line_start":776,"line_end":776,"column_start":5,"column_end":24}},{"value":"/     RoundRobinReplacement,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23374,"byte_end":23404,"line_start":777,"line_end":777,"column_start":5,"column_end":35}},{"value":"/ >::default();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23409,"byte_end":23426,"line_start":778,"line_end":778,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23431,"byte_end":23434,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ // First, insert some entries into the cache. Note that this is more","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23439,"byte_end":23511,"line_start":780,"line_end":780,"column_start":5,"column_end":77}},{"value":"/ // entries than the cache has capacity for.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23516,"byte_end":23563,"line_start":781,"line_end":781,"column_start":5,"column_end":52}},{"value":"/ for s in vec![\"red\", \"blue\", \"green\", \"pink\", \"purple\", \"orange\"] {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23568,"byte_end":23639,"line_start":782,"line_end":782,"column_start":5,"column_end":76}},{"value":"/     cache.insert(s.to_string(), s.len());","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23644,"byte_end":23689,"line_start":783,"line_end":783,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23694,"byte_end":23699,"line_start":784,"line_end":784,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23704,"byte_end":23707,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ // Now iterate over the entries that are still in the cache and mutate","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23712,"byte_end":23786,"line_start":786,"line_end":786,"column_start":5,"column_end":79}},{"value":"/ // them:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23791,"byte_end":23803,"line_start":787,"line_end":787,"column_start":5,"column_end":17}},{"value":"/ for (k, v) in cache.iter_mut() {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23808,"byte_end":23844,"line_start":788,"line_end":788,"column_start":5,"column_end":41}},{"value":"/     println!(\"{} was {}...\", k, v);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23849,"byte_end":23888,"line_start":789,"line_end":789,"column_start":5,"column_end":44}},{"value":"/     *v += 1;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23893,"byte_end":23909,"line_start":790,"line_end":790,"column_start":5,"column_end":21}},{"value":"/     println!(\"...but now it's {}!\", v);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23914,"byte_end":23957,"line_start":791,"line_end":791,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23962,"byte_end":23967,"line_start":792,"line_end":792,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23972,"byte_end":23979,"line_start":793,"line_end":793,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":23984,"byte_end":23993,"line_start":794,"line_end":794,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":24898,"byte_end":24907,"line_start":824,"line_end":824,"column_start":12,"column_end":21},"name":"into_iter","qualname":"<AssociativeCache<K, V, C, I, R>>::into_iter","value":"pub fn into_iter(Self) -> IntoIter<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Consume this cache, and iterate over its keys and values.","sig":null,"attributes":[{"value":"/ Consume this cache, and iterate over its keys and values.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":24108,"byte_end":24169,"line_start":799,"line_end":799,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":24174,"byte_end":24177,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":24182,"byte_end":24196,"line_start":801,"line_end":801,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":24201,"byte_end":24204,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":24209,"byte_end":24216,"line_start":803,"line_end":803,"column_start":5,"column_end":12}},{"value":"/ use associative_cache::*;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":24221,"byte_end":24250,"line_start":804,"line_end":804,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":24255,"byte_end":24258,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ let mut cache = AssociativeCache::<","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":24263,"byte_end":24302,"line_start":806,"line_end":806,"column_start":5,"column_end":44}},{"value":"/     String,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":24307,"byte_end":24322,"line_start":807,"line_end":807,"column_start":5,"column_end":20}},{"value":"/     usize,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":24327,"byte_end":24341,"line_start":808,"line_end":808,"column_start":5,"column_end":19}},{"value":"/     Capacity4,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":24346,"byte_end":24364,"line_start":809,"line_end":809,"column_start":5,"column_end":23}},{"value":"/     HashTwoWay,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":24369,"byte_end":24388,"line_start":810,"line_end":810,"column_start":5,"column_end":24}},{"value":"/     RoundRobinReplacement,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":24393,"byte_end":24423,"line_start":811,"line_end":811,"column_start":5,"column_end":35}},{"value":"/ >::default();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":24428,"byte_end":24445,"line_start":812,"line_end":812,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":24450,"byte_end":24453,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ // First, insert some entries into the cache. Note that this is more","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":24458,"byte_end":24530,"line_start":814,"line_end":814,"column_start":5,"column_end":77}},{"value":"/ // entries than the cache has capacity for.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":24535,"byte_end":24582,"line_start":815,"line_end":815,"column_start":5,"column_end":52}},{"value":"/ for s in vec![\"red\", \"blue\", \"green\", \"pink\", \"purple\", \"orange\"] {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":24587,"byte_end":24658,"line_start":816,"line_end":816,"column_start":5,"column_end":76}},{"value":"/     cache.insert(s.to_string(), s.len());","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":24663,"byte_end":24708,"line_start":817,"line_end":817,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":24713,"byte_end":24718,"line_start":818,"line_end":818,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":24723,"byte_end":24726,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ // Not possible with `iter` or `iter_mut` without cloning.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":24731,"byte_end":24793,"line_start":820,"line_end":820,"column_start":5,"column_end":67}},{"value":"/ let v: Vec<(String, usize)> = cache.into_iter().collect();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":24798,"byte_end":24860,"line_start":821,"line_end":821,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":24865,"byte_end":24872,"line_start":822,"line_end":822,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":24877,"byte_end":24886,"line_start":823,"line_end":823,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":35718,"byte_end":35723,"line_start":21,"line_end":21,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":36409,"byte_end":36414,"line_start":50,"line_end":50,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":48319,"byte_end":48335,"line_start":40,"line_end":40,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":48889,"byte_end":48893,"line_start":66,"line_end":66,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":49487,"byte_end":49491,"line_start":90,"line_end":90,"column_start":34,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":49806,"byte_end":49813,"line_start":102,"line_end":102,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":50411,"byte_end":50418,"line_start":126,"line_end":126,"column_start":34,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":50703,"byte_end":50711,"line_start":137,"line_end":137,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":51283,"byte_end":51291,"line_start":161,"line_end":161,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":56016,"byte_end":56032,"line_start":65,"line_end":65,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":56257,"byte_end":56273,"line_start":78,"line_end":78,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":56372,"byte_end":56388,"line_start":85,"line_end":85,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":56496,"byte_end":56512,"line_start":92,"line_end":92,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":56632,"byte_end":56648,"line_start":101,"line_end":101,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":56761,"byte_end":56777,"line_start":108,"line_end":108,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":56898,"byte_end":56914,"line_start":115,"line_end":115,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":57823,"byte_end":57839,"line_start":151,"line_end":151,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":58462,"byte_end":58476,"line_start":176,"line_end":176,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement.rs","byte_start":51982,"byte_end":52003,"line_start":21,"line_end":21,"column_start":34,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":6318,"byte_end":6334,"line_start":214,"line_end":214,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":6531,"byte_end":6547,"line_start":224,"line_end":224,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":354,"byte_end":362,"line_start":10,"line_end":10,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":372,"byte_end":377,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":8}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":387,"byte_end":394,"line_start":12,"line_end":12,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":42}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":404,"byte_end":408,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":71}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":418,"byte_end":429,"line_start":14,"line_end":14,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":131}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement.rs","byte_start":51449,"byte_end":51452,"line_start":6,"line_end":6,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":139}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":35718,"byte_end":35723,"line_start":21,"line_end":21,"column_start":40,"column_end":45},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":13},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\entry.rs","byte_start":36409,"byte_end":36414,"line_start":50,"line_end":50,"column_start":25,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":13},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":48319,"byte_end":48335,"line_start":40,"line_end":40,"column_start":38,"column_end":54},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1121},"to":{"krate":2,"index":7790}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":48889,"byte_end":48893,"line_start":66,"line_end":66,"column_start":29,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1019},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":49487,"byte_end":49491,"line_start":90,"line_end":90,"column_start":34,"column_end":38},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1019},"to":{"krate":2,"index":7859}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":49806,"byte_end":49813,"line_start":102,"line_end":102,"column_start":29,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1030},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":50411,"byte_end":50418,"line_start":126,"line_end":126,"column_start":34,"column_end":41},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1030},"to":{"krate":2,"index":7859}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":50703,"byte_end":50711,"line_start":137,"line_end":137,"column_start":25,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1041},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\iter.rs","byte_start":51283,"byte_end":51291,"line_start":161,"line_end":161,"column_start":34,"column_end":42},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1041},"to":{"krate":2,"index":7859}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":56016,"byte_end":56032,"line_start":65,"line_end":65,"column_start":21,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1050},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":56257,"byte_end":56273,"line_start":78,"line_end":78,"column_start":22,"column_end":38},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1050},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":56372,"byte_end":56388,"line_start":85,"line_end":85,"column_start":22,"column_end":38},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1050},"to":{"krate":2,"index":2957}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":56496,"byte_end":56512,"line_start":92,"line_end":92,"column_start":19,"column_end":35},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1050},"to":{"krate":2,"index":3276}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":56632,"byte_end":56648,"line_start":101,"line_end":101,"column_start":22,"column_end":38},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1050},"to":{"krate":2,"index":3289}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":56761,"byte_end":56777,"line_start":108,"line_end":108,"column_start":21,"column_end":37},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1050},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":56898,"byte_end":56914,"line_start":115,"line_end":115,"column_start":9,"column_end":25},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":57823,"byte_end":57839,"line_start":151,"line_end":151,"column_start":26,"column_end":42},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1050},"to":{"krate":0,"index":154}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement\\lru.rs","byte_start":58462,"byte_end":58476,"line_start":176,"line_end":176,"column_start":34,"column_end":48},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1077},"to":{"krate":0,"index":225}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\replacement.rs","byte_start":51982,"byte_end":52003,"line_start":21,"line_end":21,"column_start":34,"column_end":55},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1099},"to":{"krate":0,"index":225}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":6318,"byte_end":6334,"line_start":214,"line_end":214,"column_start":33,"column_end":49},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1121},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\associative-cache-1.0.1\\src\\lib.rs","byte_start":6531,"byte_end":6547,"line_start":224,"line_end":224,"column_start":21,"column_end":37},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1121},"to":{"krate":4294967295,"index":4294967295}}]}