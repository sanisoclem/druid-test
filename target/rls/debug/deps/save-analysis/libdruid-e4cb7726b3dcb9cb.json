{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0","program":"C:\\Users\\Mel\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","druid","--edition=2018","C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"gtk\"","-C","metadata=e4cb7726b3dcb9cb","-C","extra-filename=-e4cb7726b3dcb9cb","--out-dir","c:\\Users\\Mel\\Workspace\\src\\druid-test\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Mel\\Workspace\\src\\druid-test\\target\\rls\\debug\\deps","--extern","druid_derive=c:\\Users\\Mel\\Workspace\\src\\druid-test\\target\\rls\\debug\\deps\\druid_derive-6207f0f2289a96fb.dll","--extern","druid_shell=c:\\Users\\Mel\\Workspace\\src\\druid-test\\target\\rls\\debug\\deps\\libdruid_shell-971ab4a749970983.rmeta","--extern","fluent_bundle=c:\\Users\\Mel\\Workspace\\src\\druid-test\\target\\rls\\debug\\deps\\libfluent_bundle-efbf183ff0fdd934.rmeta","--extern","fluent_langneg=c:\\Users\\Mel\\Workspace\\src\\druid-test\\target\\rls\\debug\\deps\\libfluent_langneg-c7f42944a0414e3a.rmeta","--extern","fluent_syntax=c:\\Users\\Mel\\Workspace\\src\\druid-test\\target\\rls\\debug\\deps\\libfluent_syntax-c40ab690fc6af18e.rmeta","--extern","fnv=c:\\Users\\Mel\\Workspace\\src\\druid-test\\target\\rls\\debug\\deps\\libfnv-ab2a3b0eaa27097e.rmeta","--extern","instant=c:\\Users\\Mel\\Workspace\\src\\druid-test\\target\\rls\\debug\\deps\\libinstant-bf5a4f1556516713.rmeta","--extern","log=c:\\Users\\Mel\\Workspace\\src\\druid-test\\target\\rls\\debug\\deps\\liblog-426e82032e1efc24.rmeta","--extern","simple_logger=c:\\Users\\Mel\\Workspace\\src\\druid-test\\target\\rls\\debug\\deps\\libsimple_logger-671d2f9e9cb43f2f.rmeta","--extern","unic_langid=c:\\Users\\Mel\\Workspace\\src\\druid-test\\target\\rls\\debug\\deps\\libunic_langid-295c90005147e315.rmeta","--extern","unicode_segmentation=c:\\Users\\Mel\\Workspace\\src\\druid-test\\target\\rls\\debug\\deps\\libunicode_segmentation-4ad1d1d36336e609.rmeta","--extern","xi_unicode=c:\\Users\\Mel\\Workspace\\src\\druid-test\\target\\rls\\debug\\deps\\libxi_unicode-b967043df5faa29c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Mel\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Mel\\Workspace\\src\\druid-test\\target\\rls\\debug\\deps\\libdruid-e4cb7726b3dcb9cb.rmeta"},"prelude":{"crate_id":{"name":"druid","disambiguator":[8549737279410033388,0]},"crate_root":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src","external_crates":[{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":16,"id":{"name":"druid_derive","disambiguator":[17522712162079084352,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":17,"id":{"name":"druid_shell","disambiguator":[9499392256530309027,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":18,"id":{"name":"kurbo","disambiguator":[5010526016023080910,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":19,"id":{"name":"arrayvec","disambiguator":[11869820467143519165,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":20,"id":{"name":"piet_common","disambiguator":[18202235544195513478,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":21,"id":{"name":"piet","disambiguator":[564749458606093819,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":22,"id":{"name":"unic_bidi","disambiguator":[4290865715644393019,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":23,"id":{"name":"matches","disambiguator":[11742292483754859867,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":24,"id":{"name":"unic_ucd_bidi","disambiguator":[1739005136826551913,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":25,"id":{"name":"unic_char_property","disambiguator":[3293273116407127513,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":26,"id":{"name":"unic_char_range","disambiguator":[13071008769244943828,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":27,"id":{"name":"unic_ucd_version","disambiguator":[6237951608837753264,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":28,"id":{"name":"unic_common","disambiguator":[15684250729501370860,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":29,"id":{"name":"cfg_if","disambiguator":[17941200006019888196,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":30,"id":{"name":"piet_direct2d","disambiguator":[496169889588396312,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":31,"id":{"name":"winapi","disambiguator":[8894642383818239120,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":32,"id":{"name":"wio","disambiguator":[11305119036766531406,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":33,"id":{"name":"dwrote","disambiguator":[13058291098872950687,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":34,"id":{"name":"lazy_static","disambiguator":[17608421772039054989,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":35,"id":{"name":"libc","disambiguator":[4245277395814316444,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":36,"id":{"name":"associative_cache","disambiguator":[13027251333247036097,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":37,"id":{"name":"utf16_lit","disambiguator":[15550279425797022644,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","num":38,"id":{"name":"instant","disambiguator":[16329396685048429385,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","num":39,"id":{"name":"log","disambiguator":[500290388089087630,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":40,"id":{"name":"keyboard_types","disambiguator":[15922364135933744062,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":41,"id":{"name":"bitflags","disambiguator":[3297404274272602299,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":42,"id":{"name":"scopeguard","disambiguator":[7268028644899051130,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","num":43,"id":{"name":"anyhow","disambiguator":[11903041336312033233,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\bloom.rs","num":44,"id":{"name":"fnv","disambiguator":[1167338349777724636,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","num":45,"id":{"name":"fluent_bundle","disambiguator":[16299778507257193029,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","num":46,"id":{"name":"rental","disambiguator":[17532350026808189521,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","num":47,"id":{"name":"rental_impl","disambiguator":[13072101200361889929,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","num":48,"id":{"name":"stable_deref_trait","disambiguator":[14589942504604065301,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","num":49,"id":{"name":"intl_memoizer","disambiguator":[11241988318588793604,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","num":50,"id":{"name":"unic_langid","disambiguator":[13925516835224490434,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","num":51,"id":{"name":"unic_langid_impl","disambiguator":[2578597134442101438,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","num":52,"id":{"name":"tinystr","disambiguator":[9443739606078173494,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","num":53,"id":{"name":"type_map","disambiguator":[3336351917265666195,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","num":54,"id":{"name":"rustc_hash","disambiguator":[917962479219036198,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","num":55,"id":{"name":"fluent_syntax","disambiguator":[17707366983783845940,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","num":56,"id":{"name":"intl_pluralrules","disambiguator":[13782317060589013605,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","num":57,"id":{"name":"fluent_langneg","disambiguator":[12423928135028616766,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","num":58,"id":{"name":"smallvec","disambiguator":[10277631765112003654,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\backspace.rs","num":59,"id":{"name":"xi_unicode","disambiguator":[17674536133136176186,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","num":60,"id":{"name":"unicode_segmentation","disambiguator":[806825352757772140,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","num":61,"id":{"name":"simple_logger","disambiguator":[3347432645163099000,0]}}],"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":596,"byte_end":8156,"line_start":15,"line_end":231,"column_start":1,"column_end":35}},"imports":[{"kind":"Use","ref_id":{"krate":16,"index":186},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":5076,"byte_end":5080,"line_start":134,"line_end":134,"column_start":23,"column_end":27},"alias_span":null,"name":"Lens","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":0},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":5146,"byte_end":5151,"line_start":138,"line_end":138,"column_start":23,"column_end":28},"alias_span":null,"name":"kurbo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":0},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":5153,"byte_end":5157,"line_start":138,"line_end":138,"column_start":30,"column_end":34},"alias_span":null,"name":"piet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6006},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":10024,"byte_end":10032,"line_start":52,"line_end":52,"column_start":16,"column_end":24},"alias_span":null,"name":"Constant","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":6007},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":10024,"byte_end":10032,"line_start":52,"line_end":52,"column_start":16,"column_end":24},"alias_span":null,"name":"Constant","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":5947},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":10034,"byte_end":10039,"line_start":52,"line_end":52,"column_start":26,"column_end":31},"alias_span":null,"name":"Deref","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":5948},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":10034,"byte_end":10039,"line_start":52,"line_end":52,"column_start":26,"column_end":31},"alias_span":null,"name":"Deref","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":10041,"byte_end":10046,"line_start":52,"line_end":52,"column_start":33,"column_end":38},"alias_span":null,"name":"Field","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":5972},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":10048,"byte_end":10056,"line_start":52,"line_end":52,"column_start":40,"column_end":48},"alias_span":null,"name":"Identity","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":5973},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":10048,"byte_end":10056,"line_start":52,"line_end":52,"column_start":40,"column_end":48},"alias_span":null,"name":"Identity","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":5979},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":10058,"byte_end":10063,"line_start":52,"line_end":52,"column_start":50,"column_end":55},"alias_span":null,"name":"InArc","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":5961},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":10065,"byte_end":10070,"line_start":52,"line_end":52,"column_start":57,"column_end":62},"alias_span":null,"name":"Index","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":5931},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":10072,"byte_end":10075,"line_start":52,"line_end":52,"column_start":64,"column_end":67},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":5954},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":10077,"byte_end":10080,"line_start":52,"line_end":52,"column_start":69,"column_end":72},"alias_span":null,"name":"Ref","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":5955},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":10077,"byte_end":10080,"line_start":52,"line_end":52,"column_start":69,"column_end":72},"alias_span":null,"name":"Ref","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":5915},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":10082,"byte_end":10086,"line_start":52,"line_end":52,"column_start":74,"column_end":78},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":5990},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":10088,"byte_end":10092,"line_start":52,"line_end":52,"column_start":80,"column_end":84},"alias_span":null,"name":"Unit","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":5991},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":10088,"byte_end":10092,"line_start":52,"line_end":52,"column_start":80,"column_end":84},"alias_span":null,"name":"Unit","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":10125,"byte_end":10129,"line_start":54,"line_end":54,"column_start":16,"column_end":20},"alias_span":null,"name":"Lens","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":10131,"byte_end":10138,"line_start":54,"line_end":54,"column_start":22,"column_end":29},"alias_span":null,"name":"LensExt","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":16,"index":184},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":163475,"byte_end":163479,"line_start":25,"line_end":25,"column_start":23,"column_end":27},"alias_span":null,"name":"Data","value":"","parent":{"krate":0,"index":1067}},{"kind":"Use","ref_id":{"krate":0,"index":6825},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\mod.rs","byte_start":296578,"byte_end":296587,"line_start":29,"line_end":29,"column_start":27,"column_end":36},"alias_span":null,"name":"Attribute","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":6786},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\mod.rs","byte_start":296589,"byte_end":296603,"line_start":29,"line_end":29,"column_start":38,"column_end":52},"alias_span":null,"name":"AttributeSpans","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":1964},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\mod.rs","byte_start":296631,"byte_end":296658,"line_start":30,"line_end":30,"column_start":26,"column_end":53},"alias_span":null,"name":"offset_for_delete_backwards","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":1987},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\mod.rs","byte_start":296690,"byte_end":296702,"line_start":31,"line_end":31,"column_start":31,"column_end":43},"alias_span":null,"name":"EditableText","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":2036},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\mod.rs","byte_start":296704,"byte_end":296722,"line_start":31,"line_end":31,"column_start":45,"column_end":63},"alias_span":null,"name":"EditableTextCursor","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":6883},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\mod.rs","byte_start":296724,"byte_end":296736,"line_start":31,"line_end":31,"column_start":65,"column_end":77},"alias_span":null,"name":"StringCursor","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":6902},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\mod.rs","byte_start":296770,"byte_end":296784,"line_start":32,"line_end":32,"column_start":32,"column_end":46},"alias_span":null,"name":"FontDescriptor","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":6937},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\mod.rs","byte_start":296809,"byte_end":296822,"line_start":33,"line_end":33,"column_start":24,"column_end":37},"alias_span":null,"name":"LayoutMetrics","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":6925},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\mod.rs","byte_start":296824,"byte_end":296834,"line_start":33,"line_end":33,"column_start":39,"column_end":49},"alias_span":null,"name":"TextLayout","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":2361},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\mod.rs","byte_start":296862,"byte_end":296870,"line_start":34,"line_end":34,"column_start":26,"column_end":34},"alias_span":null,"name":"movement","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":6949},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\mod.rs","byte_start":296872,"byte_end":296880,"line_start":34,"line_end":34,"column_start":36,"column_end":44},"alias_span":null,"name":"Movement","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":6978},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\mod.rs","byte_start":296908,"byte_end":296917,"line_start":35,"line_end":35,"column_start":26,"column_end":35},"alias_span":null,"name":"Selection","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":7047},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\mod.rs","byte_start":296946,"byte_end":296960,"line_start":36,"line_end":36,"column_start":28,"column_end":42},"alias_span":null,"name":"BasicTextInput","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":7048},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\mod.rs","byte_start":296946,"byte_end":296960,"line_start":36,"line_end":36,"column_start":28,"column_end":42},"alias_span":null,"name":"BasicTextInput","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":6996},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\mod.rs","byte_start":296962,"byte_end":296972,"line_start":36,"line_end":36,"column_start":44,"column_end":54},"alias_span":null,"name":"EditAction","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":7035},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\mod.rs","byte_start":296974,"byte_end":296985,"line_start":36,"line_end":36,"column_start":56,"column_end":67},"alias_span":null,"name":"MouseAction","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":2461},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\mod.rs","byte_start":296987,"byte_end":296996,"line_start":36,"line_end":36,"column_start":69,"column_end":78},"alias_span":null,"name":"TextInput","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":6890},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\mod.rs","byte_start":297015,"byte_end":297021,"line_start":37,"line_end":37,"column_start":17,"column_end":23},"alias_span":null,"name":"Editor","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":2425},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\mod.rs","byte_start":297041,"byte_end":297047,"line_start":38,"line_end":38,"column_start":19,"column_end":25},"alias_span":null,"name":"ArcStr","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":6987},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\mod.rs","byte_start":297049,"byte_end":297057,"line_start":38,"line_end":38,"column_start":27,"column_end":35},"alias_span":null,"name":"RichText","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":2423},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\mod.rs","byte_start":297059,"byte_end":297070,"line_start":38,"line_end":38,"column_start":37,"column_end":48},"alias_span":null,"name":"TextStorage","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":3187},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397270,"byte_end":397275,"line_start":57,"line_end":57,"column_start":22,"column_end":27},"alias_span":null,"name":"Image","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":2622},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397292,"byte_end":397297,"line_start":58,"line_end":58,"column_start":16,"column_end":21},"alias_span":null,"name":"Align","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":2685},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397315,"byte_end":397321,"line_start":59,"line_end":59,"column_start":17,"column_end":23},"alias_span":null,"name":"Button","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":2744},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397341,"byte_end":397349,"line_start":60,"line_end":60,"column_start":19,"column_end":27},"alias_span":null,"name":"Checkbox","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":2786},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397366,"byte_end":397371,"line_start":61,"line_end":61,"column_start":16,"column_end":21},"alias_span":null,"name":"Click","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":2829},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397392,"byte_end":397399,"line_start":62,"line_end":62,"column_start":20,"column_end":27},"alias_span":null,"name":"ClipBox","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":7055},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397401,"byte_end":397409,"line_start":62,"line_end":62,"column_start":29,"column_end":37},"alias_span":null,"name":"Viewport","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":7069},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397428,"byte_end":397437,"line_start":63,"line_end":63,"column_start":17,"column_end":26},"alias_span":null,"name":"FillStrat","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":2901},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397458,"byte_end":397467,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"alias_span":null,"name":"Container","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":2935},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397490,"byte_end":397500,"line_start":65,"line_end":65,"column_start":22,"column_end":32},"alias_span":null,"name":"Controller","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":2941},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397502,"byte_end":397516,"line_start":65,"line_end":65,"column_start":34,"column_end":48},"alias_span":null,"name":"ControllerHost","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":2972},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397535,"byte_end":397541,"line_start":66,"line_end":66,"column_start":17,"column_end":23},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":3006},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397562,"byte_end":397570,"line_start":67,"line_end":67,"column_start":20,"column_end":28},"alias_span":null,"name":"EnvScope","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":7098},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397587,"byte_end":397591,"line_start":68,"line_end":68,"column_start":16,"column_end":20},"alias_span":null,"name":"Axis","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":7113},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397593,"byte_end":397611,"line_start":68,"line_end":68,"column_start":22,"column_end":40},"alias_span":null,"name":"CrossAxisAlignment","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":3048},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397613,"byte_end":397617,"line_start":68,"line_end":68,"column_start":42,"column_end":46},"alias_span":null,"name":"Flex","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":7090},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397619,"byte_end":397629,"line_start":68,"line_end":68,"column_start":48,"column_end":58},"alias_span":null,"name":"FlexParams","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":7132},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397631,"byte_end":397648,"line_start":68,"line_end":68,"column_start":60,"column_end":77},"alias_span":null,"name":"MainAxisAlignment","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":3146},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397677,"byte_end":397692,"line_start":69,"line_end":69,"column_start":27,"column_end":42},"alias_span":null,"name":"IdentityWrapper","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":3278},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397710,"byte_end":397715,"line_start":70,"line_end":70,"column_start":17,"column_end":22},"alias_span":null,"name":"Label","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":3288},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397717,"byte_end":397726,"line_start":70,"line_end":70,"column_start":24,"column_end":33},"alias_span":null,"name":"LabelText","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":7155},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397728,"byte_end":397740,"line_start":70,"line_end":70,"column_start":35,"column_end":47},"alias_span":null,"name":"LineBreaking","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":3284},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397742,"byte_end":397750,"line_start":70,"line_end":70,"column_start":49,"column_end":57},"alias_span":null,"name":"RawLabel","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":3415},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397772,"byte_end":397780,"line_start":71,"line_end":71,"column_start":20,"column_end":28},"alias_span":null,"name":"LensWrap","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":3510},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397797,"byte_end":397801,"line_start":72,"line_end":72,"column_start":16,"column_end":20},"alias_span":null,"name":"List","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":3530},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397803,"byte_end":397811,"line_start":72,"line_end":72,"column_start":22,"column_end":30},"alias_span":null,"name":"ListIter","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":3580},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397831,"byte_end":397838,"line_start":73,"line_end":73,"column_start":18,"column_end":25},"alias_span":null,"name":"Padding","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":3628},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397858,"byte_end":397873,"line_start":74,"line_end":74,"column_start":19,"column_end":34},"alias_span":null,"name":"BackgroundBrush","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":3624},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397875,"byte_end":397882,"line_start":74,"line_end":74,"column_start":36,"column_end":43},"alias_span":null,"name":"Painter","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":3697},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397900,"byte_end":397905,"line_start":75,"line_end":75,"column_start":16,"column_end":21},"alias_span":null,"name":"Parse","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":7172},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397929,"byte_end":397940,"line_start":76,"line_end":76,"column_start":23,"column_end":34},"alias_span":null,"name":"ProgressBar","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":7173},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397929,"byte_end":397940,"line_start":76,"line_end":76,"column_start":23,"column_end":34},"alias_span":null,"name":"ProgressBar","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":3778},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397958,"byte_end":397963,"line_start":77,"line_end":77,"column_start":17,"column_end":22},"alias_span":null,"name":"Radio","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":7180},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397965,"byte_end":397975,"line_start":77,"line_end":77,"column_start":24,"column_end":34},"alias_span":null,"name":"RadioGroup","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":7181},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397965,"byte_end":397975,"line_start":77,"line_end":77,"column_start":24,"column_end":34},"alias_span":null,"name":"RadioGroup","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":3821},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":397994,"byte_end":398012,"line_start":78,"line_end":78,"column_start":17,"column_end":35},"alias_span":null,"name":"DefaultScopePolicy","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":3843},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398014,"byte_end":398031,"line_start":78,"line_end":78,"column_start":37,"column_end":54},"alias_span":null,"name":"LensScopeTransfer","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":3872},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398033,"byte_end":398038,"line_start":78,"line_end":78,"column_start":56,"column_end":61},"alias_span":null,"name":"Scope","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":3811},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398040,"byte_end":398051,"line_start":78,"line_end":78,"column_start":63,"column_end":74},"alias_span":null,"name":"ScopePolicy","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":3816},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398053,"byte_end":398066,"line_start":78,"line_end":78,"column_start":76,"column_end":89},"alias_span":null,"name":"ScopeTransfer","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":3926},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398085,"byte_end":398091,"line_start":79,"line_end":79,"column_start":17,"column_end":23},"alias_span":null,"name":"Scroll","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":3963},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398112,"byte_end":398120,"line_start":80,"line_end":80,"column_start":20,"column_end":28},"alias_span":null,"name":"SizedBox","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":7186},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398138,"byte_end":398144,"line_start":81,"line_end":81,"column_start":17,"column_end":23},"alias_span":null,"name":"Slider","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":4056},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398163,"byte_end":398170,"line_start":82,"line_end":82,"column_start":18,"column_end":25},"alias_span":null,"name":"Spinner","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":4104},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398187,"byte_end":398192,"line_start":83,"line_end":83,"column_start":16,"column_end":21},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":4186},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398211,"byte_end":398218,"line_start":84,"line_end":84,"column_start":18,"column_end":25},"alias_span":null,"name":"Stepper","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":7198},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398289,"byte_end":398295,"line_start":87,"line_end":87,"column_start":17,"column_end":23},"alias_span":null,"name":"Switch","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":4340},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398312,"byte_end":398319,"line_start":88,"line_end":88,"column_start":16,"column_end":23},"alias_span":null,"name":"TabInfo","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":4496},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398321,"byte_end":398325,"line_start":88,"line_end":88,"column_start":25,"column_end":29},"alias_span":null,"name":"Tabs","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":7296},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398327,"byte_end":398335,"line_start":88,"line_end":88,"column_start":31,"column_end":39},"alias_span":null,"name":"TabsEdge","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":4348},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398337,"byte_end":398347,"line_start":88,"line_end":88,"column_start":41,"column_end":51},"alias_span":null,"name":"TabsPolicy","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":7215},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398349,"byte_end":398358,"line_start":88,"line_end":88,"column_start":53,"column_end":62},"alias_span":null,"name":"TabsState","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":7277},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398360,"byte_end":398374,"line_start":88,"line_end":88,"column_start":64,"column_end":78},"alias_span":null,"name":"TabsTransition","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":7311},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398395,"byte_end":398402,"line_start":89,"line_end":89,"column_start":19,"column_end":26},"alias_span":null,"name":"TextBox","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":4638},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398404,"byte_end":398416,"line_start":89,"line_end":89,"column_start":28,"column_end":40},"alias_span":null,"name":"TextBoxEvent","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":4636},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398418,"byte_end":398436,"line_start":89,"line_end":89,"column_start":42,"column_end":60},"alias_span":null,"name":"ValidationDelegate","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":4624},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398438,"byte_end":398450,"line_start":89,"line_end":89,"column_start":62,"column_end":74},"alias_span":null,"name":"ValueTextBox","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":4740},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398476,"byte_end":398488,"line_start":90,"line_end":90,"column_start":24,"column_end":36},"alias_span":null,"name":"ViewSwitcher","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":4773},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398522,"byte_end":398528,"line_start":92,"line_end":92,"column_start":18,"column_end":24},"alias_span":null,"name":"Widget","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":7331},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398530,"byte_end":398538,"line_start":92,"line_end":92,"column_start":26,"column_end":34},"alias_span":null,"name":"WidgetId","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":4871},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398576,"byte_end":398585,"line_start":94,"line_end":94,"column_start":21,"column_end":30},"alias_span":null,"name":"WidgetExt","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":6047},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":399420,"byte_end":399434,"line_start":120,"line_end":120,"column_start":9,"column_end":23},"alias_span":null,"name":"BoxConstraints","value":"","parent":{"krate":0,"index":5113}},{"kind":"Use","ref_id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":399436,"byte_end":399440,"line_start":120,"line_end":120,"column_start":25,"column_end":29},"alias_span":null,"name":"Data","value":"","parent":{"krate":0,"index":5113}},{"kind":"Use","ref_id":{"krate":16,"index":184},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":399436,"byte_end":399440,"line_start":120,"line_end":120,"column_start":25,"column_end":29},"alias_span":null,"name":"Data","value":"","parent":{"krate":0,"index":5113}},{"kind":"Use","ref_id":{"krate":0,"index":6406},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":399442,"byte_end":399445,"line_start":120,"line_end":120,"column_start":31,"column_end":34},"alias_span":null,"name":"Env","value":"","parent":{"krate":0,"index":5113}},{"kind":"Use","ref_id":{"krate":0,"index":6545},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":399447,"byte_end":399452,"line_start":120,"line_end":120,"column_start":36,"column_end":41},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":5113}},{"kind":"Use","ref_id":{"krate":0,"index":794},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":399454,"byte_end":399462,"line_start":120,"line_end":120,"column_start":43,"column_end":51},"alias_span":null,"name":"EventCtx","value":"","parent":{"krate":0,"index":5113}},{"kind":"Use","ref_id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":399464,"byte_end":399473,"line_start":120,"line_end":120,"column_start":53,"column_end":62},"alias_span":null,"name":"LayoutCtx","value":"","parent":{"krate":0,"index":5113}},{"kind":"Use","ref_id":{"krate":0,"index":6608},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":399475,"byte_end":399484,"line_start":120,"line_end":120,"column_start":64,"column_end":73},"alias_span":null,"name":"LifeCycle","value":"","parent":{"krate":0,"index":5113}},{"kind":"Use","ref_id":{"krate":0,"index":802},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":399486,"byte_end":399498,"line_start":120,"line_end":120,"column_start":75,"column_end":87},"alias_span":null,"name":"LifeCycleCtx","value":"","parent":{"krate":0,"index":5113}},{"kind":"Use","ref_id":{"krate":0,"index":824},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":399500,"byte_end":399508,"line_start":120,"line_end":120,"column_start":89,"column_end":97},"alias_span":null,"name":"PaintCtx","value":"","parent":{"krate":0,"index":5113}},{"kind":"Use","ref_id":{"krate":21,"index":558},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":399518,"byte_end":399531,"line_start":121,"line_end":121,"column_start":9,"column_end":22},"alias_span":null,"name":"RenderContext","value":"","parent":{"krate":0,"index":5113}},{"kind":"Use","ref_id":{"krate":18,"index":1900},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":399533,"byte_end":399537,"line_start":121,"line_end":121,"column_start":24,"column_end":28},"alias_span":null,"name":"Size","value":"","parent":{"krate":0,"index":5113}},{"kind":"Use","ref_id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":399539,"byte_end":399548,"line_start":121,"line_end":121,"column_start":30,"column_end":39},"alias_span":null,"name":"UpdateCtx","value":"","parent":{"krate":0,"index":5113}},{"kind":"Use","ref_id":{"krate":0,"index":4773},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":399550,"byte_end":399556,"line_start":121,"line_end":121,"column_start":41,"column_end":47},"alias_span":null,"name":"Widget","value":"","parent":{"krate":0,"index":5113}},{"kind":"Use","ref_id":{"krate":0,"index":7331},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":399558,"byte_end":399566,"line_start":121,"line_end":121,"column_start":49,"column_end":57},"alias_span":null,"name":"WidgetId","value":"","parent":{"krate":0,"index":5113}},{"kind":"Use","ref_id":{"krate":18,"index":1678},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":5770,"byte_end":5776,"line_start":177,"line_end":177,"column_start":17,"column_end":23},"alias_span":null,"name":"Affine","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":1811},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":5778,"byte_end":5784,"line_start":177,"line_end":177,"column_start":25,"column_end":31},"alias_span":null,"name":"Insets","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":1847},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":5786,"byte_end":5791,"line_start":177,"line_end":177,"column_start":33,"column_end":38},"alias_span":null,"name":"Point","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":1872},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":5793,"byte_end":5797,"line_start":177,"line_end":177,"column_start":40,"column_end":44},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":1900},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":5799,"byte_end":5803,"line_start":177,"line_end":177,"column_start":46,"column_end":50},"alias_span":null,"name":"Size","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":1942},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":5805,"byte_end":5809,"line_start":177,"line_end":177,"column_start":52,"column_end":56},"alias_span":null,"name":"Vec2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":766},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":5832,"byte_end":5837,"line_start":179,"line_end":179,"column_start":5,"column_end":10},"alias_span":null,"name":"Color","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":809},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":5839,"byte_end":5849,"line_start":179,"line_end":179,"column_start":12,"column_end":22},"alias_span":null,"name":"FontFamily","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":870},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":5851,"byte_end":5860,"line_start":179,"line_end":179,"column_start":24,"column_end":33},"alias_span":null,"name":"FontStyle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":852},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":5862,"byte_end":5872,"line_start":179,"line_end":179,"column_start":35,"column_end":45},"alias_span":null,"name":"FontWeight","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":959},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":5874,"byte_end":5882,"line_start":179,"line_end":179,"column_start":47,"column_end":55},"alias_span":null,"name":"ImageBuf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":924},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":5884,"byte_end":5898,"line_start":179,"line_end":179,"column_start":57,"column_end":71},"alias_span":null,"name":"LinearGradient","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":932},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":5900,"byte_end":5914,"line_start":179,"line_end":179,"column_start":73,"column_end":87},"alias_span":null,"name":"RadialGradient","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":558},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":5920,"byte_end":5933,"line_start":180,"line_end":180,"column_start":5,"column_end":18},"alias_span":null,"name":"RenderContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":1066},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":5935,"byte_end":5948,"line_start":180,"line_end":180,"column_start":20,"column_end":33},"alias_span":null,"name":"TextAlignment","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":951},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":5950,"byte_end":5959,"line_start":180,"line_end":180,"column_start":35,"column_end":44},"alias_span":null,"name":"UnitPoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":40,"index":0},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6108,"byte_end":6122,"line_start":185,"line_end":185,"column_start":16,"column_end":30},"alias_span":null,"name":"keyboard_types","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2517},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6145,"byte_end":6156,"line_start":187,"line_end":187,"column_start":5,"column_end":16},"alias_span":null,"name":"Application","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2527},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6158,"byte_end":6167,"line_start":187,"line_end":187,"column_start":18,"column_end":27},"alias_span":null,"name":"Clipboard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2534},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6169,"byte_end":6184,"line_start":187,"line_end":187,"column_start":29,"column_end":44},"alias_span":null,"name":"ClipboardFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":40,"index":118},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6186,"byte_end":6190,"line_start":187,"line_end":187,"column_start":46,"column_end":50},"alias_span":null,"name":"Code","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2779},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6192,"byte_end":6198,"line_start":187,"line_end":187,"column_start":52,"column_end":58},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2803},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6200,"byte_end":6210,"line_start":187,"line_end":187,"column_start":60,"column_end":70},"alias_span":null,"name":"CursorDesc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2602},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6212,"byte_end":6217,"line_start":187,"line_end":187,"column_start":72,"column_end":77},"alias_span":null,"name":"PlatformError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2555},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6240,"byte_end":6248,"line_start":188,"line_end":188,"column_start":5,"column_end":13},"alias_span":null,"name":"FileInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2590},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6250,"byte_end":6258,"line_start":188,"line_end":188,"column_start":15,"column_end":23},"alias_span":null,"name":"FileSpec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":86},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6260,"byte_end":6268,"line_start":188,"line_end":188,"column_start":25,"column_end":33},"alias_span":null,"name":"FormatId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2617},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6270,"byte_end":6276,"line_start":188,"line_end":188,"column_start":35,"column_end":41},"alias_span":null,"name":"HotKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":272},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6278,"byte_end":6283,"line_start":188,"line_end":188,"column_start":43,"column_end":48},"alias_span":null,"name":"KbKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2680},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6285,"byte_end":6293,"line_start":188,"line_end":188,"column_start":50,"column_end":58},"alias_span":null,"name":"KeyEvent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":40,"index":1073},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6295,"byte_end":6303,"line_start":188,"line_end":188,"column_start":60,"column_end":68},"alias_span":null,"name":"Location","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2704},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6305,"byte_end":6314,"line_start":188,"line_end":188,"column_start":70,"column_end":79},"alias_span":null,"name":"Modifiers","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2993},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6316,"byte_end":6323,"line_start":188,"line_end":188,"column_start":81,"column_end":88},"alias_span":null,"name":"Monitor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2740},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6329,"byte_end":6340,"line_start":189,"line_end":189,"column_start":5,"column_end":16},"alias_span":null,"name":"MouseButton","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2764},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6342,"byte_end":6354,"line_start":189,"line_end":189,"column_start":18,"column_end":30},"alias_span":null,"name":"MouseButtons","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2642},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6356,"byte_end":6363,"line_start":189,"line_end":189,"column_start":32,"column_end":39},"alias_span":null,"name":"RawMods","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2963},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6365,"byte_end":6371,"line_start":189,"line_end":189,"column_start":41,"column_end":47},"alias_span":null,"name":"Region","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2161},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6373,"byte_end":6381,"line_start":189,"line_end":189,"column_start":49,"column_end":57},"alias_span":null,"name":"Scalable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2969},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6383,"byte_end":6388,"line_start":189,"line_end":189,"column_start":59,"column_end":64},"alias_span":null,"name":"Scale","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2223},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6390,"byte_end":6396,"line_start":189,"line_end":189,"column_start":66,"column_end":72},"alias_span":null,"name":"Screen","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2624},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6398,"byte_end":6405,"line_start":189,"line_end":189,"column_start":74,"column_end":81},"alias_span":null,"name":"SysMods","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":3005},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6407,"byte_end":6417,"line_start":189,"line_end":189,"column_start":83,"column_end":93},"alias_span":null,"name":"TimerToken","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":3099},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6423,"byte_end":6435,"line_start":190,"line_end":190,"column_start":5,"column_end":17},"alias_span":null,"name":"WindowHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":3084},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6437,"byte_end":6448,"line_start":190,"line_end":190,"column_start":19,"column_end":30},"alias_span":null,"name":"WindowState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1001},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6475,"byte_end":6484,"line_start":193,"line_end":193,"column_start":22,"column_end":31},"alias_span":null,"name":"WidgetPod","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":339},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6500,"byte_end":6511,"line_start":194,"line_end":194,"column_start":15,"column_end":26},"alias_span":null,"name":"AppLauncher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6513,"byte_end":6525,"line_start":194,"line_end":194,"column_start":28,"column_end":40},"alias_span":null,"name":"WindowConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6527,"byte_end":6537,"line_start":194,"line_end":194,"column_start":42,"column_end":52},"alias_span":null,"name":"WindowDesc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6563,"byte_end":6574,"line_start":195,"line_end":195,"column_start":24,"column_end":35},"alias_span":null,"name":"AppDelegate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6576,"byte_end":6587,"line_start":195,"line_end":195,"column_start":37,"column_end":48},"alias_span":null,"name":"DelegateCtx","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6047},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6615,"byte_end":6629,"line_start":196,"line_end":196,"column_start":26,"column_end":40},"alias_span":null,"name":"BoxConstraints","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6649,"byte_end":6652,"line_start":197,"line_end":197,"column_start":19,"column_end":22},"alias_span":null,"name":"commands","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6074},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6666,"byte_end":6673,"line_start":197,"line_end":197,"column_start":36,"column_end":43},"alias_span":null,"name":"Command","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6082},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6675,"byte_end":6687,"line_start":197,"line_end":197,"column_start":45,"column_end":57},"alias_span":null,"name":"Notification","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6055},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6689,"byte_end":6697,"line_start":197,"line_end":197,"column_start":59,"column_end":67},"alias_span":null,"name":"Selector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6699,"byte_end":6708,"line_start":197,"line_end":197,"column_start":69,"column_end":78},"alias_span":null,"name":"SingleUse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6088},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6710,"byte_end":6716,"line_start":197,"line_end":197,"column_start":80,"column_end":86},"alias_span":null,"name":"Target","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":794},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6738,"byte_end":6746,"line_start":198,"line_end":198,"column_start":20,"column_end":28},"alias_span":null,"name":"EventCtx","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6748,"byte_end":6757,"line_start":198,"line_end":198,"column_start":30,"column_end":39},"alias_span":null,"name":"LayoutCtx","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":802},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6759,"byte_end":6771,"line_start":198,"line_end":198,"column_start":41,"column_end":53},"alias_span":null,"name":"LifeCycleCtx","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":824},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6773,"byte_end":6781,"line_start":198,"line_end":198,"column_start":55,"column_end":63},"alias_span":null,"name":"PaintCtx","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6783,"byte_end":6792,"line_start":198,"line_end":198,"column_start":65,"column_end":74},"alias_span":null,"name":"UpdateCtx","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6809,"byte_end":6813,"line_start":199,"line_end":199,"column_start":15,"column_end":19},"alias_span":null,"name":"Data","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":184},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6809,"byte_end":6813,"line_start":199,"line_end":199,"column_start":15,"column_end":19},"alias_span":null,"name":"Data","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6396},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6831,"byte_end":6848,"line_start":200,"line_end":200,"column_start":17,"column_end":34},"alias_span":null,"name":"FileDialogOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6406},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6864,"byte_end":6867,"line_start":201,"line_end":201,"column_start":15,"column_end":18},"alias_span":null,"name":"Env","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6417},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6869,"byte_end":6872,"line_start":201,"line_end":201,"column_start":20,"column_end":23},"alias_span":null,"name":"Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6472},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6874,"byte_end":6884,"line_start":201,"line_end":201,"column_start":25,"column_end":35},"alias_span":null,"name":"KeyOrValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6433},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6886,"byte_end":6891,"line_start":201,"line_end":201,"column_start":37,"column_end":42},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1301},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6893,"byte_end":6902,"line_start":201,"line_end":201,"column_start":44,"column_end":53},"alias_span":null,"name":"ValueType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6545},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6921,"byte_end":6926,"line_start":202,"line_end":202,"column_start":17,"column_end":22},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6594},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6928,"byte_end":6941,"line_start":202,"line_end":202,"column_start":24,"column_end":37},"alias_span":null,"name":"InternalEvent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6627},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6943,"byte_end":6960,"line_start":202,"line_end":202,"column_start":39,"column_end":56},"alias_span":null,"name":"InternalLifeCycle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6608},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6962,"byte_end":6971,"line_start":202,"line_end":202,"column_start":58,"column_end":67},"alias_span":null,"name":"LifeCycle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6648},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6994,"byte_end":7007,"line_start":203,"line_end":203,"column_start":21,"column_end":34},"alias_span":null,"name":"ExtEventError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6649},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":6994,"byte_end":7007,"line_start":203,"line_end":203,"column_start":21,"column_end":34},"alias_span":null,"name":"ExtEventError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6637},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7009,"byte_end":7021,"line_start":203,"line_end":203,"column_start":36,"column_end":48},"alias_span":null,"name":"ExtEventSink","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7039,"byte_end":7043,"line_start":204,"line_end":204,"column_start":16,"column_end":20},"alias_span":null,"name":"Lens","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7045,"byte_end":7052,"line_start":204,"line_end":204,"column_start":22,"column_end":29},"alias_span":null,"name":"LensExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6661},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7077,"byte_end":7092,"line_start":205,"line_end":205,"column_start":23,"column_end":38},"alias_span":null,"name":"LocalizedString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1700},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7109,"byte_end":7112,"line_start":206,"line_end":206,"column_start":16,"column_end":19},"alias_span":null,"name":"platform_menus","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6712},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7132,"byte_end":7143,"line_start":206,"line_end":206,"column_start":39,"column_end":50},"alias_span":null,"name":"ContextMenu","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6674},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7145,"byte_end":7153,"line_start":206,"line_end":206,"column_start":52,"column_end":60},"alias_span":null,"name":"MenuDesc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6697},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7155,"byte_end":7163,"line_start":206,"line_end":206,"column_start":62,"column_end":70},"alias_span":null,"name":"MenuItem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6737},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7181,"byte_end":7191,"line_start":207,"line_end":207,"column_start":16,"column_end":26},"alias_span":null,"name":"MouseEvent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2425},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7208,"byte_end":7214,"line_start":208,"line_end":208,"column_start":16,"column_end":22},"alias_span":null,"name":"ArcStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6902},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7216,"byte_end":7230,"line_start":208,"line_end":208,"column_start":24,"column_end":38},"alias_span":null,"name":"FontDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6925},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7232,"byte_end":7242,"line_start":208,"line_end":208,"column_start":40,"column_end":50},"alias_span":null,"name":"TextLayout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6018},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7259,"byte_end":7266,"line_start":209,"line_end":209,"column_start":15,"column_end":22},"alias_span":null,"name":"Handled","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4773},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7285,"byte_end":7291,"line_start":210,"line_end":210,"column_start":18,"column_end":24},"alias_span":null,"name":"Widget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4871},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7293,"byte_end":7302,"line_start":210,"line_end":210,"column_start":26,"column_end":35},"alias_span":null,"name":"WidgetExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7331},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7304,"byte_end":7312,"line_start":210,"line_end":210,"column_start":37,"column_end":45},"alias_span":null,"name":"WidgetId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5293},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7336,"byte_end":7348,"line_start":211,"line_end":211,"column_start":22,"column_end":34},"alias_span":null,"name":"DruidHandler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5566},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7367,"byte_end":7373,"line_start":212,"line_end":212,"column_start":18,"column_end":24},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7355},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7375,"byte_end":7383,"line_start":212,"line_end":212,"column_start":26,"column_end":34},"alias_span":null,"name":"WindowId","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":596,"byte_end":8156,"line_start":15,"line_end":231,"column_start":1,"column_end":35},"name":"","qualname":"::","value":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":249},{"krate":0,"index":270},{"krate":0,"index":413},{"krate":0,"index":476},{"krate":0,"index":509},{"krate":0,"index":530},{"krate":0,"index":672},{"krate":0,"index":888},{"krate":0,"index":1067},{"krate":0,"index":1201},{"krate":0,"index":1238},{"krate":0,"index":1373},{"krate":0,"index":1415},{"krate":0,"index":1468},{"krate":0,"index":1598},{"krate":0,"index":1786},{"krate":0,"index":1814},{"krate":0,"index":1881},{"krate":0,"index":2534},{"krate":0,"index":2603},{"krate":0,"index":5157},{"krate":0,"index":5440},{"krate":0,"index":5619},{"krate":0,"index":5620},{"krate":0,"index":5623},{"krate":0,"index":5626},{"krate":0,"index":5629},{"krate":0,"index":5632},{"krate":0,"index":5635},{"krate":0,"index":5638},{"krate":0,"index":5639},{"krate":0,"index":5642},{"krate":0,"index":5645},{"krate":0,"index":5648},{"krate":0,"index":5651},{"krate":0,"index":5654},{"krate":0,"index":5657},{"krate":0,"index":5660},{"krate":0,"index":5663},{"krate":0,"index":5666},{"krate":0,"index":5669},{"krate":0,"index":5672},{"krate":0,"index":5673},{"krate":0,"index":5676},{"krate":0,"index":5679},{"krate":0,"index":5682},{"krate":0,"index":5685},{"krate":0,"index":5688},{"krate":0,"index":5691},{"krate":0,"index":5694},{"krate":0,"index":5697},{"krate":0,"index":5700},{"krate":0,"index":5703},{"krate":0,"index":5706},{"krate":0,"index":5709},{"krate":0,"index":5712},{"krate":0,"index":5715},{"krate":0,"index":5718},{"krate":0,"index":5721},{"krate":0,"index":5724},{"krate":0,"index":5727},{"krate":0,"index":5730},{"krate":0,"index":5733},{"krate":0,"index":5736},{"krate":0,"index":5739},{"krate":0,"index":5742},{"krate":0,"index":5745},{"krate":0,"index":5748},{"krate":0,"index":5751},{"krate":0,"index":5754},{"krate":0,"index":5757},{"krate":0,"index":5758},{"krate":0,"index":5761},{"krate":0,"index":5764},{"krate":0,"index":5767},{"krate":0,"index":5768},{"krate":0,"index":5771},{"krate":0,"index":5774},{"krate":0,"index":5777},{"krate":0,"index":5778},{"krate":0,"index":5781},{"krate":0,"index":5784},{"krate":0,"index":5787},{"krate":0,"index":5790},{"krate":0,"index":5793},{"krate":0,"index":5796},{"krate":0,"index":5797},{"krate":0,"index":5800},{"krate":0,"index":5803},{"krate":0,"index":5806},{"krate":0,"index":5809},{"krate":0,"index":5812},{"krate":0,"index":5813},{"krate":0,"index":5815},{"krate":0,"index":5818},{"krate":0,"index":5819},{"krate":0,"index":5822},{"krate":0,"index":5825},{"krate":0,"index":5828},{"krate":0,"index":5831},{"krate":0,"index":5834},{"krate":0,"index":5835},{"krate":0,"index":5838},{"krate":0,"index":5841},{"krate":0,"index":5844},{"krate":0,"index":5847},{"krate":0,"index":5848},{"krate":0,"index":5849},{"krate":0,"index":5851},{"krate":0,"index":5854},{"krate":0,"index":5855},{"krate":0,"index":5858},{"krate":0,"index":5861},{"krate":0,"index":5864},{"krate":0,"index":5865},{"krate":0,"index":5868},{"krate":0,"index":5871},{"krate":0,"index":5874},{"krate":0,"index":5877},{"krate":0,"index":5880},{"krate":0,"index":5881},{"krate":0,"index":5884},{"krate":0,"index":5887},{"krate":0,"index":5890},{"krate":0,"index":5893},{"krate":0,"index":5894},{"krate":0,"index":5897},{"krate":0,"index":5900},{"krate":0,"index":5903},{"krate":0,"index":5906},{"krate":0,"index":5907},{"krate":0,"index":5910},{"krate":0,"index":5913},{"krate":0,"index":5914}],"decl_id":null,"docs":" Simple data-oriented GUI.","sig":null,"attributes":[{"value":"/ Simple data-oriented GUI.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":596,"byte_end":625,"line_start":15,"line_end":15,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":626,"byte_end":629,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Druid lets you build simple interactive graphical applications that","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":630,"byte_end":701,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ can be deployed on Windows, macOS, Linux, and the web.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":702,"byte_end":760,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":761,"byte_end":764,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Druid is built on top of [`druid-shell`], which implements all of the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":765,"byte_end":838,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ lower-level, platform-specific code, providing a common abstraction","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":839,"byte_end":910,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ for things like key and mouse events, creating windows, and launching","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":911,"byte_end":984,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/ an application. Below [`druid-shell`] is [`piet`], which is a cross-platform","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":985,"byte_end":1065,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ 2D graphics library, providing a simple and familiar drawing API that can be","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":1066,"byte_end":1146,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ implemented for various platforms.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":1147,"byte_end":1185,"line_start":25,"line_end":25,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":1186,"byte_end":1189,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Druid is a data-driven, declarative framework. You describe your application","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":1190,"byte_end":1270,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ model in terms of the [`Data`] trait, and then you build up a tree of","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":1271,"byte_end":1344,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ [`widget`] s that can display and modify your data.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":1345,"byte_end":1400,"line_start":29,"line_end":29,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":1401,"byte_end":1404,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Your widgets handle [`Event`]s, such as mouse movement, and can modify the data;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":1405,"byte_end":1489,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/ these changes are then delivered to relevant widgets, which can update","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":1490,"byte_end":1564,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ their state and redraw.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":1565,"byte_end":1592,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":1593,"byte_end":1596,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ As your application grows, you can use [`Lens`]es to expose only certain","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":1597,"byte_end":1673,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ subsets of your data model to certains subsets of your widget tree.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":1674,"byte_end":1745,"line_start":36,"line_end":36,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":1746,"byte_end":1749,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ For more information you should read the [druid book].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":1750,"byte_end":1808,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":1809,"byte_end":1812,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":1813,"byte_end":1827,"line_start":40,"line_end":40,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":1828,"byte_end":1831,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ For many more examples, see [`druid/examples`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":1832,"byte_end":1883,"line_start":42,"line_end":42,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":1884,"byte_end":1887,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":1888,"byte_end":1901,"line_start":44,"line_end":44,"column_start":1,"column_end":14}},{"value":"/ use druid::widget::{Align, Flex, Label, TextBox};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":1902,"byte_end":1955,"line_start":45,"line_end":45,"column_start":1,"column_end":54}},{"value":"/ use druid::{AppLauncher, Data, Env, Lens, LocalizedString, Widget, WindowDesc, WidgetExt};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":1956,"byte_end":2050,"line_start":46,"line_end":46,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2051,"byte_end":2054,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ const VERTICAL_WIDGET_SPACING: f64 = 20.0;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2055,"byte_end":2101,"line_start":48,"line_end":48,"column_start":1,"column_end":47}},{"value":"/ const TEXT_BOX_WIDTH: f64 = 200.0;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2102,"byte_end":2140,"line_start":49,"line_end":49,"column_start":1,"column_end":39}},{"value":"/ const WINDOW_TITLE: LocalizedString<HelloState> = LocalizedString::new(\"Hello World!\");","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2141,"byte_end":2232,"line_start":50,"line_end":50,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2233,"byte_end":2236,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Data, Lens)]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2237,"byte_end":2269,"line_start":52,"line_end":52,"column_start":1,"column_end":33}},{"value":"/ struct HelloState {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2270,"byte_end":2293,"line_start":53,"line_end":53,"column_start":1,"column_end":24}},{"value":"/     name: String,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2294,"byte_end":2315,"line_start":54,"line_end":54,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2316,"byte_end":2321,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2322,"byte_end":2325,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2326,"byte_end":2341,"line_start":57,"line_end":57,"column_start":1,"column_end":16}},{"value":"/     // describe the main window","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2342,"byte_end":2377,"line_start":58,"line_end":58,"column_start":1,"column_end":36}},{"value":"/     let main_window = WindowDesc::new(build_root_widget)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2378,"byte_end":2438,"line_start":59,"line_end":59,"column_start":1,"column_end":61}},{"value":"/         .title(WINDOW_TITLE)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2439,"byte_end":2471,"line_start":60,"line_end":60,"column_start":1,"column_end":33}},{"value":"/         .window_size((400.0, 400.0));","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2472,"byte_end":2513,"line_start":61,"line_end":61,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2514,"byte_end":2517,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/     // create the initial app state","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2518,"byte_end":2557,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/     let initial_state = HelloState {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2558,"byte_end":2598,"line_start":64,"line_end":64,"column_start":1,"column_end":41}},{"value":"/         name: \"World\".into(),","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2599,"byte_end":2632,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/     };","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2633,"byte_end":2643,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2644,"byte_end":2647,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/     // start the application","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2648,"byte_end":2680,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"/     AppLauncher::with_window(main_window)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2681,"byte_end":2726,"line_start":69,"line_end":69,"column_start":1,"column_end":46}},{"value":"/         .launch(initial_state)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2727,"byte_end":2761,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/         .expect(\"Failed to launch application\");","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2762,"byte_end":2814,"line_start":71,"line_end":71,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2815,"byte_end":2820,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2821,"byte_end":2824,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ fn build_root_widget() -> impl Widget<HelloState> {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2825,"byte_end":2880,"line_start":74,"line_end":74,"column_start":1,"column_end":56}},{"value":"/     // a label that will determine its text based on the current app data.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2881,"byte_end":2959,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/     let label = Label::new(|data: &HelloState, _env: &Env| format!(\"Hello {}!\", data.name));","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":2960,"byte_end":3056,"line_start":76,"line_end":76,"column_start":1,"column_end":97}},{"value":"/     // a textbox that modifies `name`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":3057,"byte_end":3099,"line_start":77,"line_end":77,"column_start":1,"column_end":43}},{"value":"/     let textbox = TextBox::new()","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":3100,"byte_end":3136,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/         .with_placeholder(\"Who are we greeting?\")","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":3137,"byte_end":3190,"line_start":79,"line_end":79,"column_start":1,"column_end":54}},{"value":"/         .fix_width(TEXT_BOX_WIDTH)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":3191,"byte_end":3229,"line_start":80,"line_end":80,"column_start":1,"column_end":39}},{"value":"/         .lens(HelloState::name);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":3230,"byte_end":3266,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":3267,"byte_end":3270,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // arrange the two widgets vertically, with some padding","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":3271,"byte_end":3335,"line_start":83,"line_end":83,"column_start":1,"column_end":65}},{"value":"/     let layout = Flex::column()","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":3336,"byte_end":3371,"line_start":84,"line_end":84,"column_start":1,"column_end":36}},{"value":"/         .with_child(label)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":3372,"byte_end":3402,"line_start":85,"line_end":85,"column_start":1,"column_end":31}},{"value":"/         .with_spacer(VERTICAL_WIDGET_SPACING)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":3403,"byte_end":3452,"line_start":86,"line_end":86,"column_start":1,"column_end":50}},{"value":"/         .with_child(textbox);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":3453,"byte_end":3486,"line_start":87,"line_end":87,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":3487,"byte_end":3490,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/     // center the two widgets in the available space","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":3491,"byte_end":3547,"line_start":89,"line_end":89,"column_start":1,"column_end":57}},{"value":"/     Align::centered(layout)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":3548,"byte_end":3579,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":3580,"byte_end":3585,"line_start":91,"line_end":91,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":3586,"byte_end":3593,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":3594,"byte_end":3597,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ # Optional Features","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":3598,"byte_end":3621,"line_start":94,"line_end":94,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":3622,"byte_end":3625,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ * `im` - Efficient immutable data structures using the [`im` crate],","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":3626,"byte_end":3698,"line_start":96,"line_end":96,"column_start":1,"column_end":73}},{"value":"/          which is made available via the [`im` module].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":3699,"byte_end":3758,"line_start":97,"line_end":97,"column_start":1,"column_end":60}},{"value":"/ * `svg` - Scalable Vector Graphics for icons and other scalable images using the [`usvg` crate].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":3759,"byte_end":3859,"line_start":98,"line_end":98,"column_start":1,"column_end":101}},{"value":"/ * `image` - Bitmap image support using the [`image` crate].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":3860,"byte_end":3923,"line_start":99,"line_end":99,"column_start":1,"column_end":64}},{"value":"/ * `x11` - Work-in-progress X11 Linux backend instead of GTK.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":3924,"byte_end":3988,"line_start":100,"line_end":100,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":3989,"byte_end":3992,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Features can be added with `cargo`. For example, in your `Cargo.toml`:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":3993,"byte_end":4067,"line_start":102,"line_end":102,"column_start":1,"column_end":75}},{"value":"/ ```no_compile","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":4068,"byte_end":4085,"line_start":103,"line_end":103,"column_start":1,"column_end":18}},{"value":"/ [dependencies.druid]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":4086,"byte_end":4110,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ version = \"0.6.0\"","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":4111,"byte_end":4132,"line_start":105,"line_end":105,"column_start":1,"column_end":22}},{"value":"/ features = [\"im\", \"svg\", \"image\"]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":4133,"byte_end":4170,"line_start":106,"line_end":106,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":4171,"byte_end":4178,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":4179,"byte_end":4182,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ [`Widget`]: trait.Widget.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":4183,"byte_end":4216,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ [`Data`]: trait.Data.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":4217,"byte_end":4246,"line_start":110,"line_end":110,"column_start":1,"column_end":30}},{"value":"/ [`Lens`]: trait.Lens.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":4247,"byte_end":4276,"line_start":111,"line_end":111,"column_start":1,"column_end":30}},{"value":"/ [`widget`]: ./widget/index.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":4277,"byte_end":4312,"line_start":112,"line_end":112,"column_start":1,"column_end":36}},{"value":"/ [`Event`]: enum.Event.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":4313,"byte_end":4343,"line_start":113,"line_end":113,"column_start":1,"column_end":31}},{"value":"/ [`druid-shell`]: https://docs.rs/druid-shell","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":4344,"byte_end":4392,"line_start":114,"line_end":114,"column_start":1,"column_end":49}},{"value":"/ [`piet`]: https://docs.rs/piet","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":4393,"byte_end":4427,"line_start":115,"line_end":115,"column_start":1,"column_end":35}},{"value":"/ [`druid/examples`]: https://github.com/linebender/druid/tree/v0.6.0/druid/examples","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":4428,"byte_end":4514,"line_start":116,"line_end":116,"column_start":1,"column_end":87}},{"value":"/ [druid book]: https://linebender.org/druid/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":4515,"byte_end":4562,"line_start":117,"line_end":117,"column_start":1,"column_end":48}},{"value":"/ [`im` crate]: https://crates.io/crates/im","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":4563,"byte_end":4608,"line_start":118,"line_end":118,"column_start":1,"column_end":46}},{"value":"/ [`im` module]: im/index.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":4609,"byte_end":4641,"line_start":119,"line_end":119,"column_start":1,"column_end":33}},{"value":"/ [`usvg` crate]: https://crates.io/crates/usvg","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":4642,"byte_end":4691,"line_start":120,"line_end":120,"column_start":1,"column_end":50}},{"value":"/ [`image` crate]: https://crates.io/crates/image","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":4692,"byte_end":4743,"line_start":121,"line_end":121,"column_start":1,"column_end":52}},{"value":"deny(broken_intra_doc_links, unsafe_code, clippy ::\ntrivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":4745,"byte_end":4840,"line_start":123,"line_end":127,"column_start":1,"column_end":3}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":4841,"byte_end":4863,"line_start":128,"line_end":128,"column_start":1,"column_end":23}},{"value":"allow(clippy :: new_ret_no_self, clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":4864,"byte_end":4929,"line_start":129,"line_end":129,"column_start":1,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lens","qualname":"::lens","value":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":246}],"decl_id":null,"docs":" Support for lenses, a way of focusing on subfields of data.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":5289,"byte_end":5301,"line_start":145,"line_end":145,"column_start":1,"column_end":13}},{"value":"/ Support for lenses, a way of focusing on subfields of data.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":8754,"byte_end":8817,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":8818,"byte_end":8821,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Lenses are useful whenever a widget only needs access to a subfield of a larger struct or","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":8822,"byte_end":8915,"line_start":17,"line_end":17,"column_start":1,"column_end":94}},{"value":"/ generally access to part of a larger value.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":8916,"byte_end":8963,"line_start":18,"line_end":18,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":8964,"byte_end":8967,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ For example: If one wants to embed a [`TextBox`] in a widget with a `Data` type","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":8968,"byte_end":9051,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/ that is not `String`, they need to specify how to access a `String` from within the `Data`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":9052,"byte_end":9147,"line_start":21,"line_end":21,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":9148,"byte_end":9151,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`TextBox`]: ../widget/struct.TextBox.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":9152,"byte_end":9198,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":9199,"byte_end":9206,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use druid::{Data, Lens, Widget, WidgetExt, widget::{TextBox, Flex}};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":9207,"byte_end":9279,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":9280,"byte_end":9283,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Debug, Data, Lens)]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":9284,"byte_end":9323,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ struct MyState {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":9324,"byte_end":9344,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"/     search_term: String,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":9345,"byte_end":9373,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/     scale: f64,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":9374,"byte_end":9393,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":9394,"byte_end":9408,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":9409,"byte_end":9414,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":9415,"byte_end":9418,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":9419,"byte_end":9422,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn my_sidebar() -> impl Widget<MyState> {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":9423,"byte_end":9468,"line_start":35,"line_end":35,"column_start":1,"column_end":46}},{"value":"/     // `TextBox` is of type `Widget<String>`","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":9469,"byte_end":9517,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/     // via `.lens` we get it to be of type `Widget<MyState>`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":9518,"byte_end":9583,"line_start":37,"line_end":37,"column_start":1,"column_end":66}},{"value":"/     // `MyState::search_term` is a lens generated by the `derive(Lens)` macro,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":9584,"byte_end":9666,"line_start":38,"line_end":38,"column_start":1,"column_end":83}},{"value":"/     // that provides access to the search_term field.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":9667,"byte_end":9724,"line_start":39,"line_end":39,"column_start":1,"column_end":58}},{"value":"/     let searchbar = TextBox::new().lens(MyState::search_term);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":9725,"byte_end":9791,"line_start":40,"line_end":40,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":9792,"byte_end":9795,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":9796,"byte_end":9810,"line_start":42,"line_end":42,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":9811,"byte_end":9814,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     // We can now use `searchbar` just like any other `Widget<MyState>`","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":9815,"byte_end":9890,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/     Flex::column().with_child(searchbar)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":9891,"byte_end":9935,"line_start":45,"line_end":45,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":9936,"byte_end":9941,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\mod.rs","byte_start":9942,"byte_end":9949,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":11501,"byte_end":11505,"line_start":36,"line_end":36,"column_start":11,"column_end":15},"name":"Lens","qualname":"::lens::lens::Lens","value":"Lens<T: ?Sized, U: ?Sized>","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":37}],"decl_id":null,"docs":" A lens is a datatype that gives access to a part of a larger\n data structure.","sig":null,"attributes":[{"value":"/ A lens is a datatype that gives access to a part of a larger","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":10821,"byte_end":10885,"line_start":21,"line_end":21,"column_start":1,"column_end":65}},{"value":"/ data structure.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":10886,"byte_end":10905,"line_start":22,"line_end":22,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":10906,"byte_end":10909,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ A simple example of a lens is a field of a struct; in this case,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":10910,"byte_end":10978,"line_start":24,"line_end":24,"column_start":1,"column_end":69}},{"value":"/ the lens itself is zero-sized. Another case is accessing an array","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":10979,"byte_end":11048,"line_start":25,"line_end":25,"column_start":1,"column_end":70}},{"value":"/ element, in which case the lens contains the array index.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":11049,"byte_end":11110,"line_start":26,"line_end":26,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":11111,"byte_end":11114,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Many `Lens` implementations will be derived by macro, but custom","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":11115,"byte_end":11183,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ implementations are practical as well.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":11184,"byte_end":11226,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":11227,"byte_end":11230,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The name \"lens\" is inspired by the [Haskell lens] package, which","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":11231,"byte_end":11299,"line_start":31,"line_end":31,"column_start":1,"column_end":69}},{"value":"/ has generally similar goals. It's likely we'll develop more","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":11300,"byte_end":11363,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ sophistication, for example combinators to combine lenses.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":11364,"byte_end":11426,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":11427,"byte_end":11430,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [Haskell lens]: http://hackage.haskell.org/package/lens","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":11431,"byte_end":11490,"line_start":35,"line_end":35,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":11798,"byte_end":11802,"line_start":42,"line_end":42,"column_start":8,"column_end":12},"name":"with","qualname":"::lens::lens::Lens::with","value":"pub fn with<V, F: FnOnce(&U) -> V>(&Self, &T, F) -> V","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Get non-mut access to the field.","sig":null,"attributes":[{"value":"/ Get non-mut access to the field.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":11534,"byte_end":11570,"line_start":37,"line_end":37,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":11575,"byte_end":11578,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Runs the supplied closure with a reference to the data. It's","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":11583,"byte_end":11647,"line_start":39,"line_end":39,"column_start":5,"column_end":69}},{"value":"/ structured this way, as opposed to simply returning a reference,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":11652,"byte_end":11720,"line_start":40,"line_end":40,"column_start":5,"column_end":73}},{"value":"/ so that the data might be synthesized on-the-fly by the lens.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":11725,"byte_end":11790,"line_start":41,"line_end":41,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":12340,"byte_end":12348,"line_start":52,"line_end":52,"column_start":8,"column_end":16},"name":"with_mut","qualname":"::lens::lens::Lens::with_mut","value":"pub fn with_mut<V, F: FnOnce(&mut U) -> V>(&Self, &mut T, F) -> V","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Get mutable access to the field.","sig":null,"attributes":[{"value":"/ Get mutable access to the field.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":11860,"byte_end":11896,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":11901,"byte_end":11904,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This method is defined in terms of a closure, rather than simply","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":11909,"byte_end":11977,"line_start":46,"line_end":46,"column_start":5,"column_end":73}},{"value":"/ yielding a mutable reference, because it is intended to be used","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":11982,"byte_end":12049,"line_start":47,"line_end":47,"column_start":5,"column_end":72}},{"value":"/ with value-type data (also known as immutable data structures).","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":12054,"byte_end":12121,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/ For example, a lens for an immutable list might be implemented by","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":12126,"byte_end":12195,"line_start":49,"line_end":49,"column_start":5,"column_end":74}},{"value":"/ cloning the list, giving the closure mutable access to the clone,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":12200,"byte_end":12269,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ then updating the reference after the closure returns.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":12274,"byte_end":12332,"line_start":51,"line_end":51,"column_start":5,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":12460,"byte_end":12467,"line_start":56,"line_end":56,"column_start":11,"column_end":18},"name":"LensExt","qualname":"::lens::lens::LensExt","value":"LensExt<A: ?Sized, B: ?Sized>: Lens<A, B>","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":59},{"krate":0,"index":60}],"decl_id":null,"docs":" Helpers for manipulating `Lens`es\n","sig":null,"attributes":[{"value":"/ Helpers for manipulating `Lens`es","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":12412,"byte_end":12449,"line_start":55,"line_end":55,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":12557,"byte_end":12560,"line_start":58,"line_end":58,"column_start":8,"column_end":11},"name":"get","qualname":"::lens::lens::LensExt::get","value":"pub fn get(&Self, &A) -> B where B: Clone","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Copy the targeted value out of `data`\n","sig":null,"attributes":[{"value":"/ Copy the targeted value out of `data`","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":12508,"byte_end":12549,"line_start":57,"line_end":57,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":12722,"byte_end":12725,"line_start":66,"line_end":66,"column_start":8,"column_end":11},"name":"put","qualname":"::lens::lens::LensExt::put","value":"pub fn put(&Self, &mut A, B) where B: Sized","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Set the targeted value in `data` to `value`\n","sig":null,"attributes":[{"value":"/ Set the targeted value in `data` to `value`","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":12667,"byte_end":12714,"line_start":65,"line_end":65,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":13142,"byte_end":13146,"line_start":81,"line_end":81,"column_start":8,"column_end":12},"name":"then","qualname":"::lens::lens::LensExt::then","value":"pub fn then<Other, C>(Self, Other) -> Then<Self, Other, B> where\nOther: Lens<B, C> + Sized, C: ?Sized, Self: Sized","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Compose a `Lens<A, B>` with a `Lens<B, C>` to produce a `Lens<A, C>`","sig":null,"attributes":[{"value":"/ Compose a `Lens<A, B>` with a `Lens<B, C>` to produce a `Lens<A, C>`","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":12847,"byte_end":12919,"line_start":73,"line_end":73,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":12924,"byte_end":12927,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":12932,"byte_end":12939,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # use druid::*;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":12944,"byte_end":12963,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ struct Foo { x: (u32, bool) }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":12968,"byte_end":13001,"line_start":77,"line_end":77,"column_start":5,"column_end":38}},{"value":"/ let lens = lens!(Foo, x).then(lens!((u32, bool), 1));","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":13006,"byte_end":13063,"line_start":78,"line_end":78,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(lens.get(&Foo { x: (0, true) }), true);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":13068,"byte_end":13122,"line_start":79,"line_end":79,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":13127,"byte_end":13134,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":13984,"byte_end":13987,"line_start":103,"line_end":103,"column_start":8,"column_end":11},"name":"map","qualname":"::lens::lens::LensExt::map","value":"pub fn map<Get, Put, C>(Self, Get, Put) -> Then<Self, Map<Get, Put>, B> where\nGet: Fn(&B) -> C, Put: Fn(&mut B, C) -> (), Self: Sized","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Combine a `Lens<A, B>` with a function that can transform a `B` and its inverse.","sig":null,"attributes":[{"value":"/ Combine a `Lens<A, B>` with a function that can transform a `B` and its inverse.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":13334,"byte_end":13418,"line_start":90,"line_end":90,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":13423,"byte_end":13426,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Useful for cases where the desired value doesn't physically exist in `A`, but can be","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":13431,"byte_end":13519,"line_start":92,"line_end":92,"column_start":5,"column_end":93}},{"value":"/ computed. For example, a lens like the following might be used to adapt a value with the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":13524,"byte_end":13616,"line_start":93,"line_end":93,"column_start":5,"column_end":97}},{"value":"/ range 0-2 for use with a `Widget<f64>` like `Slider` that has a range of 0-1:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":13621,"byte_end":13702,"line_start":94,"line_end":94,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":13707,"byte_end":13710,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":13715,"byte_end":13722,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/ # use druid::*;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":13727,"byte_end":13746,"line_start":97,"line_end":97,"column_start":5,"column_end":24}},{"value":"/ let lens = lens!((bool, f64), 1);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":13751,"byte_end":13788,"line_start":98,"line_end":98,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(lens.map(|x| x / 2.0, |x, y| *x = y * 2.0).get(&(true, 2.0)), 1.0);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":13793,"byte_end":13875,"line_start":99,"line_end":99,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":13880,"byte_end":13887,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":13892,"byte_end":13895,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The computed `C` may represent a whole or only part of the original `B`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":13900,"byte_end":13976,"line_start":102,"line_end":102,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":14362,"byte_end":14367,"line_start":118,"line_end":118,"column_start":8,"column_end":13},"name":"deref","qualname":"::lens::lens::LensExt::deref","value":"pub fn deref(Self) -> Then<Self, Deref, B> where B: ops::Deref +\nops::DerefMut, Self: Sized","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Invoke a type's `Deref` impl","sig":null,"attributes":[{"value":"/ Invoke a type's `Deref` impl","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":14199,"byte_end":14231,"line_start":112,"line_end":112,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":14236,"byte_end":14239,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":14244,"byte_end":14251,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ # use druid::*;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":14256,"byte_end":14275,"line_start":115,"line_end":115,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(lens::Identity.deref().get(&Box::new(42)), 42);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":14280,"byte_end":14342,"line_start":116,"line_end":116,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":14347,"byte_end":14354,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15722,"byte_end":15728,"line_start":165,"line_end":165,"column_start":8,"column_end":14},"name":"as_ref","qualname":"::lens::lens::LensExt::as_ref","value":"pub fn as_ref<T: ?Sized>(Self) -> Then<Self, Ref, B> where B: AsRef<T> +\nAsMut<T>, Self: Sized","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Invoke a type's `AsRef` and `AsMut` impl.","sig":null,"attributes":[{"value":"/ Invoke a type's `AsRef` and `AsMut` impl.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":14510,"byte_end":14555,"line_start":126,"line_end":126,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":14560,"byte_end":14563,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ It also allows indexing arrays with the [`index`] lens as shown in the example.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":14568,"byte_end":14651,"line_start":128,"line_end":128,"column_start":5,"column_end":88}},{"value":"/ This is necessary, because the `Index` trait in Rust is only implemented","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":14656,"byte_end":14732,"line_start":129,"line_end":129,"column_start":5,"column_end":81}},{"value":"/ for slices (`[T]`), but not for arrays (`[T; N]`).","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":14737,"byte_end":14791,"line_start":130,"line_end":130,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":14796,"byte_end":14799,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":14804,"byte_end":14818,"line_start":132,"line_end":132,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":14823,"byte_end":14826,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Using `ref` this works:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":14831,"byte_end":14858,"line_start":134,"line_end":134,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":14863,"byte_end":14866,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":14871,"byte_end":14878,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ use druid::{widget::TextBox, Data, Lens, LensExt, Widget, WidgetExt};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":14883,"byte_end":14956,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":14961,"byte_end":14964,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ #[derive(Clone, Default, Data, Lens)]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":14969,"byte_end":15010,"line_start":139,"line_end":139,"column_start":5,"column_end":46}},{"value":"/ struct State {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15015,"byte_end":15033,"line_start":140,"line_end":140,"column_start":5,"column_end":23}},{"value":"/     data: [String; 2],","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15038,"byte_end":15064,"line_start":141,"line_end":141,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15069,"byte_end":15074,"line_start":142,"line_end":142,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15079,"byte_end":15082,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ fn with_ref() -> impl Widget<State> {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15087,"byte_end":15128,"line_start":144,"line_end":144,"column_start":5,"column_end":46}},{"value":"/     TextBox::new().lens(State::data.as_ref().index(1))","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15133,"byte_end":15191,"line_start":145,"line_end":145,"column_start":5,"column_end":63}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15196,"byte_end":15201,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15206,"byte_end":15213,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15218,"byte_end":15221,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ While this fails:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15226,"byte_end":15247,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15252,"byte_end":15255,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```compile_fail","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15260,"byte_end":15279,"line_start":151,"line_end":151,"column_start":5,"column_end":24}},{"value":"/ # use druid::*;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15284,"byte_end":15303,"line_start":152,"line_end":152,"column_start":5,"column_end":24}},{"value":"/ # #[derive(Clone, Default, Data, Lens)]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15308,"byte_end":15351,"line_start":153,"line_end":153,"column_start":5,"column_end":48}},{"value":"/ # struct State {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15356,"byte_end":15376,"line_start":154,"line_end":154,"column_start":5,"column_end":25}},{"value":"/ #     data: [String; 2],","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15381,"byte_end":15409,"line_start":155,"line_end":155,"column_start":5,"column_end":33}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15414,"byte_end":15421,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"/ fn without_ref() -> impl Widget<State> {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15426,"byte_end":15470,"line_start":157,"line_end":157,"column_start":5,"column_end":49}},{"value":"/     // results in: `[std::string::String; 2]` cannot be mutably indexed by `usize`","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15475,"byte_end":15561,"line_start":158,"line_end":158,"column_start":5,"column_end":91}},{"value":"/     TextBox::new().lens(State::data.index(1))","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15566,"byte_end":15615,"line_start":159,"line_end":159,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15620,"byte_end":15625,"line_start":160,"line_end":160,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15630,"byte_end":15637,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15642,"byte_end":15645,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`Lens`]: ./trait.Lens.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15650,"byte_end":15681,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/ [`index`]: #method.index","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15686,"byte_end":15714,"line_start":164,"line_end":164,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":16043,"byte_end":16048,"line_start":179,"line_end":179,"column_start":8,"column_end":13},"name":"index","qualname":"::lens::lens::LensExt::index","value":"pub fn index<I>(Self, I) -> Then<Self, Index<I>, B> where I: Clone,\nB: ops::Index<I> + ops::IndexMut<I>, Self: Sized","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Access an index in a container","sig":null,"attributes":[{"value":"/ Access an index in a container","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15871,"byte_end":15905,"line_start":173,"line_end":173,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15910,"byte_end":15913,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15918,"byte_end":15925,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/ # use druid::*;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15930,"byte_end":15949,"line_start":176,"line_end":176,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(lens::Identity.index(2).get(&vec![0u32, 1, 2, 3]), 2);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":15954,"byte_end":16023,"line_start":177,"line_end":177,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":16028,"byte_end":16035,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":16771,"byte_end":16777,"line_start":201,"line_end":201,"column_start":8,"column_end":14},"name":"in_arc","qualname":"::lens::lens::LensExt::in_arc","value":"pub fn in_arc(Self) -> InArc<Self> where A: Clone, B: Data, Self: Sized","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Adapt to operate on the contents of an `Arc` with efficient copy-on-write semantics","sig":null,"attributes":[{"value":"/ Adapt to operate on the contents of an `Arc` with efficient copy-on-write semantics","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":16243,"byte_end":16330,"line_start":188,"line_end":188,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":16335,"byte_end":16338,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":16343,"byte_end":16350,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/ # use druid::*; use std::sync::Arc;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":16355,"byte_end":16394,"line_start":191,"line_end":191,"column_start":5,"column_end":44}},{"value":"/ let lens = lens::Identity.index(2).in_arc();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":16399,"byte_end":16447,"line_start":192,"line_end":192,"column_start":5,"column_end":53}},{"value":"/ let mut x = Arc::new(vec![0, 1, 2, 3]);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":16452,"byte_end":16495,"line_start":193,"line_end":193,"column_start":5,"column_end":48}},{"value":"/ let original = x.clone();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":16500,"byte_end":16529,"line_start":194,"line_end":194,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(lens.get(&x), 2);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":16534,"byte_end":16566,"line_start":195,"line_end":195,"column_start":5,"column_end":37}},{"value":"/ lens.put(&mut x, 2);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":16571,"byte_end":16595,"line_start":196,"line_end":196,"column_start":5,"column_end":29}},{"value":"/ assert!(Arc::ptr_eq(&original, &x), \"no-op writes don't cause a deep copy\");","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":16600,"byte_end":16680,"line_start":197,"line_end":197,"column_start":5,"column_end":85}},{"value":"/ lens.put(&mut x, 42);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":16685,"byte_end":16710,"line_start":198,"line_end":198,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(&*x, &[0, 1, 42, 3]);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":16715,"byte_end":16751,"line_start":199,"line_end":199,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":16756,"byte_end":16763,"line_start":200,"line_end":200,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":17391,"byte_end":17394,"line_start":229,"line_end":229,"column_start":8,"column_end":11},"name":"not","qualname":"::lens::lens::LensExt::not","value":"pub fn not(Self) -> Then<Self, Not, B> where Self: Sized, B: Sized +\nInto<bool> + Copy, bool: Into<B>","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" A lens that reverses a boolean value","sig":null,"attributes":[{"value":"/ A lens that reverses a boolean value","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":16907,"byte_end":16947,"line_start":210,"line_end":210,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":16952,"byte_end":16955,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":16960,"byte_end":16974,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":16979,"byte_end":16982,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":16987,"byte_end":16994,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ # use druid::*;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":16999,"byte_end":17018,"line_start":215,"line_end":215,"column_start":5,"column_end":24}},{"value":"/ use druid::LensExt;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":17023,"byte_end":17046,"line_start":216,"line_end":216,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":17051,"byte_end":17054,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ #[derive(Lens)]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":17059,"byte_end":17078,"line_start":218,"line_end":218,"column_start":5,"column_end":24}},{"value":"/ struct MyThing {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":17083,"byte_end":17103,"line_start":219,"line_end":219,"column_start":5,"column_end":25}},{"value":"/     first: bool","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":17108,"byte_end":17127,"line_start":220,"line_end":220,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":17132,"byte_end":17137,"line_start":221,"line_end":221,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":17142,"byte_end":17145,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ let lens = MyThing::first.not();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":17150,"byte_end":17186,"line_start":223,"line_end":223,"column_start":5,"column_end":41}},{"value":"/ let mut val = MyThing { first: false };","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":17191,"byte_end":17234,"line_start":224,"line_end":224,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(lens.with(&val, |v| *v), true);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":17239,"byte_end":17285,"line_start":225,"line_end":225,"column_start":5,"column_end":51}},{"value":"/ lens.with_mut(&mut val, |v| *v = false);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":17290,"byte_end":17334,"line_start":226,"line_end":226,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(val.first, true);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":17339,"byte_end":17371,"line_start":227,"line_end":227,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":17376,"byte_end":17383,"line_start":228,"line_end":228,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":17830,"byte_end":17835,"line_start":248,"line_end":248,"column_start":12,"column_end":17},"name":"Field","qualname":"::lens::lens::Field","value":"Field {  }","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69}],"decl_id":null,"docs":" Lens accessing a member of some type using accessor functions","sig":null,"attributes":[{"value":"/ Lens accessing a member of some type using accessor functions","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":17619,"byte_end":17684,"line_start":241,"line_end":241,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":17685,"byte_end":17688,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ See also the `lens` macro.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":17689,"byte_end":17719,"line_start":243,"line_end":243,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":17720,"byte_end":17723,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":17724,"byte_end":17731,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/ let lens = druid::lens::Field::new(|x: &Vec<u32>| &x[42], |x| &mut x[42]);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":17732,"byte_end":17810,"line_start":246,"line_end":246,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":17811,"byte_end":17818,"line_start":247,"line_end":247,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":17996,"byte_end":17999,"line_start":255,"line_end":255,"column_start":12,"column_end":15},"name":"new","qualname":"<Field<Get, GetMut>>::new","value":"pub fn new<T: ?Sized, U: ?Sized>(Get, GetMut) -> Self where Get: Fn(&T) -> &U,\nGetMut: Fn(&mut T) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Construct a lens from a pair of getter functions\n","sig":null,"attributes":[{"value":"/ Construct a lens from a pair of getter functions","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":17932,"byte_end":17984,"line_start":254,"line_end":254,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":5915},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":19239,"byte_end":19243,"line_start":302,"line_end":302,"column_start":12,"column_end":16},"name":"Then","qualname":"::lens::lens::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":5919},{"krate":0,"index":5920},{"krate":0,"index":5921}],"decl_id":null,"docs":" `Lens` composed of two lenses joined together\n","sig":null,"attributes":[{"value":"/ `Lens` composed of two lenses joined together","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":19155,"byte_end":19204,"line_start":300,"line_end":300,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":19440,"byte_end":19443,"line_start":312,"line_end":312,"column_start":12,"column_end":15},"name":"new","qualname":"<Then<T, U, B>>::new","value":"pub fn new<A: ?Sized, C: ?Sized>(T, U) -> Self where T: Lens<A, B>,\nU: Lens<B, C>","parent":null,"children":[],"decl_id":null,"docs":" Compose two lenses","sig":null,"attributes":[{"value":"/ Compose two lenses","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":19364,"byte_end":19386,"line_start":309,"line_end":309,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":19391,"byte_end":19394,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ See also `LensExt::then`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":19399,"byte_end":19428,"line_start":311,"line_end":311,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":5931},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":20391,"byte_end":20394,"line_start":354,"line_end":354,"column_start":12,"column_end":15},"name":"Map","qualname":"::lens::lens::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":5934},{"krate":0,"index":5935}],"decl_id":null,"docs":" `Lens` built from a getter and a setter\n","sig":null,"attributes":[{"value":"/ `Lens` built from a getter and a setter","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":20306,"byte_end":20349,"line_start":352,"line_end":352,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":20548,"byte_end":20551,"line_start":363,"line_end":363,"column_start":12,"column_end":15},"name":"new","qualname":"<Map<Get, Put>>::new","value":"pub fn new<A: ?Sized, B>(Get, Put) -> Self where Get: Fn(&A) -> B,\nPut: Fn(&mut A, B) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Construct a mapping","sig":null,"attributes":[{"value":"/ Construct a mapping","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":20473,"byte_end":20496,"line_start":360,"line_end":360,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":20501,"byte_end":20504,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ See also `LensExt::map`","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":20509,"byte_end":20536,"line_start":362,"line_end":362,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":5947},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":21244,"byte_end":21249,"line_start":393,"line_end":393,"column_start":12,"column_end":17},"name":"Deref","qualname":"::lens::lens::Deref","value":"","parent":null,"children":[],"decl_id":null,"docs":" `Lens` for invoking `Deref` and `DerefMut` on a type","sig":null,"attributes":[{"value":"/ `Lens` for invoking `Deref` and `DerefMut` on a type","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":21111,"byte_end":21167,"line_start":389,"line_end":389,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":21168,"byte_end":21171,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ See also `LensExt::deref`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":21172,"byte_end":21202,"line_start":391,"line_end":391,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":5954},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":21863,"byte_end":21866,"line_start":415,"line_end":415,"column_start":12,"column_end":15},"name":"Ref","qualname":"::lens::lens::Ref","value":"","parent":null,"children":[],"decl_id":null,"docs":" [`Lens`] for invoking `AsRef` and `AsMut` on a type.","sig":null,"attributes":[{"value":"/ [`Lens`] for invoking `AsRef` and `AsMut` on a type.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":21565,"byte_end":21621,"line_start":407,"line_end":407,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":21622,"byte_end":21625,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ [`LensExt::ref`] offers an easy way to apply this,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":21626,"byte_end":21680,"line_start":409,"line_end":409,"column_start":1,"column_end":55}},{"value":"/ as well as more information and examples.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":21681,"byte_end":21726,"line_start":410,"line_end":410,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":21727,"byte_end":21730,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ [`Lens`]: ../trait.Lens.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":21731,"byte_end":21763,"line_start":412,"line_end":412,"column_start":1,"column_end":33}},{"value":"/ [`LensExt::ref`]: ../trait.LensExt.html#method.as_ref","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":21764,"byte_end":21821,"line_start":413,"line_end":413,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":5961},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":22234,"byte_end":22239,"line_start":431,"line_end":431,"column_start":12,"column_end":17},"name":"Index","qualname":"::lens::lens::Index","value":"Index {  }","parent":null,"children":[{"krate":0,"index":5963}],"decl_id":null,"docs":" `Lens` for indexing containers\n","sig":null,"attributes":[{"value":"/ `Lens` for indexing containers","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":22158,"byte_end":22192,"line_start":429,"line_end":429,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":22393,"byte_end":22396,"line_start":439,"line_end":439,"column_start":12,"column_end":15},"name":"new","qualname":"<Index<I>>::new","value":"pub fn new(I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a lens that accesses a particular index","sig":null,"attributes":[{"value":"/ Construct a lens that accesses a particular index","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":22285,"byte_end":22338,"line_start":436,"line_end":436,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":22343,"byte_end":22346,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ See also `LensExt::index`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":22351,"byte_end":22381,"line_start":438,"line_end":438,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5972},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":23047,"byte_end":23055,"line_start":463,"line_end":463,"column_start":12,"column_end":20},"name":"Identity","qualname":"::lens::lens::Identity","value":"","parent":null,"children":[],"decl_id":null,"docs":" The identity lens: the lens which does nothing, i.e. exposes exactly\n the original value.","sig":null,"attributes":[{"value":"/ The identity lens: the lens which does nothing, i.e. exposes exactly","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":22815,"byte_end":22887,"line_start":457,"line_end":457,"column_start":1,"column_end":73}},{"value":"/ the original value.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":22888,"byte_end":22911,"line_start":458,"line_end":458,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":22912,"byte_end":22915,"line_start":459,"line_end":459,"column_start":1,"column_end":4}},{"value":"/ Useful for starting a lens combinator chain, or passing to lens-based","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":22916,"byte_end":22989,"line_start":460,"line_end":460,"column_start":1,"column_end":74}},{"value":"/ interfaces.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":22990,"byte_end":23005,"line_start":461,"line_end":461,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":5979},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":23483,"byte_end":23488,"line_start":479,"line_end":479,"column_start":12,"column_end":17},"name":"InArc","qualname":"::lens::lens::InArc","value":"InArc {  }","parent":null,"children":[{"krate":0,"index":5981}],"decl_id":null,"docs":" A `Lens` that exposes data within an `Arc` with copy-on-write semantics","sig":null,"attributes":[{"value":"/ A `Lens` that exposes data within an `Arc` with copy-on-write semantics","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":23290,"byte_end":23365,"line_start":475,"line_end":475,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":23366,"byte_end":23369,"line_start":476,"line_end":476,"column_start":1,"column_end":4}},{"value":"/ A copy is only made in the event that a different value is written.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":23370,"byte_end":23441,"line_start":477,"line_end":477,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":23628,"byte_end":23631,"line_start":487,"line_end":487,"column_start":12,"column_end":15},"name":"new","qualname":"<InArc<L>>::new","value":"pub fn new<A, B>(L) -> Self where A: Clone, B: Data, L: Lens<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Adapt a lens to operate on an `Arc`","sig":null,"attributes":[{"value":"/ Adapt a lens to operate on an `Arc`","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":23534,"byte_end":23573,"line_start":484,"line_end":484,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":23578,"byte_end":23581,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ See also `LensExt::in_arc`","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":23586,"byte_end":23616,"line_start":486,"line_end":486,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5990},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":24555,"byte_end":24559,"line_start":522,"line_end":522,"column_start":12,"column_end":16},"name":"Unit","qualname":"::lens::lens::Unit","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Lens` that always yields ().","sig":null,"attributes":[{"value":"/ A `Lens` that always yields ().","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":24295,"byte_end":24330,"line_start":517,"line_end":517,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":24331,"byte_end":24334,"line_start":518,"line_end":518,"column_start":1,"column_end":4}},{"value":"/ This is useful when you wish to have a display only widget, require a type-erased widget, or","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":24335,"byte_end":24431,"line_start":519,"line_end":519,"column_start":1,"column_end":97}},{"value":"/ obtain app data out of band and ignore your input. (E.g sub-windows)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":24432,"byte_end":24504,"line_start":520,"line_end":520,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":5999},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":24934,"byte_end":24937,"line_start":537,"line_end":537,"column_start":12,"column_end":15},"name":"Not","qualname":"::lens::lens::Not","value":"","parent":null,"children":[],"decl_id":null,"docs":" A lens that negates a boolean.","sig":null,"attributes":[{"value":"/ A lens that negates a boolean.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":24788,"byte_end":24822,"line_start":533,"line_end":533,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":24823,"byte_end":24826,"line_start":534,"line_end":534,"column_start":1,"column_end":4}},{"value":"/ It should usually be created using the `LensExt::not` method.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":24827,"byte_end":24892,"line_start":535,"line_end":535,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":6006},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":25489,"byte_end":25497,"line_start":558,"line_end":558,"column_start":12,"column_end":20},"name":"Constant","qualname":"::lens::lens::Constant","value":"","parent":null,"children":[],"decl_id":null,"docs":" A lens that always gives the same value and discards changes.\n","sig":null,"attributes":[{"value":"/ A lens that always gives the same value and discards changes.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":25382,"byte_end":25447,"line_start":556,"line_end":556,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":6009},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":25501,"byte_end":25506,"line_start":558,"line_end":558,"column_start":24,"column_end":29},"name":"0","qualname":"::lens::lens::Constant::0","value":"T","parent":{"krate":0,"index":6006},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6019},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\util.rs","byte_start":28557,"byte_end":28560,"line_start":83,"line_end":83,"column_start":5,"column_end":8},"name":"Yes","qualname":"::util::Handled::Yes","value":"Handled::Yes","parent":{"krate":0,"index":6018},"children":[],"decl_id":null,"docs":" An event was already handled, and shouldn't be propagated to other event handlers.\n","sig":null,"attributes":[{"value":"/ An event was already handled, and shouldn't be propagated to other event handlers.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\util.rs","byte_start":28466,"byte_end":28552,"line_start":82,"line_end":82,"column_start":5,"column_end":91}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6021},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\util.rs","byte_start":28609,"byte_end":28611,"line_start":85,"line_end":85,"column_start":5,"column_end":7},"name":"No","qualname":"::util::Handled::No","value":"Handled::No","parent":{"krate":0,"index":6018},"children":[],"decl_id":null,"docs":" An event has not yet been handled.\n","sig":null,"attributes":[{"value":"/ An event has not yet been handled.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\util.rs","byte_start":28566,"byte_end":28604,"line_start":84,"line_end":84,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":6018},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\util.rs","byte_start":28452,"byte_end":28459,"line_start":81,"line_end":81,"column_start":10,"column_end":17},"name":"Handled","qualname":"::util::Handled","value":"pub enum Handled { Yes, No, }","parent":null,"children":[{"krate":0,"index":6019},{"krate":0,"index":6021}],"decl_id":null,"docs":" An enum for specifying whether an event was handled.\n","sig":null,"attributes":[{"value":"/ An enum for specifying whether an event was handled.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\util.rs","byte_start":28335,"byte_end":28391,"line_start":79,"line_end":79,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\util.rs","byte_start":28682,"byte_end":28692,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"is_handled","qualname":"<Handled>::is_handled","value":"pub fn is_handled(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Has the event been handled yet?\n","sig":null,"attributes":[{"value":"/ Has the event been handled yet?","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\util.rs","byte_start":28635,"byte_end":28670,"line_start":89,"line_end":89,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":339},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":30272,"byte_end":30283,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"AppLauncher","qualname":"::app::AppLauncher","value":"AppLauncher {  }","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344}],"decl_id":null,"docs":" Handles initial setup of an application, and starts the runloop.\n","sig":null,"attributes":[{"value":"/ Handles initial setup of an application, and starts the runloop.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":30192,"byte_end":30260,"line_start":32,"line_end":32,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":30611,"byte_end":30623,"line_start":42,"line_end":42,"column_start":12,"column_end":24},"name":"WindowConfig","qualname":"::app::WindowConfig","value":"WindowConfig {  }","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352}],"decl_id":null,"docs":" Window configuration that can be applied to a WindowBuilder, or to an existing WindowHandle.\n It does not include anything related to app data.\n","sig":null,"attributes":[{"value":"/ Window configuration that can be applied to a WindowBuilder, or to an existing WindowHandle.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":30449,"byte_end":30545,"line_start":40,"line_end":40,"column_start":1,"column_end":97}},{"value":"/ It does not include anything related to app data.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":30546,"byte_end":30599,"line_start":41,"line_end":41,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":30966,"byte_end":30976,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"WindowDesc","qualname":"::app::WindowDesc","value":"WindowDesc { id }","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357}],"decl_id":null,"docs":" A description of a window to be instantiated.\n","sig":null,"attributes":[{"value":"/ A description of a window to be instantiated.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":30905,"byte_end":30954,"line_start":52,"line_end":52,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":31245,"byte_end":31247,"line_start":60,"line_end":60,"column_start":9,"column_end":11},"name":"id","qualname":"::app::WindowDesc::id","value":"window::WindowId","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" The `WindowId` that will be assigned to this window.","sig":null,"attributes":[{"value":"/ The `WindowId` that will be assigned to this window.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":31065,"byte_end":31121,"line_start":56,"line_end":56,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":31126,"byte_end":31129,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This can be used to track a window from when it is launched and when","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":31134,"byte_end":31206,"line_start":58,"line_end":58,"column_start":5,"column_end":77}},{"value":"/ it actually connects.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":31211,"byte_end":31236,"line_start":59,"line_end":59,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":32820,"byte_end":32831,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"with_window","qualname":"<AppLauncher<T>>::with_window","value":"pub fn with_window(WindowDesc<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `AppLauncher` with the provided window.\n","sig":null,"attributes":[{"value":"/ Create a new `AppLauncher` with the provided window.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":32752,"byte_end":32808,"line_start":105,"line_end":105,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":33272,"byte_end":33285,"line_start":119,"line_end":119,"column_start":12,"column_end":25},"name":"configure_env","qualname":"<AppLauncher<T>>::configure_env","value":"pub fn configure_env<impl Fn(&mut Env, &T) + 'static: Fn(&mut Env, &T) -> () +\n'static>(Self, impl Fn(&mut Env, &T) + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Provide an optional closure that will be given mutable access to\n the environment and immutable access to the app state before launch.","sig":null,"attributes":[{"value":"/ Provide an optional closure that will be given mutable access to","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":33049,"byte_end":33117,"line_start":115,"line_end":115,"column_start":5,"column_end":73}},{"value":"/ the environment and immutable access to the app state before launch.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":33122,"byte_end":33194,"line_start":116,"line_end":116,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":33199,"byte_end":33202,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This can be used to set or override theme values.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":33207,"byte_end":33260,"line_start":118,"line_end":118,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":33506,"byte_end":33514,"line_start":127,"line_end":127,"column_start":12,"column_end":20},"name":"delegate","qualname":"<AppLauncher<T>>::delegate","value":"pub fn delegate<impl AppDelegate<T> + 'static: AppDelegate<T> +\n'static>(Self, impl AppDelegate<T> + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the [`AppDelegate`].","sig":null,"attributes":[{"value":"/ Set the [`AppDelegate`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":33410,"byte_end":33438,"line_start":124,"line_end":124,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":33443,"byte_end":33446,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`AppDelegate`]: trait.AppDelegate.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":33451,"byte_end":33494,"line_start":126,"line_end":126,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":33864,"byte_end":33881,"line_start":139,"line_end":139,"column_start":12,"column_end":29},"name":"use_simple_logger","qualname":"<AppLauncher<T>>::use_simple_logger","value":"pub fn use_simple_logger(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initialize a minimal logger for printing logs out to stderr.","sig":null,"attributes":[{"value":"/ Initialize a minimal logger for printing logs out to stderr.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":33650,"byte_end":33714,"line_start":132,"line_end":132,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":33719,"byte_end":33722,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Meant for use during development only.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":33727,"byte_end":33769,"line_start":134,"line_end":134,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":33774,"byte_end":33777,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":33782,"byte_end":33794,"line_start":136,"line_end":136,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":33799,"byte_end":33802,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ Panics if the logger fails to initialize.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":33807,"byte_end":33852,"line_start":138,"line_end":138,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":34422,"byte_end":34441,"line_start":153,"line_end":153,"column_start":12,"column_end":31},"name":"get_external_handle","qualname":"<AppLauncher<T>>::get_external_handle","value":"pub fn get_external_handle(&Self) -> ExtEventSink","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`ExtEventSink`] that can be moved between threads,\n and can be used to submit commands back to the application.","sig":null,"attributes":[{"value":"/ Returns an [`ExtEventSink`] that can be moved between threads,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":34217,"byte_end":34283,"line_start":149,"line_end":149,"column_start":5,"column_end":71}},{"value":"/ and can be used to submit commands back to the application.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":34288,"byte_end":34351,"line_start":150,"line_end":150,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":34356,"byte_end":34359,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [`ExtEventSink`]: struct.ExtEventSink.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":34364,"byte_end":34410,"line_start":152,"line_end":152,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":34682,"byte_end":34688,"line_start":161,"line_end":161,"column_start":12,"column_end":18},"name":"launch","qualname":"<AppLauncher<T>>::launch","value":"pub fn launch(Self, T) -> Result<(), PlatformError>","parent":null,"children":[],"decl_id":null,"docs":" Build the windows and start the runloop.","sig":null,"attributes":[{"value":"/ Build the windows and start the runloop.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":34518,"byte_end":34562,"line_start":157,"line_end":157,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":34567,"byte_end":34570,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Returns an error if a window cannot be instantiated. This is usually","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":34575,"byte_end":34647,"line_start":159,"line_end":159,"column_start":5,"column_end":77}},{"value":"/ a fatal error.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":34652,"byte_end":34670,"line_start":160,"line_end":160,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":36317,"byte_end":36328,"line_start":219,"line_end":219,"column_start":12,"column_end":23},"name":"window_size","qualname":"<WindowConfig>::window_size","value":"pub fn window_size<impl Into<Size>: Into<Size>>(Self, impl Into<Size>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the window's initial drawing area size in [display points].","sig":null,"attributes":[{"value":"/ Set the window's initial drawing area size in [display points].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":35657,"byte_end":35724,"line_start":203,"line_end":203,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":35729,"byte_end":35732,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ You can pass in a tuple `(width, height)` or a [`Size`],","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":35737,"byte_end":35797,"line_start":205,"line_end":205,"column_start":5,"column_end":65}},{"value":"/ e.g. to create a window with a drawing area 1000dp wide and 500dp high:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":35802,"byte_end":35877,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":35882,"byte_end":35885,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":35890,"byte_end":35903,"line_start":208,"line_end":208,"column_start":5,"column_end":18}},{"value":"/ window.window_size((1000.0, 500.0));","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":35908,"byte_end":35948,"line_start":209,"line_end":209,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":35953,"byte_end":35960,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":35965,"byte_end":35968,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ The actual window size in pixels will depend on the platform DPI settings.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":35973,"byte_end":36051,"line_start":212,"line_end":212,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":36056,"byte_end":36059,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ This should be considered a request to the platform to set the size of the window.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":36064,"byte_end":36150,"line_start":214,"line_end":214,"column_start":5,"column_end":91}},{"value":"/ The platform might increase the size a tiny bit due to DPI.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":36155,"byte_end":36218,"line_start":215,"line_end":215,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":36223,"byte_end":36226,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ [`Size`]: struct.Size.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":36231,"byte_end":36261,"line_start":217,"line_end":217,"column_start":5,"column_end":35}},{"value":"/ [display points]: struct.Scale.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":36266,"byte_end":36305,"line_start":218,"line_end":218,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":36968,"byte_end":36981,"line_start":235,"line_end":235,"column_start":12,"column_end":25},"name":"with_min_size","qualname":"<WindowConfig>::with_min_size","value":"pub fn with_min_size<impl Into<Size>: Into<Size>>(Self, impl Into<Size>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the window's minimum drawing area size in [display points].","sig":null,"attributes":[{"value":"/ Set the window's minimum drawing area size in [display points].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":36435,"byte_end":36502,"line_start":224,"line_end":224,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":36507,"byte_end":36510,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ The actual minimum window size in pixels will depend on the platform DPI settings.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":36515,"byte_end":36601,"line_start":226,"line_end":226,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":36606,"byte_end":36609,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ This should be considered a request to the platform to set the minimum size of the window.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":36614,"byte_end":36708,"line_start":228,"line_end":228,"column_start":5,"column_end":99}},{"value":"/ The platform might increase the size a tiny bit due to DPI.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":36713,"byte_end":36776,"line_start":229,"line_end":229,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":36781,"byte_end":36784,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ To set the window's initial drawing area size use [`window_size`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":36789,"byte_end":36859,"line_start":231,"line_end":231,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":36864,"byte_end":36867,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ [`window_size`]: #method.window_size","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":36872,"byte_end":36912,"line_start":233,"line_end":233,"column_start":5,"column_end":45}},{"value":"/ [display points]: struct.Scale.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":36917,"byte_end":36956,"line_start":234,"line_end":234,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":37145,"byte_end":37154,"line_start":241,"line_end":241,"column_start":12,"column_end":21},"name":"resizable","qualname":"<WindowConfig>::resizable","value":"pub fn resizable(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether the window should be resizable.\n","sig":null,"attributes":[{"value":"/ Set whether the window should be resizable.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":37086,"byte_end":37133,"line_start":240,"line_end":240,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":37336,"byte_end":37349,"line_start":247,"line_end":247,"column_start":12,"column_end":25},"name":"show_titlebar","qualname":"<WindowConfig>::show_titlebar","value":"pub fn show_titlebar(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether the window should have a titlebar and decorations.\n","sig":null,"attributes":[{"value":"/ Set whether the window should have a titlebar and decorations.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":37258,"byte_end":37324,"line_start":246,"line_end":246,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":37625,"byte_end":37637,"line_start":256,"line_end":256,"column_start":12,"column_end":24},"name":"set_position","qualname":"<WindowConfig>::set_position","value":"pub fn set_position(Self, Point) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the window position in virtual screen coordinates.\n [`position`] Position in pixels.","sig":null,"attributes":[{"value":"/ Sets the window position in virtual screen coordinates.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":37465,"byte_end":37524,"line_start":252,"line_end":252,"column_start":5,"column_end":64}},{"value":"/ [`position`] Position in pixels.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":37529,"byte_end":37565,"line_start":253,"line_end":253,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":37570,"byte_end":37573,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ [`position`]: struct.Point.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":37578,"byte_end":37613,"line_start":255,"line_end":255,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":37848,"byte_end":37857,"line_start":264,"line_end":264,"column_start":12,"column_end":21},"name":"set_level","qualname":"<WindowConfig>::set_level","value":"pub fn set_level(Self, WindowLevel) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`WindowLevel`] of the window","sig":null,"attributes":[{"value":"/ Sets the [`WindowLevel`] of the window","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":37739,"byte_end":37781,"line_start":261,"line_end":261,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":37786,"byte_end":37789,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ [`WindowLevel`]: enum.WindowLevel.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":37794,"byte_end":37836,"line_start":263,"line_end":263,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":38066,"byte_end":38082,"line_start":272,"line_end":272,"column_start":12,"column_end":28},"name":"set_window_state","qualname":"<WindowConfig>::set_window_state","value":"pub fn set_window_state(Self, WindowState) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`WindowState`] of the window.","sig":null,"attributes":[{"value":"/ Sets the [`WindowState`] of the window.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":37956,"byte_end":37999,"line_start":269,"line_end":269,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":38004,"byte_end":38007,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ [`WindowState`]: enum.WindowState.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":38012,"byte_end":38054,"line_start":271,"line_end":271,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":38259,"byte_end":38275,"line_start":278,"line_end":278,"column_start":12,"column_end":28},"name":"apply_to_builder","qualname":"<WindowConfig>::apply_to_builder","value":"pub fn apply_to_builder(&Self, &mut WindowBuilder)","parent":null,"children":[],"decl_id":null,"docs":" Apply this window configuration to the passed in WindowBuilder\n","sig":null,"attributes":[{"value":"/ Apply this window configuration to the passed in WindowBuilder","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":38181,"byte_end":38247,"line_start":277,"line_end":277,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":39047,"byte_end":39062,"line_start":307,"line_end":307,"column_start":12,"column_end":27},"name":"apply_to_handle","qualname":"<WindowConfig>::apply_to_handle","value":"pub fn apply_to_handle(&Self, &mut WindowHandle)","parent":null,"children":[],"decl_id":null,"docs":" Apply this window configuration to the passed in WindowHandle\n","sig":null,"attributes":[{"value":"/ Apply this window configuration to the passed in WindowHandle","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":38970,"byte_end":39035,"line_start":306,"line_end":306,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":40118,"byte_end":40121,"line_start":344,"line_end":344,"column_start":12,"column_end":15},"name":"new","qualname":"<WindowDesc<T>>::new","value":"pub fn new<W, F>(F) -> WindowDesc<T> where W: Widget<T> + 'static, F: FnOnce()\n-> W + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `WindowDesc`, taking a function that will generate the root\n [`Widget`] for this window.","sig":null,"attributes":[{"value":"/ Create a new `WindowDesc`, taking a function that will generate the root","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":39855,"byte_end":39931,"line_start":338,"line_end":338,"column_start":5,"column_end":81}},{"value":"/ [`Widget`] for this window.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":39936,"byte_end":39967,"line_start":339,"line_end":339,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":39972,"byte_end":39975,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ It is possible that a `WindowDesc` can be reused to launch multiple windows.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":39980,"byte_end":40060,"line_start":341,"line_end":341,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":40065,"byte_end":40068,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ [`Widget`]: trait.Widget.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":40073,"byte_end":40106,"line_start":343,"line_end":343,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":40766,"byte_end":40771,"line_start":362,"line_end":362,"column_start":12,"column_end":17},"name":"title","qualname":"<WindowDesc<T>>::title","value":"pub fn title<impl Into<LabelText<T>>: Into<LabelText<T>>>(Self,\nimpl Into<LabelText<T>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the title for this window. This is a [`LabelText`]; it can be either\n a `String`, a [`LocalizedString`], or a closure that computes a string;\n it will be kept up to date as the application's state changes.","sig":null,"attributes":[{"value":"/ Set the title for this window. This is a [`LabelText`]; it can be either","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":40406,"byte_end":40482,"line_start":356,"line_end":356,"column_start":5,"column_end":81}},{"value":"/ a `String`, a [`LocalizedString`], or a closure that computes a string;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":40487,"byte_end":40562,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ it will be kept up to date as the application's state changes.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":40567,"byte_end":40633,"line_start":358,"line_end":358,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":40638,"byte_end":40641,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ [`LabelText`]: widget/enum.LocalizedString.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":40646,"byte_end":40697,"line_start":360,"line_end":360,"column_start":5,"column_end":56}},{"value":"/ [`LocalizedString`]: struct.LocalizedString.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":40702,"byte_end":40754,"line_start":361,"line_end":361,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":40943,"byte_end":40947,"line_start":368,"line_end":368,"column_start":12,"column_end":16},"name":"menu","qualname":"<WindowDesc<T>>::menu","value":"pub fn menu(Self, MenuDesc<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the menu for this window.\n","sig":null,"attributes":[{"value":"/ Set the menu for this window.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":40898,"byte_end":40931,"line_start":367,"line_end":367,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":41719,"byte_end":41730,"line_start":389,"line_end":389,"column_start":12,"column_end":23},"name":"window_size","qualname":"<WindowDesc<T>>::window_size","value":"pub fn window_size<impl Into<Size>: Into<Size>>(Self, impl Into<Size>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the window's initial drawing area size in [display points].","sig":null,"attributes":[{"value":"/ Set the window's initial drawing area size in [display points].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":41059,"byte_end":41126,"line_start":373,"line_end":373,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":41131,"byte_end":41134,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ You can pass in a tuple `(width, height)` or a [`Size`],","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":41139,"byte_end":41199,"line_start":375,"line_end":375,"column_start":5,"column_end":65}},{"value":"/ e.g. to create a window with a drawing area 1000dp wide and 500dp high:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":41204,"byte_end":41279,"line_start":376,"line_end":376,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":41284,"byte_end":41287,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":41292,"byte_end":41305,"line_start":378,"line_end":378,"column_start":5,"column_end":18}},{"value":"/ window.window_size((1000.0, 500.0));","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":41310,"byte_end":41350,"line_start":379,"line_end":379,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":41355,"byte_end":41362,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":41367,"byte_end":41370,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ The actual window size in pixels will depend on the platform DPI settings.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":41375,"byte_end":41453,"line_start":382,"line_end":382,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":41458,"byte_end":41461,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This should be considered a request to the platform to set the size of the window.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":41466,"byte_end":41552,"line_start":384,"line_end":384,"column_start":5,"column_end":91}},{"value":"/ The platform might increase the size a tiny bit due to DPI.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":41557,"byte_end":41620,"line_start":385,"line_end":385,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":41625,"byte_end":41628,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ [`Size`]: struct.Size.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":41633,"byte_end":41663,"line_start":387,"line_end":387,"column_start":5,"column_end":35}},{"value":"/ [display points]: struct.Scale.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":41668,"byte_end":41707,"line_start":388,"line_end":388,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":42377,"byte_end":42390,"line_start":405,"line_end":405,"column_start":12,"column_end":25},"name":"with_min_size","qualname":"<WindowDesc<T>>::with_min_size","value":"pub fn with_min_size<impl Into<Size>: Into<Size>>(Self, impl Into<Size>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the window's minimum drawing area size in [display points].","sig":null,"attributes":[{"value":"/ Set the window's minimum drawing area size in [display points].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":41844,"byte_end":41911,"line_start":394,"line_end":394,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":41916,"byte_end":41919,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The actual minimum window size in pixels will depend on the platform DPI settings.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":41924,"byte_end":42010,"line_start":396,"line_end":396,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":42015,"byte_end":42018,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ This should be considered a request to the platform to set the minimum size of the window.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":42023,"byte_end":42117,"line_start":398,"line_end":398,"column_start":5,"column_end":99}},{"value":"/ The platform might increase the size a tiny bit due to DPI.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":42122,"byte_end":42185,"line_start":399,"line_end":399,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":42190,"byte_end":42193,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ To set the window's initial drawing area size use [`window_size`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":42198,"byte_end":42268,"line_start":401,"line_end":401,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":42273,"byte_end":42276,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ [`window_size`]: #method.window_size","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":42281,"byte_end":42321,"line_start":403,"line_end":403,"column_start":5,"column_end":45}},{"value":"/ [display points]: struct.Scale.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":42326,"byte_end":42365,"line_start":404,"line_end":404,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":42592,"byte_end":42601,"line_start":411,"line_end":411,"column_start":12,"column_end":21},"name":"resizable","qualname":"<WindowDesc<T>>::resizable","value":"pub fn resizable(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to set whether this window can be resized.\n","sig":null,"attributes":[{"value":"/ Builder-style method to set whether this window can be resized.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":42513,"byte_end":42580,"line_start":410,"line_end":410,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":42805,"byte_end":42818,"line_start":417,"line_end":417,"column_start":12,"column_end":25},"name":"show_titlebar","qualname":"<WindowDesc<T>>::show_titlebar","value":"pub fn show_titlebar(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to set whether this window's titlebar is visible.\n","sig":null,"attributes":[{"value":"/ Builder-style method to set whether this window's titlebar is visible.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":42719,"byte_end":42793,"line_start":416,"line_end":416,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":43116,"byte_end":43128,"line_start":426,"line_end":426,"column_start":12,"column_end":24},"name":"set_position","qualname":"<WindowDesc<T>>::set_position","value":"pub fn set_position<impl Into<Point>: Into<Point>>(Self, impl Into<Point>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the initial window position in virtual screen coordinates.\n [`position`] Position in pixels.","sig":null,"attributes":[{"value":"/ Sets the initial window position in virtual screen coordinates.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":42948,"byte_end":43015,"line_start":422,"line_end":422,"column_start":5,"column_end":72}},{"value":"/ [`position`] Position in pixels.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":43020,"byte_end":43056,"line_start":423,"line_end":423,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":43061,"byte_end":43064,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ [`position`]: struct.Point.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":43069,"byte_end":43104,"line_start":425,"line_end":425,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":43315,"byte_end":43331,"line_start":432,"line_end":432,"column_start":12,"column_end":28},"name":"set_window_state","qualname":"<WindowDesc<T>>::set_window_state","value":"pub fn set_window_state(Self, WindowState) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set initial state for the window.\n","sig":null,"attributes":[{"value":"/ Set initial state for the window.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":43266,"byte_end":43303,"line_start":431,"line_end":431,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":44651,"byte_end":44662,"line_start":27,"line_end":27,"column_start":12,"column_end":23},"name":"DelegateCtx","qualname":"::app_delegate::DelegateCtx","value":"DelegateCtx {  }","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461}],"decl_id":null,"docs":" A context passed in to [`AppDelegate`] functions.","sig":null,"attributes":[{"value":"/ A context passed in to [`AppDelegate`] functions.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":44538,"byte_end":44591,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":44592,"byte_end":44595,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`AppDelegate`]: trait.AppDelegate.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":44596,"byte_end":44639,"line_start":26,"line_end":26,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":45256,"byte_end":45270,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"name":"submit_command","qualname":"<DelegateCtx>::submit_command","value":"pub fn submit_command<impl Into<Command>: Into<Command>>(&mut Self,\nimpl Into<Command>)","parent":null,"children":[],"decl_id":null,"docs":" Submit a [`Command`] to be run after this event is handled.","sig":null,"attributes":[{"value":"/ Submit a [`Command`] to be run after this event is handled.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":44793,"byte_end":44856,"line_start":33,"line_end":33,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":44861,"byte_end":44864,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Commands are run in the order they are submitted; all commands","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":44869,"byte_end":44935,"line_start":35,"line_end":35,"column_start":5,"column_end":71}},{"value":"/ submitted during the handling of an event are executed before","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":44940,"byte_end":45005,"line_start":36,"line_end":36,"column_start":5,"column_end":70}},{"value":"/ the [`update()`] method is called.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":45010,"byte_end":45048,"line_start":37,"line_end":37,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":45053,"byte_end":45056,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`Target::Auto`] commands will be sent to every window (`Target::Global`).","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":45061,"byte_end":45139,"line_start":39,"line_end":39,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":45144,"byte_end":45147,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ [`Command`]: struct.Command.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":45152,"byte_end":45188,"line_start":41,"line_end":41,"column_start":5,"column_end":41}},{"value":"/ [`update()`]: trait.Widget.html#tymethod.update","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":45193,"byte_end":45244,"line_start":42,"line_end":42,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":45635,"byte_end":45645,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"new_window","qualname":"<DelegateCtx>::new_window","value":"pub fn new_window<T: Any>(&mut Self, WindowDesc<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new window.\n `T` must be the application's root `Data` type (the type provided to [`AppLauncher::launch`]).","sig":null,"attributes":[{"value":"/ Create a new window.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":45417,"byte_end":45441,"line_start":48,"line_end":48,"column_start":5,"column_end":29}},{"value":"/ `T` must be the application's root `Data` type (the type provided to [`AppLauncher::launch`]).","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":45446,"byte_end":45544,"line_start":49,"line_end":49,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":45549,"byte_end":45552,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ [`AppLauncher::launch`]: struct.AppLauncher.html#method.launch","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":45557,"byte_end":45623,"line_start":51,"line_end":51,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":46281,"byte_end":46289,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"set_menu","qualname":"<DelegateCtx>::set_menu","value":"pub fn set_menu<T: Any>(&mut Self, MenuDesc<T>, WindowId)","parent":null,"children":[],"decl_id":null,"docs":" Set the window's menu.\n `T` must be the application's root `Data` type (the type provided to [`AppLauncher::launch`]).","sig":null,"attributes":[{"value":"/ Set the window's menu.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":46061,"byte_end":46087,"line_start":64,"line_end":64,"column_start":5,"column_end":31}},{"value":"/ `T` must be the application's root `Data` type (the type provided to [`AppLauncher::launch`]).","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":46092,"byte_end":46190,"line_start":65,"line_end":65,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":46195,"byte_end":46198,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ [`AppLauncher::launch`]: struct.AppLauncher.html#method.launch","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":46203,"byte_end":46269,"line_start":67,"line_end":67,"column_start":5,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":47100,"byte_end":47111,"line_start":90,"line_end":90,"column_start":11,"column_end":22},"name":"AppDelegate","qualname":"::app_delegate::AppDelegate","value":"AppDelegate<T: Data>","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475}],"decl_id":null,"docs":" A type that provides hooks for handling and modifying top-level events.","sig":null,"attributes":[{"value":"/ A type that provides hooks for handling and modifying top-level events.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":46707,"byte_end":46782,"line_start":81,"line_end":81,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":46783,"byte_end":46786,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ The `AppDelegate` is a trait that is allowed to handle and modify","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":46787,"byte_end":46856,"line_start":83,"line_end":83,"column_start":1,"column_end":70}},{"value":"/ events before they are passed down the widget tree.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":46857,"byte_end":46912,"line_start":84,"line_end":84,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":46913,"byte_end":46916,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ It is a natural place for things like window and menu management.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":46917,"byte_end":46986,"line_start":86,"line_end":86,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":46987,"byte_end":46990,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ You customize the `AppDelegate` by implementing its methods on your own type.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":46991,"byte_end":47072,"line_start":88,"line_end":88,"column_start":1,"column_end":82}},{"value":"allow(unused)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":47073,"byte_end":47089,"line_start":89,"line_end":89,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":47563,"byte_end":47568,"line_start":99,"line_end":99,"column_start":8,"column_end":13},"name":"event","qualname":"::app_delegate::AppDelegate::event","value":"pub fn event(&mut Self, &mut DelegateCtx, WindowId, Event, &mut T, &Env)\n-> Option<Event>","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" The `AppDelegate`'s event handler. This function receives all\n non-command events, before they are passed down the tree.","sig":null,"attributes":[{"value":"/ The `AppDelegate`'s event handler. This function receives all","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":47127,"byte_end":47192,"line_start":91,"line_end":91,"column_start":5,"column_end":70}},{"value":"/ non-command events, before they are passed down the tree.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":47197,"byte_end":47258,"line_start":92,"line_end":92,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":47263,"byte_end":47266,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ The return value of this function will be passed down the tree. This can","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":47271,"byte_end":47347,"line_start":94,"line_end":94,"column_start":5,"column_end":81}},{"value":"/ be the event that was passed in, a different event, or no event. In all cases,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":47352,"byte_end":47434,"line_start":95,"line_end":95,"column_start":5,"column_end":87}},{"value":"/ the [`update()`] method will be called as usual.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":47439,"byte_end":47491,"line_start":96,"line_end":96,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":47496,"byte_end":47499,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ [`update()`]: trait.Widget.html#tymethod.update","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":47504,"byte_end":47555,"line_start":98,"line_end":98,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":48385,"byte_end":48392,"line_start":124,"line_end":124,"column_start":8,"column_end":15},"name":"command","qualname":"::app_delegate::AppDelegate::command","value":"pub fn command(&mut Self, &mut DelegateCtx, Target, &Command, &mut T, &Env)\n-> Handled","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" The `AppDelegate`s [`Command`] handler.","sig":null,"attributes":[{"value":"/ The `AppDelegate`s [`Command`] handler.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":47768,"byte_end":47811,"line_start":110,"line_end":110,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":47816,"byte_end":47819,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This function is called with each ([`Target`], [`Command`]) pair before","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":47824,"byte_end":47899,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/ they are sent down the tree.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":47904,"byte_end":47936,"line_start":113,"line_end":113,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":47941,"byte_end":47944,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ If your implementation returns `Handled::No`, the command will be sent down","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":47949,"byte_end":48028,"line_start":115,"line_end":115,"column_start":5,"column_end":84}},{"value":"/ the widget tree. Otherwise it will not.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":48033,"byte_end":48076,"line_start":116,"line_end":116,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":48081,"byte_end":48084,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ To do anything fancier than this, you can submit arbitary commands","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":48089,"byte_end":48159,"line_start":118,"line_end":118,"column_start":5,"column_end":75}},{"value":"/ via [`DelegateCtx::submit_command`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":48164,"byte_end":48204,"line_start":119,"line_end":119,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":48209,"byte_end":48212,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ [`Target`]: enum.Target.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":48217,"byte_end":48249,"line_start":121,"line_end":121,"column_start":5,"column_end":37}},{"value":"/ [`Command`]: struct.Command.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":48254,"byte_end":48290,"line_start":122,"line_end":122,"column_start":5,"column_end":41}},{"value":"/ [`DelegateCtx::submit_command`]: struct.DelegateCtx.html#method.submit_command","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":48295,"byte_end":48377,"line_start":123,"line_end":123,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":48772,"byte_end":48784,"line_start":138,"line_end":138,"column_start":8,"column_end":20},"name":"window_added","qualname":"::app_delegate::AppDelegate::window_added","value":"pub fn window_added(&mut Self, WindowId, &mut T, &Env, &mut DelegateCtx)","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" The handler for window creation events.\n This function is called after a window has been added,\n allowing you to customize the window creation behavior of your app.\n","sig":null,"attributes":[{"value":"/ The handler for window creation events.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":48582,"byte_end":48625,"line_start":135,"line_end":135,"column_start":5,"column_end":48}},{"value":"/ This function is called after a window has been added,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":48630,"byte_end":48688,"line_start":136,"line_end":136,"column_start":5,"column_end":63}},{"value":"/ allowing you to customize the window creation behavior of your app.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":48693,"byte_end":48764,"line_start":137,"line_end":137,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":48982,"byte_end":48996,"line_start":142,"line_end":142,"column_start":8,"column_end":22},"name":"window_removed","qualname":"::app_delegate::AppDelegate::window_removed","value":"pub fn window_removed(&mut Self, WindowId, &mut T, &Env, &mut DelegateCtx)","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" The handler for window deletion events.\n This function is called after a window has been removed.\n","sig":null,"attributes":[{"value":"/ The handler for window deletion events.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":48866,"byte_end":48909,"line_start":140,"line_end":140,"column_start":5,"column_end":48}},{"value":"/ This function is called after a window has been removed.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":48914,"byte_end":48974,"line_start":141,"line_end":141,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":6047},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":55629,"byte_end":55643,"line_start":38,"line_end":38,"column_start":12,"column_end":26},"name":"BoxConstraints","qualname":"::box_constraints::BoxConstraints","value":"BoxConstraints {  }","parent":null,"children":[{"krate":0,"index":6048},{"krate":0,"index":6049}],"decl_id":null,"docs":" Constraints for layout.","sig":null,"attributes":[{"value":"/ Constraints for layout.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":54779,"byte_end":54806,"line_start":19,"line_end":19,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":54807,"byte_end":54810,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The layout strategy for druid is strongly inspired by Flutter,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":54811,"byte_end":54877,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/ and this struct is similar to the [Flutter BoxConstraints] class.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":54878,"byte_end":54947,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":54948,"byte_end":54951,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ At the moment, it represents simply a minimum and maximum size.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":54952,"byte_end":55019,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ A widget's [`layout`] method should choose an appropriate size that","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":55020,"byte_end":55091,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ meets these constraints.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":55092,"byte_end":55120,"line_start":26,"line_end":26,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":55121,"byte_end":55124,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Further, a container widget should compute appropriate constraints","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":55125,"byte_end":55195,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/ for each of its child widgets, and pass those down when recursing.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":55196,"byte_end":55266,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":55267,"byte_end":55270,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The constraints are always [rounded away from zero] to integers","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":55271,"byte_end":55338,"line_start":31,"line_end":31,"column_start":1,"column_end":68}},{"value":"/ to enable pixel perfect layout.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":55339,"byte_end":55374,"line_start":32,"line_end":32,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":55375,"byte_end":55378,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`layout`]: trait.Widget.html#tymethod.layout","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":55379,"byte_end":55428,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ [Flutter BoxConstraints]: https://api.flutter.dev/flutter/rendering/BoxConstraints-class.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":55429,"byte_end":55526,"line_start":35,"line_end":35,"column_start":1,"column_end":98}},{"value":"/ [rounded away from zero]: struct.Size.html#method.expand","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":55527,"byte_end":55587,"line_start":36,"line_end":36,"column_start":1,"column_end":61}}]},{"kind":"Const","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":55818,"byte_end":55827,"line_start":47,"line_end":47,"column_start":15,"column_end":24},"name":"UNBOUNDED","qualname":"::box_constraints::BoxConstraints::UNBOUNDED","value":"BoxConstraints","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" An unbounded box constraints object.","sig":null,"attributes":[{"value":"/ An unbounded box constraints object.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":55705,"byte_end":55745,"line_start":44,"line_end":44,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":55750,"byte_end":55753,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Can be satisfied by any nonnegative size.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":55758,"byte_end":55803,"line_start":46,"line_end":46,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":56267,"byte_end":56270,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<BoxConstraints>::new","value":"pub fn new(Size, Size) -> BoxConstraints","parent":null,"children":[],"decl_id":null,"docs":" Create a new box constraints object.","sig":null,"attributes":[{"value":"/ Create a new box constraints object.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":55954,"byte_end":55994,"line_start":52,"line_end":52,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":55999,"byte_end":56002,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Create constraints based on minimum and maximum size.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":56007,"byte_end":56064,"line_start":54,"line_end":54,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":56069,"byte_end":56072,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ The given sizes are also [rounded away from zero],","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":56077,"byte_end":56131,"line_start":56,"line_end":56,"column_start":5,"column_end":59}},{"value":"/ so that the layout is aligned to integers.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":56136,"byte_end":56182,"line_start":57,"line_end":57,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":56187,"byte_end":56190,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ [rounded away from zero]: struct.Size.html#method.expand","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":56195,"byte_end":56255,"line_start":59,"line_end":59,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":56743,"byte_end":56748,"line_start":75,"line_end":75,"column_start":12,"column_end":17},"name":"tight","qualname":"<BoxConstraints>::tight","value":"pub fn tight(Size) -> BoxConstraints","parent":null,"children":[],"decl_id":null,"docs":" Create a \"tight\" box constraints object.","sig":null,"attributes":[{"value":"/ Create a \"tight\" box constraints object.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":56421,"byte_end":56465,"line_start":67,"line_end":67,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":56470,"byte_end":56473,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ A \"tight\" constraint can only be satisfied by a single size.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":56478,"byte_end":56542,"line_start":69,"line_end":69,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":56547,"byte_end":56550,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ The given size is also [rounded away from zero],","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":56555,"byte_end":56607,"line_start":71,"line_end":71,"column_start":5,"column_end":57}},{"value":"/ so that the layout is aligned to integers.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":56612,"byte_end":56658,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":56663,"byte_end":56666,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [rounded away from zero]: struct.Size.html#method.expand","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":56671,"byte_end":56731,"line_start":74,"line_end":74,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":57049,"byte_end":57055,"line_start":86,"line_end":86,"column_start":12,"column_end":18},"name":"loosen","qualname":"<BoxConstraints>::loosen","value":"pub fn loosen(&Self) -> BoxConstraints","parent":null,"children":[],"decl_id":null,"docs":" Create a \"loose\" version of the constraints.","sig":null,"attributes":[{"value":"/ Create a \"loose\" version of the constraints.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":56907,"byte_end":56955,"line_start":83,"line_end":83,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":56960,"byte_end":56963,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Make a version with zero minimum size, but the same maximum size.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":56968,"byte_end":57037,"line_start":85,"line_end":85,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":57448,"byte_end":57457,"line_start":99,"line_end":99,"column_start":12,"column_end":21},"name":"constrain","qualname":"<BoxConstraints>::constrain","value":"pub fn constrain<impl Into<Size>: Into<Size>>(&Self, impl Into<Size>) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Clamp a given size so that it fits within the constraints.","sig":null,"attributes":[{"value":"/ Clamp a given size so that it fits within the constraints.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":57185,"byte_end":57247,"line_start":93,"line_end":93,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":57252,"byte_end":57255,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ The given size is also [rounded away from zero],","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":57260,"byte_end":57312,"line_start":95,"line_end":95,"column_start":5,"column_end":57}},{"value":"/ so that the layout is aligned to integers.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":57317,"byte_end":57363,"line_start":96,"line_end":96,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":57368,"byte_end":57371,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ [rounded away from zero]: struct.Size.html#method.expand","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":57376,"byte_end":57436,"line_start":98,"line_end":98,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":57622,"byte_end":57625,"line_start":104,"line_end":104,"column_start":12,"column_end":15},"name":"max","qualname":"<BoxConstraints>::max","value":"pub fn max(&Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Returns the max size of these constraints.\n","sig":null,"attributes":[{"value":"/ Returns the max size of these constraints.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":57564,"byte_end":57610,"line_start":103,"line_end":103,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":57729,"byte_end":57732,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"min","qualname":"<BoxConstraints>::min","value":"pub fn min(&Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Returns the min size of these constraints.\n","sig":null,"attributes":[{"value":"/ Returns the min size of these constraints.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":57671,"byte_end":57717,"line_start":108,"line_end":108,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":57839,"byte_end":57855,"line_start":114,"line_end":114,"column_start":12,"column_end":28},"name":"is_width_bounded","qualname":"<BoxConstraints>::is_width_bounded","value":"pub fn is_width_bounded(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether there is an upper bound on the width.\n","sig":null,"attributes":[{"value":"/ Whether there is an upper bound on the width.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":57778,"byte_end":57827,"line_start":113,"line_end":113,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":57981,"byte_end":57998,"line_start":119,"line_end":119,"column_start":12,"column_end":29},"name":"is_height_bounded","qualname":"<BoxConstraints>::is_height_bounded","value":"pub fn is_height_bounded(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether there is an upper bound on the height.\n","sig":null,"attributes":[{"value":"/ Whether there is an upper bound on the height.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":57919,"byte_end":57969,"line_start":118,"line_end":118,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":58185,"byte_end":58196,"line_start":126,"line_end":126,"column_start":12,"column_end":23},"name":"debug_check","qualname":"<BoxConstraints>::debug_check","value":"pub fn debug_check(&Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Check to see if these constraints are legit.","sig":null,"attributes":[{"value":"/ Check to see if these constraints are legit.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":58063,"byte_end":58111,"line_start":123,"line_end":123,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":58116,"byte_end":58119,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Logs a warning if BoxConstraints are invalid.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":58124,"byte_end":58173,"line_start":125,"line_end":125,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":59128,"byte_end":59134,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"shrink","qualname":"<BoxConstraints>::shrink","value":"pub fn shrink<impl Into<Size>: Into<Size>>(&Self, impl Into<Size>)\n-> BoxConstraints","parent":null,"children":[],"decl_id":null,"docs":" Shrink min and max constraints by size","sig":null,"attributes":[{"value":"/ Shrink min and max constraints by size","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":58885,"byte_end":58927,"line_start":147,"line_end":147,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":58932,"byte_end":58935,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ The given size is also [rounded away from zero],","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":58940,"byte_end":58992,"line_start":149,"line_end":149,"column_start":5,"column_end":57}},{"value":"/ so that the layout is aligned to integers.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":58997,"byte_end":59043,"line_start":150,"line_end":150,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":59048,"byte_end":59051,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [rounded away from zero]: struct.Size.html#method.expand","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":59056,"byte_end":59116,"line_start":152,"line_end":152,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":59644,"byte_end":59652,"line_start":168,"line_end":168,"column_start":12,"column_end":20},"name":"contains","qualname":"<BoxConstraints>::contains","value":"pub fn contains<impl Into<Size>: Into<Size>>(&Self, impl Into<Size>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether these constraints contain the given `Size`.\n","sig":null,"attributes":[{"value":"/ Test whether these constraints contain the given `Size`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":59572,"byte_end":59632,"line_start":167,"line_end":167,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":60610,"byte_end":60632,"line_start":185,"line_end":185,"column_start":12,"column_end":34},"name":"constrain_aspect_ratio","qualname":"<BoxConstraints>::constrain_aspect_ratio","value":"pub fn constrain_aspect_ratio(&Self, f64, f64) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Find the `Size` within these `BoxConstraint`s that minimises the difference between the\n returned `Size`'s aspect ratio and `aspect_ratio`, where *aspect ratio* is defined as\n `height / width`.","sig":null,"attributes":[{"value":"/ Find the `Size` within these `BoxConstraint`s that minimises the difference between the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":59889,"byte_end":59980,"line_start":174,"line_end":174,"column_start":5,"column_end":96}},{"value":"/ returned `Size`'s aspect ratio and `aspect_ratio`, where *aspect ratio* is defined as","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":59985,"byte_end":60074,"line_start":175,"line_end":175,"column_start":5,"column_end":94}},{"value":"/ `height / width`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":60079,"byte_end":60100,"line_start":176,"line_end":176,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":60105,"byte_end":60108,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ If multiple `Size`s give the optimal `aspect_ratio`, then the one with the `width` nearest","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":60113,"byte_end":60207,"line_start":178,"line_end":178,"column_start":5,"column_end":99}},{"value":"/ the supplied width will be used. Specifically, if `width == 0.0` then the smallest possible","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":60212,"byte_end":60307,"line_start":179,"line_end":179,"column_start":5,"column_end":100}},{"value":"/ `Size` will be chosen, and likewise if `width == f64::INFINITY`, then the largest `Size`","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":60312,"byte_end":60404,"line_start":180,"line_end":180,"column_start":5,"column_end":97}},{"value":"/ will be chosen.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":60409,"byte_end":60428,"line_start":181,"line_end":181,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":60433,"byte_end":60436,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Use this function when maintaining an aspect ratio is more important than minimizing the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":60441,"byte_end":60533,"line_start":183,"line_end":183,"column_start":5,"column_end":97}},{"value":"/ distance between input and output size width and height.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":60538,"byte_end":60598,"line_start":184,"line_end":184,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":6055},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":68872,"byte_end":68880,"line_start":47,"line_end":47,"column_start":12,"column_end":20},"name":"Selector","qualname":"::command::Selector","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for a particular command.","sig":null,"attributes":[{"value":"/ An identifier for a particular command.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":68106,"byte_end":68149,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":68150,"byte_end":68153,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This should be a unique string identifier.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":68154,"byte_end":68200,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/ Having multiple selectors with the same identifier but different payload","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":68201,"byte_end":68277,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ types is not allowed and can cause [`Command::get`] and [`get_unchecked`] to panic.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":68278,"byte_end":68365,"line_start":34,"line_end":34,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":68366,"byte_end":68369,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` specifies the command's payload type.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":68370,"byte_end":68434,"line_start":36,"line_end":36,"column_start":1,"column_end":65}},{"value":"/ See [`Command`] for more information.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":68435,"byte_end":68476,"line_start":37,"line_end":37,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":68477,"byte_end":68480,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Certain `Selector`s are defined by druid, and have special meaning","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":68481,"byte_end":68551,"line_start":39,"line_end":39,"column_start":1,"column_end":71}},{"value":"/ to the framework; these are listed in the [`druid::commands`] module.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":68552,"byte_end":68625,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":68626,"byte_end":68629,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`Command`]: struct.Command.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":68630,"byte_end":68666,"line_start":42,"line_end":42,"column_start":1,"column_end":37}},{"value":"/ [`Command::get`]: struct.Command.html#method.get","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":68667,"byte_end":68719,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ [`get_unchecked`]: struct.Command.html#method.get_unchecked","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":68720,"byte_end":68783,"line_start":44,"line_end":44,"column_start":1,"column_end":64}},{"value":"/ [`druid::commands`]: commands/index.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":68784,"byte_end":68828,"line_start":45,"line_end":45,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":6074},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":70060,"byte_end":70067,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"Command","qualname":"::command::Command","value":"Command {  }","parent":null,"children":[{"krate":0,"index":6075},{"krate":0,"index":6076},{"krate":0,"index":6077}],"decl_id":null,"docs":" An arbitrary command.","sig":null,"attributes":[{"value":"/ An arbitrary command.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":68923,"byte_end":68948,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":68949,"byte_end":68952,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ A `Command` consists of a [`Selector`], that indicates what the command is","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":68953,"byte_end":69031,"line_start":51,"line_end":51,"column_start":1,"column_end":79}},{"value":"/ and what type of payload it carries, as well as the actual payload.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":69032,"byte_end":69103,"line_start":52,"line_end":52,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":69104,"byte_end":69107,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ If the payload can't or shouldn't be cloned,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":69108,"byte_end":69156,"line_start":54,"line_end":54,"column_start":1,"column_end":49}},{"value":"/ wrapping it with [`SingleUse`] allows you to `take` the payload.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":69157,"byte_end":69225,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ The [`SingleUse`] docs give an example on how to do this.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":69226,"byte_end":69287,"line_start":56,"line_end":56,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":69288,"byte_end":69291,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Generic payloads can be achieved with `Selector<Box<dyn Any>>`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":69292,"byte_end":69359,"line_start":58,"line_end":58,"column_start":1,"column_end":68}},{"value":"/ In this case it could make sense to use utility functions to construct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":69360,"byte_end":69434,"line_start":59,"line_end":59,"column_start":1,"column_end":75}},{"value":"/ such commands in order to maintain as much static typing as possible.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":69435,"byte_end":69508,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/ The [`EventCtx::new_window`] method is an example of this.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":69509,"byte_end":69571,"line_start":61,"line_end":61,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":69572,"byte_end":69575,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":69576,"byte_end":69590,"line_start":63,"line_end":63,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":69591,"byte_end":69598,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ use druid::{Command, Selector, Target};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":69599,"byte_end":69642,"line_start":65,"line_end":65,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":69643,"byte_end":69646,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ let selector = Selector::new(\"process_rows\");","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":69647,"byte_end":69696,"line_start":67,"line_end":67,"column_start":1,"column_end":50}},{"value":"/ let rows = vec![1, 3, 10, 12];","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":69697,"byte_end":69731,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/ let command = Command::new(selector, rows, Target::Auto);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":69732,"byte_end":69793,"line_start":69,"line_end":69,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":69794,"byte_end":69797,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(command.get(selector), Some(&vec![1, 3, 10, 12]));","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":69798,"byte_end":69863,"line_start":71,"line_end":71,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":69864,"byte_end":69871,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":69872,"byte_end":69875,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ [`EventCtx::new_window`]: struct.EventCtx.html#method.new_window","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":69876,"byte_end":69944,"line_start":74,"line_end":74,"column_start":1,"column_end":69}},{"value":"/ [`SingleUse`]: struct.SingleUse.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":69945,"byte_end":69985,"line_start":75,"line_end":75,"column_start":1,"column_end":41}},{"value":"/ [`Selector`]: struct.Selector.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":69986,"byte_end":70024,"line_start":76,"line_end":76,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":6082},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71080,"byte_end":71092,"line_start":102,"line_end":102,"column_start":12,"column_end":24},"name":"Notification","qualname":"::command::Notification","value":"Notification {  }","parent":null,"children":[{"krate":0,"index":6083},{"krate":0,"index":6084},{"krate":0,"index":6085}],"decl_id":null,"docs":" A message passed up the tree from a [`Widget`] to its ancestors.","sig":null,"attributes":[{"value":"/ A message passed up the tree from a [`Widget`] to its ancestors.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":70148,"byte_end":70216,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":70217,"byte_end":70220,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ In the course of handling an event, a [`Widget`] may change some internal","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":70221,"byte_end":70298,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/ state that is of interest to one of its ancestors. In this case, the widget","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":70299,"byte_end":70378,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/ may submit a [`Notification`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":70379,"byte_end":70413,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":70414,"byte_end":70417,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ In practice, a [`Notification`] is very similar to a [`Command`]; the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":70418,"byte_end":70491,"line_start":90,"line_end":90,"column_start":1,"column_end":74}},{"value":"/ main distinction relates to delivery. [`Command`]s are delivered from the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":70492,"byte_end":70569,"line_start":91,"line_end":91,"column_start":1,"column_end":78}},{"value":"/ root of the tree down towards the target, and this delivery occurs after","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":70570,"byte_end":70646,"line_start":92,"line_end":92,"column_start":1,"column_end":77}},{"value":"/ the originating event call has returned. [`Notification`]s are delivered *up*","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":70647,"byte_end":70728,"line_start":93,"line_end":93,"column_start":1,"column_end":82}},{"value":"/ the tree, and this occurs *during* event handling; immediately after the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":70729,"byte_end":70805,"line_start":94,"line_end":94,"column_start":1,"column_end":77}},{"value":"/ child widget's [`event`] method returns, the notification will be delivered","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":70806,"byte_end":70885,"line_start":95,"line_end":95,"column_start":1,"column_end":80}},{"value":"/ to the child's parent, and then the parent's parent, until the notification","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":70886,"byte_end":70965,"line_start":96,"line_end":96,"column_start":1,"column_end":80}},{"value":"/ is handled.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":70966,"byte_end":70981,"line_start":97,"line_end":97,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":70982,"byte_end":70985,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ [`Widget`]: crate::Widget","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":70986,"byte_end":71015,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/ [`event`]: crate::Widget::event","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71016,"byte_end":71051,"line_start":100,"line_end":100,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71970,"byte_end":71979,"line_start":134,"line_end":134,"column_start":12,"column_end":21},"name":"SingleUse","qualname":"::command::SingleUse","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper type for [`Command`] payloads that should only be used once.","sig":null,"attributes":[{"value":"/ A wrapper type for [`Command`] payloads that should only be used once.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71175,"byte_end":71249,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71250,"byte_end":71253,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ This is useful if you have some resource that cannot be","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71254,"byte_end":71313,"line_start":110,"line_end":110,"column_start":1,"column_end":60}},{"value":"/ cloned, and you wish to send it to another widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71314,"byte_end":71368,"line_start":111,"line_end":111,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71369,"byte_end":71372,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71373,"byte_end":71387,"line_start":113,"line_end":113,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71388,"byte_end":71395,"line_start":114,"line_end":114,"column_start":1,"column_end":8}},{"value":"/ use druid::{Command, Selector, SingleUse, Target};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71396,"byte_end":71450,"line_start":115,"line_end":115,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71451,"byte_end":71454,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ struct CantClone(u8);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71455,"byte_end":71480,"line_start":117,"line_end":117,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71481,"byte_end":71484,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ let selector = Selector::new(\"use-once\");","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71485,"byte_end":71530,"line_start":119,"line_end":119,"column_start":1,"column_end":46}},{"value":"/ let num = CantClone(42);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71531,"byte_end":71559,"line_start":120,"line_end":120,"column_start":1,"column_end":29}},{"value":"/ let command = Command::new(selector, SingleUse::new(num), Target::Auto);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71560,"byte_end":71636,"line_start":121,"line_end":121,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71637,"byte_end":71640,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ let payload: &SingleUse<CantClone> = command.get_unchecked(selector);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71641,"byte_end":71714,"line_start":123,"line_end":123,"column_start":1,"column_end":74}},{"value":"/ if let Some(num) = payload.take() {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71715,"byte_end":71754,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/     // now you own the data","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71755,"byte_end":71786,"line_start":125,"line_end":125,"column_start":1,"column_end":32}},{"value":"/     assert_eq!(num.0, 42);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71787,"byte_end":71817,"line_start":126,"line_end":126,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71818,"byte_end":71823,"line_start":127,"line_end":127,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71824,"byte_end":71827,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ // subsequent calls will return `None`","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71828,"byte_end":71870,"line_start":129,"line_end":129,"column_start":1,"column_end":43}},{"value":"/ assert!(payload.take().is_none());","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71871,"byte_end":71909,"line_start":130,"line_end":130,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71910,"byte_end":71917,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71918,"byte_end":71921,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ [`Command`]: struct.Command.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":71922,"byte_end":71958,"line_start":133,"line_end":133,"column_start":1,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6089},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":72408,"byte_end":72414,"line_start":147,"line_end":147,"column_start":5,"column_end":11},"name":"Global","qualname":"::command::Target::Global","value":"Target::Global","parent":{"krate":0,"index":6088},"children":[],"decl_id":null,"docs":" The target is the top-level application.","sig":null,"attributes":[{"value":"/ The target is the top-level application.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":72140,"byte_end":72184,"line_start":141,"line_end":141,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":72189,"byte_end":72192,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ The `Command` will be delivered to all open windows, and all widgets","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":72197,"byte_end":72269,"line_start":143,"line_end":143,"column_start":5,"column_end":77}},{"value":"/ in each window. Delivery will stop if the event is [`handled`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":72274,"byte_end":72341,"line_start":144,"line_end":144,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":72346,"byte_end":72349,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ [`handled`]: struct.EventCtx.html#set_handled","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":72354,"byte_end":72403,"line_start":146,"line_end":146,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6091},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":72658,"byte_end":72664,"line_start":154,"line_end":154,"column_start":5,"column_end":11},"name":"Window","qualname":"::command::Target::Window","value":"Target::Window(WindowId)","parent":{"krate":0,"index":6088},"children":[],"decl_id":null,"docs":" The target is a specific window.","sig":null,"attributes":[{"value":"/ The target is a specific window.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":72420,"byte_end":72456,"line_start":148,"line_end":148,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":72461,"byte_end":72464,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ The `Command` will be delivered to all widgets in that window.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":72469,"byte_end":72535,"line_start":150,"line_end":150,"column_start":5,"column_end":71}},{"value":"/ Delivery will stop if the event is [`handled`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":72540,"byte_end":72591,"line_start":151,"line_end":151,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":72596,"byte_end":72599,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [`handled`]: struct.EventCtx.html#set_handled","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":72604,"byte_end":72653,"line_start":153,"line_end":153,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6094},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":72721,"byte_end":72727,"line_start":156,"line_end":156,"column_start":5,"column_end":11},"name":"Widget","qualname":"::command::Target::Widget","value":"Target::Widget(WidgetId)","parent":{"krate":0,"index":6088},"children":[],"decl_id":null,"docs":" The target is a specific widget.\n","sig":null,"attributes":[{"value":"/ The target is a specific widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":72680,"byte_end":72716,"line_start":155,"line_end":155,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6097},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":72974,"byte_end":72978,"line_start":161,"line_end":161,"column_start":5,"column_end":9},"name":"Auto","qualname":"::command::Target::Auto","value":"Target::Auto","parent":{"krate":0,"index":6088},"children":[],"decl_id":null,"docs":" The target will be determined automatically.","sig":null,"attributes":[{"value":"/ The target will be determined automatically.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":72743,"byte_end":72791,"line_start":157,"line_end":157,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":72796,"byte_end":72799,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ How this behaves depends on the context used to submit the command.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":72804,"byte_end":72875,"line_start":159,"line_end":159,"column_start":5,"column_end":76}},{"value":"/ Each `submit_command` function should have documentation about the specific behavior.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":72880,"byte_end":72969,"line_start":160,"line_end":160,"column_start":5,"column_end":94}}]},{"kind":"Enum","id":{"krate":0,"index":6088},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":72127,"byte_end":72133,"line_start":140,"line_end":140,"column_start":10,"column_end":16},"name":"Target","qualname":"::command::Target","value":"pub enum Target { Global, Window(WindowId), Widget(WidgetId), Auto, }","parent":null,"children":[{"krate":0,"index":6089},{"krate":0,"index":6091},{"krate":0,"index":6094},{"krate":0,"index":6097}],"decl_id":null,"docs":" The target of a [`Command`].","sig":null,"attributes":[{"value":"/ The target of a [`Command`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":72003,"byte_end":72035,"line_start":136,"line_end":136,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":72036,"byte_end":72039,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ [`Command`]: struct.Command.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":72040,"byte_end":72076,"line_start":138,"line_end":138,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":73127,"byte_end":73130,"line_start":169,"line_end":169,"column_start":9,"column_end":12},"name":"sys","qualname":"::command::sys","value":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":572},{"krate":0,"index":575},{"krate":0,"index":578},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609}],"decl_id":null,"docs":" Commands with special meaning, defined by druid.","sig":null,"attributes":[{"value":"/ Commands with special meaning, defined by druid.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":72983,"byte_end":73035,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":73036,"byte_end":73039,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ See [`Command`] for more info.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":73040,"byte_end":73074,"line_start":166,"line_end":166,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":73075,"byte_end":73078,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`Command`]: ../struct.Command.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":73079,"byte_end":73118,"line_start":168,"line_end":168,"column_start":1,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":73352,"byte_end":73360,"line_start":176,"line_end":176,"column_start":15,"column_end":23},"name":"QUIT_APP","qualname":"::command::sys::QUIT_APP","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Quit the running application. This command is handled by the druid library.\n","sig":null,"attributes":[{"value":"/ Quit the running application. This command is handled by the druid library.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":73258,"byte_end":73337,"line_start":175,"line_end":175,"column_start":5,"column_end":84}}]},{"kind":"Const","id":{"krate":0,"index":582},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":73471,"byte_end":73487,"line_start":179,"line_end":179,"column_start":15,"column_end":31},"name":"HIDE_APPLICATION","qualname":"::command::sys::HIDE_APPLICATION","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Hide the application. (mac only?)\n","sig":null,"attributes":[{"value":"/ Hide the application. (mac only?)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":73419,"byte_end":73456,"line_start":178,"line_end":178,"column_start":5,"column_end":42}}]},{"kind":"Const","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":73618,"byte_end":73629,"line_start":182,"line_end":182,"column_start":15,"column_end":26},"name":"HIDE_OTHERS","qualname":"::command::sys::HIDE_OTHERS","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Hide all other applications. (mac only?)\n","sig":null,"attributes":[{"value":"/ Hide all other applications. (mac only?)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":73559,"byte_end":73603,"line_start":181,"line_end":181,"column_start":5,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":74154,"byte_end":74166,"line_start":193,"line_end":193,"column_start":15,"column_end":27},"name":"CLOSE_WINDOW","qualname":"::command::sys::CLOSE_WINDOW","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" The selector for a command to close a window.","sig":null,"attributes":[{"value":"/ The selector for a command to close a window.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":73876,"byte_end":73925,"line_start":188,"line_end":188,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":73930,"byte_end":73933,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ The command must target a specific window.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":73938,"byte_end":73984,"line_start":190,"line_end":190,"column_start":5,"column_end":51}},{"value":"/ When calling `submit_command` on a `Widget`s context, passing `None` as target","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":73989,"byte_end":74071,"line_start":191,"line_end":191,"column_start":5,"column_end":87}},{"value":"/ will automatically target the window containing the widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":74076,"byte_end":74139,"line_start":192,"line_end":192,"column_start":5,"column_end":68}}]},{"kind":"Const","id":{"krate":0,"index":586},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":74266,"byte_end":74283,"line_start":196,"line_end":196,"column_start":15,"column_end":32},"name":"CLOSE_ALL_WINDOWS","qualname":"::command::sys::CLOSE_ALL_WINDOWS","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Close all windows.\n","sig":null,"attributes":[{"value":"/ Close all windows.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":74229,"byte_end":74251,"line_start":195,"line_end":195,"column_start":5,"column_end":27}}]},{"kind":"Const","id":{"krate":0,"index":587},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":74661,"byte_end":74672,"line_start":203,"line_end":203,"column_start":15,"column_end":26},"name":"SHOW_WINDOW","qualname":"::command::sys::SHOW_WINDOW","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" The selector for a command to bring a window to the front, and give it focus.","sig":null,"attributes":[{"value":"/ The selector for a command to bring a window to the front, and give it focus.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":74351,"byte_end":74432,"line_start":198,"line_end":198,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":74437,"byte_end":74440,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The command must target a specific window.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":74445,"byte_end":74491,"line_start":200,"line_end":200,"column_start":5,"column_end":51}},{"value":"/ When calling `submit_command` on a `Widget`s context, passing `None` as target","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":74496,"byte_end":74578,"line_start":201,"line_end":201,"column_start":5,"column_end":87}},{"value":"/ will automatically target the window containing the widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":74583,"byte_end":74646,"line_start":202,"line_end":202,"column_start":5,"column_end":68}}]},{"kind":"Const","id":{"krate":0,"index":588},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":74840,"byte_end":74856,"line_start":206,"line_end":206,"column_start":15,"column_end":31},"name":"CONFIGURE_WINDOW","qualname":"::command::sys::CONFIGURE_WINDOW","value":"Selector<WindowConfig>","parent":null,"children":[],"decl_id":null,"docs":" Apply the configuration payload to an existing window. The target should be a WindowId.\n","sig":null,"attributes":[{"value":"/ Apply the configuration payload to an existing window. The target should be a WindowId.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":74734,"byte_end":74825,"line_start":205,"line_end":205,"column_start":5,"column_end":96}}]},{"kind":"Const","id":{"krate":0,"index":591},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":75565,"byte_end":75581,"line_start":223,"line_end":223,"column_start":15,"column_end":31},"name":"SHOW_PREFERENCES","qualname":"::command::sys::SHOW_PREFERENCES","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Show the application preferences.\n","sig":null,"attributes":[{"value":"/ Show the application preferences.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":75513,"byte_end":75550,"line_start":222,"line_end":222,"column_start":5,"column_end":42}}]},{"kind":"Const","id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":75706,"byte_end":75716,"line_start":226,"line_end":226,"column_start":15,"column_end":25},"name":"SHOW_ABOUT","qualname":"::command::sys::SHOW_ABOUT","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Show the application about window.\n","sig":null,"attributes":[{"value":"/ Show the application about window.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":75653,"byte_end":75691,"line_start":225,"line_end":225,"column_start":5,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":593},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":75823,"byte_end":75831,"line_start":229,"line_end":229,"column_start":15,"column_end":23},"name":"SHOW_ALL","qualname":"::command::sys::SHOW_ALL","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Show all applications.\n","sig":null,"attributes":[{"value":"/ Show all applications.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":75782,"byte_end":75808,"line_start":228,"line_end":228,"column_start":5,"column_end":31}}]},{"kind":"Const","id":{"krate":0,"index":594},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":75939,"byte_end":75947,"line_start":232,"line_end":232,"column_start":15,"column_end":23},"name":"NEW_FILE","qualname":"::command::sys::NEW_FILE","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Show the new file dialog.\n","sig":null,"attributes":[{"value":"/ Show the new file dialog.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":75895,"byte_end":75924,"line_start":231,"line_end":231,"column_start":5,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":76238,"byte_end":76253,"line_start":238,"line_end":238,"column_start":15,"column_end":30},"name":"SHOW_OPEN_PANEL","qualname":"::command::sys::SHOW_OPEN_PANEL","value":"Selector<FileDialogOptions>","parent":null,"children":[],"decl_id":null,"docs":" When submitted by the application, a file picker dialog will be shown to the user,\n and an [`OPEN_FILE`] command will be sent if a path is chosen.","sig":null,"attributes":[{"value":"/ When submitted by the application, a file picker dialog will be shown to the user,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":76011,"byte_end":76097,"line_start":234,"line_end":234,"column_start":5,"column_end":91}},{"value":"/ and an [`OPEN_FILE`] command will be sent if a path is chosen.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":76102,"byte_end":76168,"line_start":235,"line_end":235,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":76173,"byte_end":76176,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ [`OPEN_FILE`]: constant.OPEN_FILE.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":76181,"byte_end":76223,"line_start":237,"line_end":237,"column_start":5,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":76410,"byte_end":76430,"line_start":242,"line_end":242,"column_start":15,"column_end":35},"name":"OPEN_PANEL_CANCELLED","qualname":"::command::sys::OPEN_PANEL_CANCELLED","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Sent when the user cancels an open file panel.\n","sig":null,"attributes":[{"value":"/ Sent when the user cancels an open file panel.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":76345,"byte_end":76395,"line_start":241,"line_end":241,"column_start":5,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":76622,"byte_end":76631,"line_start":247,"line_end":247,"column_start":15,"column_end":24},"name":"OPEN_FILE","qualname":"::command::sys::OPEN_FILE","value":"Selector<FileInfo>","parent":null,"children":[],"decl_id":null,"docs":" Open a path, must be handled by the application.","sig":null,"attributes":[{"value":"/ Open a path, must be handled by the application.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":76501,"byte_end":76553,"line_start":244,"line_end":244,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":76558,"byte_end":76561,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ [`FileInfo`]: ../struct.FileInfo.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":76566,"byte_end":76607,"line_start":246,"line_end":246,"column_start":5,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":76983,"byte_end":76998,"line_start":254,"line_end":254,"column_start":15,"column_end":30},"name":"SHOW_SAVE_PANEL","qualname":"::command::sys::SHOW_SAVE_PANEL","value":"Selector<FileDialogOptions>","parent":null,"children":[],"decl_id":null,"docs":" When submitted by the application, the system will show the 'save as' panel,\n and if a path is selected the system will issue a [`SAVE_FILE`] command\n with the selected path as the payload.","sig":null,"attributes":[{"value":"/ When submitted by the application, the system will show the 'save as' panel,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":76706,"byte_end":76786,"line_start":249,"line_end":249,"column_start":5,"column_end":85}},{"value":"/ and if a path is selected the system will issue a [`SAVE_FILE`] command","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":76791,"byte_end":76866,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ with the selected path as the payload.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":76871,"byte_end":76913,"line_start":251,"line_end":251,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":76918,"byte_end":76921,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ [`SAVE_FILE`]: constant.SAVE_FILE.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":76926,"byte_end":76968,"line_start":253,"line_end":253,"column_start":5,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":599},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":77157,"byte_end":77177,"line_start":258,"line_end":258,"column_start":15,"column_end":35},"name":"SAVE_PANEL_CANCELLED","qualname":"::command::sys::SAVE_PANEL_CANCELLED","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Sent when the user cancels a save file panel.\n","sig":null,"attributes":[{"value":"/ Sent when the user cancels a save file panel.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":77093,"byte_end":77142,"line_start":257,"line_end":257,"column_start":5,"column_end":54}}]},{"kind":"Const","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":77515,"byte_end":77524,"line_start":265,"line_end":265,"column_start":15,"column_end":24},"name":"SAVE_FILE","qualname":"::command::sys::SAVE_FILE","value":"Selector<()>","parent":null,"children":[],"decl_id":null,"docs":" Save the current path.","sig":null,"attributes":[{"value":"/ Save the current path.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":77248,"byte_end":77274,"line_start":260,"line_end":260,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":77279,"byte_end":77282,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The application should save its data, to a path that should be determined by the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":77287,"byte_end":77371,"line_start":262,"line_end":262,"column_start":5,"column_end":89}},{"value":"/ application. Usually, this will be the most recent path provided by a [`SAVE_FILE_AS`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":77376,"byte_end":77466,"line_start":263,"line_end":263,"column_start":5,"column_end":95}},{"value":"/ or [`OPEN_FILE`] command.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":77471,"byte_end":77500,"line_start":264,"line_end":264,"column_start":5,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":78008,"byte_end":78020,"line_start":275,"line_end":275,"column_start":15,"column_end":27},"name":"SAVE_FILE_AS","qualname":"::command::sys::SAVE_FILE_AS","value":"Selector<FileInfo>","parent":null,"children":[],"decl_id":null,"docs":" Save to a given location.","sig":null,"attributes":[{"value":"/ Save to a given location.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":77588,"byte_end":77617,"line_start":267,"line_end":267,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":77622,"byte_end":77625,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ This command is emitted by druid whenever a save file dialog successfully completes. The","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":77630,"byte_end":77722,"line_start":269,"line_end":269,"column_start":5,"column_end":97}},{"value":"/ application should save its data to the path proved, and should store the path in order to","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":77727,"byte_end":77821,"line_start":270,"line_end":270,"column_start":5,"column_end":99}},{"value":"/ handle [`SAVE_FILE`] commands in the future.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":77826,"byte_end":77874,"line_start":271,"line_end":271,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":77879,"byte_end":77882,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ The path might be a file or a directory, so always check whether it matches your","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":77887,"byte_end":77971,"line_start":273,"line_end":273,"column_start":5,"column_end":89}},{"value":"/ expectations.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":77976,"byte_end":77993,"line_start":274,"line_end":274,"column_start":5,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":78140,"byte_end":78151,"line_start":278,"line_end":278,"column_start":15,"column_end":26},"name":"PRINT_SETUP","qualname":"::command::sys::PRINT_SETUP","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Show the print-setup window.\n","sig":null,"attributes":[{"value":"/ Show the print-setup window.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":78093,"byte_end":78125,"line_start":277,"line_end":277,"column_start":5,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":78264,"byte_end":78269,"line_start":281,"line_end":281,"column_start":15,"column_end":20},"name":"PRINT","qualname":"::command::sys::PRINT","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Show the print dialog.\n","sig":null,"attributes":[{"value":"/ Show the print dialog.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":78223,"byte_end":78249,"line_start":280,"line_end":280,"column_start":5,"column_end":31}}]},{"kind":"Const","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":78377,"byte_end":78390,"line_start":284,"line_end":284,"column_start":15,"column_end":28},"name":"PRINT_PREVIEW","qualname":"::command::sys::PRINT_PREVIEW","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Show the print preview.\n","sig":null,"attributes":[{"value":"/ Show the print preview.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":78335,"byte_end":78362,"line_start":283,"line_end":283,"column_start":5,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":78501,"byte_end":78504,"line_start":287,"line_end":287,"column_start":15,"column_end":18},"name":"CUT","qualname":"::command::sys::CUT","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Cut the current selection.\n","sig":null,"attributes":[{"value":"/ Cut the current selection.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":78456,"byte_end":78486,"line_start":286,"line_end":286,"column_start":5,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":78609,"byte_end":78613,"line_start":290,"line_end":290,"column_start":15,"column_end":19},"name":"COPY","qualname":"::command::sys::COPY","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Copy the current selection.\n","sig":null,"attributes":[{"value":"/ Copy the current selection.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":78563,"byte_end":78594,"line_start":289,"line_end":289,"column_start":5,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":607},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":78698,"byte_end":78703,"line_start":293,"line_end":293,"column_start":15,"column_end":20},"name":"PASTE","qualname":"::command::sys::PASTE","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Paste.\n","sig":null,"attributes":[{"value":"/ Paste.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":78673,"byte_end":78683,"line_start":292,"line_end":292,"column_start":5,"column_end":15}}]},{"kind":"Const","id":{"krate":0,"index":608},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":78788,"byte_end":78792,"line_start":296,"line_end":296,"column_start":15,"column_end":19},"name":"UNDO","qualname":"::command::sys::UNDO","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Undo.\n","sig":null,"attributes":[{"value":"/ Undo.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":78764,"byte_end":78773,"line_start":295,"line_end":295,"column_start":5,"column_end":14}}]},{"kind":"Const","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":78876,"byte_end":78880,"line_start":299,"line_end":299,"column_start":15,"column_end":19},"name":"REDO","qualname":"::command::sys::REDO","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Redo.\n","sig":null,"attributes":[{"value":"/ Redo.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":78852,"byte_end":78861,"line_start":298,"line_end":298,"column_start":5,"column_end":14}}]},{"kind":"Const","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":79010,"byte_end":79014,"line_start":304,"line_end":304,"column_start":15,"column_end":19},"name":"NOOP","qualname":"::command::Selector::NOOP","value":"Selector","parent":{"krate":0,"index":610},"children":[],"decl_id":null,"docs":" A selector that does nothing.\n","sig":null,"attributes":[{"value":"/ A selector that does nothing.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":78962,"byte_end":78995,"line_start":303,"line_end":303,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":79168,"byte_end":79170,"line_start":309,"line_end":309,"column_start":12,"column_end":14},"name":"to","qualname":"<Selector<()>>::to","value":"pub fn to<impl Into<Target>: Into<Target>>(Self, impl Into<Target>) -> Command","parent":null,"children":[],"decl_id":null,"docs":" Turns this into a command with the specified [`Target`].","sig":null,"attributes":[{"value":"/ Turns this into a command with the specified [`Target`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":79051,"byte_end":79111,"line_start":306,"line_end":306,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":79116,"byte_end":79119,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ [`Target`]: enum.Target.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":79124,"byte_end":79156,"line_start":308,"line_end":308,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":79366,"byte_end":79369,"line_start":316,"line_end":316,"column_start":18,"column_end":21},"name":"new","qualname":"<Selector<T>>::new","value":"pub const fn new(&'static str) -> Selector<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Selector` with the given string.\n","sig":null,"attributes":[{"value":"/ Create a new `Selector` with the given string.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":79298,"byte_end":79348,"line_start":315,"line_end":315,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":80130,"byte_end":80134,"line_start":338,"line_end":338,"column_start":12,"column_end":16},"name":"with","qualname":"<Selector<T>>::with","value":"pub fn with(Self, T) -> Command","parent":null,"children":[],"decl_id":null,"docs":" Convenience method for [`Command::new`] with this selector.","sig":null,"attributes":[{"value":"/ Convenience method for [`Command::new`] with this selector.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":79622,"byte_end":79685,"line_start":327,"line_end":327,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":79690,"byte_end":79693,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ If the payload is `()` there is no need to call this,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":79698,"byte_end":79755,"line_start":329,"line_end":329,"column_start":5,"column_end":62}},{"value":"/ as `Selector<()>` implements `Into<Command>`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":79760,"byte_end":79809,"line_start":330,"line_end":330,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":79814,"byte_end":79817,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ By default, the command will have [`Target::Auto`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":79822,"byte_end":79877,"line_start":332,"line_end":332,"column_start":5,"column_end":60}},{"value":"/ The [`Command::to`] method can be used to override this.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":79882,"byte_end":79942,"line_start":333,"line_end":333,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":79947,"byte_end":79950,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ [`Command::new`]: struct.Command.html#method.new","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":79955,"byte_end":80007,"line_start":335,"line_end":335,"column_start":5,"column_end":57}},{"value":"/ [`Command::to`]: struct.Command.html#method.to","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":80012,"byte_end":80062,"line_start":336,"line_end":336,"column_start":5,"column_end":55}},{"value":"/ [`Target::Auto`]: enum.Target.html#variant.Auto","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":80067,"byte_end":80118,"line_start":337,"line_end":337,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":80638,"byte_end":80641,"line_start":353,"line_end":353,"column_start":12,"column_end":15},"name":"new","qualname":"<Command>::new","value":"pub fn new<T: Any,\nimpl Into<Target>: Into<Target>>(Selector<T>, T, impl Into<Target>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Command` with a payload and a [`Target`].","sig":null,"attributes":[{"value":"/ Create a new `Command` with a payload and a [`Target`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":80244,"byte_end":80303,"line_start":344,"line_end":344,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":80308,"byte_end":80311,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ [`Selector::with`] can be used to create `Command`s more conveniently.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":80316,"byte_end":80390,"line_start":346,"line_end":346,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":80395,"byte_end":80398,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ If you do not need a payload, [`Selector`] implements `Into<Command>`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":80403,"byte_end":80477,"line_start":348,"line_end":348,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":80482,"byte_end":80485,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ [`Selector`]: struct.Selector.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":80490,"byte_end":80528,"line_start":350,"line_end":350,"column_start":5,"column_end":43}},{"value":"/ [`Selector::with`]: struct.Selector.html#method.with","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":80533,"byte_end":80589,"line_start":351,"line_end":351,"column_start":5,"column_end":61}},{"value":"/ [`Target`]: enum.Target.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":80594,"byte_end":80626,"line_start":352,"line_end":352,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":81875,"byte_end":81877,"line_start":390,"line_end":390,"column_start":12,"column_end":14},"name":"to","qualname":"<Command>::to","value":"pub fn to<impl Into<Target>: Into<Target>>(Self, impl Into<Target>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the `Command`'s [`Target`].","sig":null,"attributes":[{"value":"/ Set the `Command`'s [`Target`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":81660,"byte_end":81695,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":81700,"byte_end":81703,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ [`Command::target`] can be used to get the current [`Target`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":81708,"byte_end":81774,"line_start":386,"line_end":386,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":81779,"byte_end":81782,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ [`Command::target`]: #method.target","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":81787,"byte_end":81826,"line_start":388,"line_end":388,"column_start":5,"column_end":44}},{"value":"/ [`Target`]: enum.Target.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":81831,"byte_end":81863,"line_start":389,"line_end":389,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":82372,"byte_end":82378,"line_start":407,"line_end":407,"column_start":12,"column_end":18},"name":"target","qualname":"<Command>::target","value":"pub fn target(&Self) -> Target","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Command`'s [`Target`].","sig":null,"attributes":[{"value":"/ Returns the `Command`'s [`Target`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":82170,"byte_end":82209,"line_start":401,"line_end":401,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":82214,"byte_end":82217,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ [`Command::to`] can be used to change the [`Target`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":82222,"byte_end":82279,"line_start":403,"line_end":403,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":82284,"byte_end":82287,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ [`Command::to`]: #method.to","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":82292,"byte_end":82323,"line_start":405,"line_end":405,"column_start":5,"column_end":36}},{"value":"/ [`Target`]: enum.Target.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":82328,"byte_end":82360,"line_start":406,"line_end":406,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":82494,"byte_end":82496,"line_start":412,"line_end":412,"column_start":12,"column_end":14},"name":"is","qualname":"<Command>::is","value":"pub fn is<T>(&Self, Selector<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` matches this `selector`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` matches this `selector`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":82429,"byte_end":82482,"line_start":411,"line_end":411,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":83152,"byte_end":83155,"line_start":429,"line_end":429,"column_start":12,"column_end":15},"name":"get","qualname":"<Command>::get","value":"pub fn get<T: Any>(&Self, Selector<T>) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(&T)` (this `Command`'s payload) if the selector matches.","sig":null,"attributes":[{"value":"/ Returns `Some(&T)` (this `Command`'s payload) if the selector matches.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":82592,"byte_end":82666,"line_start":416,"line_end":416,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":82671,"byte_end":82674,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when `self.is(selector) == false`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":82679,"byte_end":82732,"line_start":418,"line_end":418,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":82737,"byte_end":82740,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ Alternatively you can check the selector with [`is`] and then use [`get_unchecked`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":82745,"byte_end":82833,"line_start":420,"line_end":420,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":82838,"byte_end":82841,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":82846,"byte_end":82858,"line_start":422,"line_end":422,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":82863,"byte_end":82866,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Panics when the payload has a different type, than what the selector is supposed to carry.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":82871,"byte_end":82965,"line_start":424,"line_end":424,"column_start":5,"column_end":99}},{"value":"/ This can happen when two selectors with different types but the same key are used.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":82970,"byte_end":83056,"line_start":425,"line_end":425,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":83061,"byte_end":83064,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ [`is`]: #method.is","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":83069,"byte_end":83091,"line_start":427,"line_end":427,"column_start":5,"column_end":27}},{"value":"/ [`get_unchecked`]: #method.get_unchecked","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":83096,"byte_end":83140,"line_start":428,"line_end":428,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":84166,"byte_end":84179,"line_start":456,"line_end":456,"column_start":12,"column_end":25},"name":"get_unchecked","qualname":"<Command>::get_unchecked","value":"pub fn get_unchecked<T: Any>(&Self, Selector<T>) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this `Command`'s payload.","sig":null,"attributes":[{"value":"/ Returns a reference to this `Command`'s payload.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":83596,"byte_end":83648,"line_start":442,"line_end":442,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":83653,"byte_end":83656,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ If the selector has already been checked with [`is`], then `get_unchecked` can be used safely.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":83661,"byte_end":83759,"line_start":444,"line_end":444,"column_start":5,"column_end":103}},{"value":"/ Otherwise you should use [`get`] instead.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":83764,"byte_end":83809,"line_start":445,"line_end":445,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":83814,"byte_end":83817,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":83822,"byte_end":83834,"line_start":447,"line_end":447,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":83839,"byte_end":83842,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ Panics when `self.is(selector) == false`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":83847,"byte_end":83892,"line_start":449,"line_end":449,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":83897,"byte_end":83900,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ Panics when the payload has a different type, than what the selector is supposed to carry.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":83905,"byte_end":83999,"line_start":451,"line_end":451,"column_start":5,"column_end":99}},{"value":"/ This can happen when two selectors with different types but the same key are used.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":84004,"byte_end":84090,"line_start":452,"line_end":452,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":84095,"byte_end":84098,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ [`is`]: #method.is","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":84103,"byte_end":84125,"line_start":454,"line_end":454,"column_start":5,"column_end":27}},{"value":"/ [`get`]: #method.get","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":84130,"byte_end":84154,"line_start":455,"line_end":455,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":84553,"byte_end":84555,"line_start":469,"line_end":469,"column_start":12,"column_end":14},"name":"is","qualname":"<Notification>::is","value":"pub fn is<T>(&Self, Selector<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` matches this [`Selector`].\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` matches this [`Selector`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":84486,"byte_end":84541,"line_start":468,"line_end":468,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":85000,"byte_end":85003,"line_start":482,"line_end":482,"column_start":12,"column_end":15},"name":"get","qualname":"<Notification>::get","value":"pub fn get<T: Any>(&Self, Selector<T>) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the payload for this [`Selector`], if the selector matches.","sig":null,"attributes":[{"value":"/ Returns the payload for this [`Selector`], if the selector matches.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":84651,"byte_end":84722,"line_start":473,"line_end":473,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":84727,"byte_end":84730,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":84735,"byte_end":84747,"line_start":475,"line_end":475,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":84752,"byte_end":84755,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ Panics when the payload has a different type, than what the selector","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":84760,"byte_end":84832,"line_start":477,"line_end":477,"column_start":5,"column_end":77}},{"value":"/ is supposed to carry. This can happen when two selectors with different","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":84837,"byte_end":84912,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/ types but the same key are used.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":84917,"byte_end":84953,"line_start":479,"line_end":479,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":84958,"byte_end":84961,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ [`is`]: #method.is","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":84966,"byte_end":84988,"line_start":481,"line_end":481,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":85591,"byte_end":85597,"line_start":499,"line_end":499,"column_start":12,"column_end":18},"name":"source","qualname":"<Notification>::source","value":"pub fn source(&Self) -> WidgetId","parent":null,"children":[],"decl_id":null,"docs":" The [`WidgetId`] of the [`Widget`] that sent this [`Notification`].","sig":null,"attributes":[{"value":"/ The [`WidgetId`] of the [`Widget`] that sent this [`Notification`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":85466,"byte_end":85537,"line_start":496,"line_end":496,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":85542,"byte_end":85545,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ [`Widget`]: crate::Widget","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":85550,"byte_end":85579,"line_start":498,"line_end":498,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":85728,"byte_end":85731,"line_start":506,"line_end":506,"column_start":12,"column_end":15},"name":"new","qualname":"<SingleUse<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new single-use payload.\n","sig":null,"attributes":[{"value":"/ Create a new single-use payload.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":85680,"byte_end":85716,"line_start":505,"line_end":505,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":85865,"byte_end":85869,"line_start":511,"line_end":511,"column_start":12,"column_end":16},"name":"take","qualname":"<SingleUse<T>>::take","value":"pub fn take(&Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes the value, leaving a None in its place.\n","sig":null,"attributes":[{"value":"/ Takes the value, leaving a None in its place.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":85804,"byte_end":85853,"line_start":510,"line_end":510,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":794},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":90348,"byte_end":90356,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"EventCtx","qualname":"::contexts::EventCtx","value":"EventCtx {  }","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801}],"decl_id":null,"docs":" A mutable context provided to event handling methods of widgets.","sig":null,"attributes":[{"value":"/ A mutable context provided to event handling methods of widgets.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":90084,"byte_end":90152,"line_start":60,"line_end":60,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":90153,"byte_end":90156,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ Widgets should call [`request_paint`] whenever an event causes a change","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":90157,"byte_end":90232,"line_start":62,"line_end":62,"column_start":1,"column_end":76}},{"value":"/ in the widget's appearance, to schedule a repaint.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":90233,"byte_end":90287,"line_start":63,"line_end":63,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":90288,"byte_end":90291,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [`request_paint`]: #method.request_paint","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":90292,"byte_end":90336,"line_start":65,"line_end":65,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":802},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":91069,"byte_end":91081,"line_start":83,"line_end":83,"column_start":12,"column_end":24},"name":"LifeCycleCtx","qualname":"::contexts::LifeCycleCtx","value":"LifeCycleCtx {  }","parent":null,"children":[{"krate":0,"index":805},{"krate":0,"index":806}],"decl_id":null,"docs":" A mutable context provided to the [`lifecycle`] method on widgets.","sig":null,"attributes":[{"value":"/ A mutable context provided to the [`lifecycle`] method on widgets.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":90593,"byte_end":90663,"line_start":74,"line_end":74,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":90664,"byte_end":90667,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ Certain methods on this context are only meaningful during the handling of","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":90668,"byte_end":90746,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"/ specific lifecycle events; for instance [`register_child`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":90747,"byte_end":90809,"line_start":77,"line_end":77,"column_start":1,"column_end":63}},{"value":"/ should only be called while handling [`LifeCycle::WidgetAdded`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":90810,"byte_end":90878,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":90879,"byte_end":90882,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ [`lifecycle`]: trait.Widget.html#tymethod.lifecycle","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":90883,"byte_end":90938,"line_start":80,"line_end":80,"column_start":1,"column_end":56}},{"value":"/ [`register_child`]: #method.register_child","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":90939,"byte_end":90985,"line_start":81,"line_end":81,"column_start":1,"column_end":47}},{"value":"/ [`LifeCycle::WidgetAdded`]: enum.LifeCycle.html#variant.WidgetAdded","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":90986,"byte_end":91057,"line_start":82,"line_end":82,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":91459,"byte_end":91468,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"UpdateCtx","qualname":"::contexts::UpdateCtx","value":"UpdateCtx {  }","parent":null,"children":[{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813}],"decl_id":null,"docs":" A mutable context provided to data update methods of widgets.","sig":null,"attributes":[{"value":"/ A mutable context provided to data update methods of widgets.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":91193,"byte_end":91258,"line_start":88,"line_end":88,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":91259,"byte_end":91262,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Widgets should call [`request_paint`] whenever a data change causes a change","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":91263,"byte_end":91343,"line_start":90,"line_end":90,"column_start":1,"column_end":81}},{"value":"/ in the widget's appearance, to schedule a repaint.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":91344,"byte_end":91398,"line_start":91,"line_end":91,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":91399,"byte_end":91402,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ [`request_paint`]: #method.request_paint","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":91403,"byte_end":91447,"line_start":93,"line_end":93,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":91886,"byte_end":91895,"line_start":106,"line_end":106,"column_start":12,"column_end":21},"name":"LayoutCtx","qualname":"::contexts::LayoutCtx","value":"LayoutCtx {  }","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819}],"decl_id":null,"docs":" A context provided to layout handling methods of widgets.","sig":null,"attributes":[{"value":"/ A context provided to layout handling methods of widgets.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":91651,"byte_end":91712,"line_start":101,"line_end":101,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":91713,"byte_end":91716,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ As of now, the main service provided is access to a factory for","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":91717,"byte_end":91784,"line_start":103,"line_end":103,"column_start":1,"column_end":68}},{"value":"/ creating text layout objects, which are likely to be useful","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":91785,"byte_end":91848,"line_start":104,"line_end":104,"column_start":1,"column_end":64}},{"value":"/ during widget layout.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":91849,"byte_end":91874,"line_start":105,"line_end":105,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":824},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":92600,"byte_end":92608,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"PaintCtx","qualname":"::contexts::PaintCtx","value":"PaintCtx { render_ctx }","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833}],"decl_id":null,"docs":" A context passed to paint methods of widgets.","sig":null,"attributes":[{"value":"/ A context passed to paint methods of widgets.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":92247,"byte_end":92296,"line_start":119,"line_end":119,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":92297,"byte_end":92300,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ Widgets paint their appearance by calling methods on the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":92301,"byte_end":92361,"line_start":121,"line_end":121,"column_start":1,"column_end":61}},{"value":"/ `render_ctx`, which PaintCtx derefs to for convenience.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":92362,"byte_end":92421,"line_start":122,"line_end":122,"column_start":1,"column_end":60}},{"value":"/ This struct is expected to grow, for example to include the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":92422,"byte_end":92485,"line_start":123,"line_end":123,"column_start":1,"column_end":64}},{"value":"/ \"damage region\" indicating that only a subset of the entire","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":92486,"byte_end":92549,"line_start":124,"line_end":124,"column_start":1,"column_end":64}},{"value":"/ widget hierarchy needs repainting.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":92550,"byte_end":92588,"line_start":125,"line_end":125,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":830},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":92775,"byte_end":92785,"line_start":130,"line_end":130,"column_start":9,"column_end":19},"name":"render_ctx","qualname":"::contexts::PaintCtx::render_ctx","value":"&'a mut druid_shell::piet_common::D2DRenderContext<'c>","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" The render context for actually painting.\n","sig":null,"attributes":[{"value":"/ The render context for actually painting.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":92721,"byte_end":92766,"line_start":129,"line_end":129,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":6109},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":93291,"byte_end":93300,"line_start":148,"line_end":148,"column_start":16,"column_end":25},"name":"widget_id","qualname":"<EventCtx>::widget_id","value":"pub fn widget_id(&Self) -> WidgetId","parent":null,"children":[],"decl_id":null,"docs":" get the `WidgetId` of the current widget.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6110},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":93444,"byte_end":93450,"line_start":153,"line_end":153,"column_start":16,"column_end":22},"name":"window","qualname":"<EventCtx>::window","value":"pub fn window(&Self) -> &WindowHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the current `WindowHandle`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6111},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":93588,"byte_end":93597,"line_start":158,"line_end":158,"column_start":16,"column_end":25},"name":"window_id","qualname":"<EventCtx>::window_id","value":"pub fn window_id(&Self) -> WindowId","parent":null,"children":[],"decl_id":null,"docs":" Get the `WindowId` of the current window.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6112},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":93735,"byte_end":93739,"line_start":163,"line_end":163,"column_start":16,"column_end":20},"name":"text","qualname":"<EventCtx>::text","value":"pub fn text(&mut Self) -> &mut PietText","parent":null,"children":[],"decl_id":null,"docs":" Get an object which can create text layouts.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6114},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":93291,"byte_end":93300,"line_start":148,"line_end":148,"column_start":16,"column_end":25},"name":"widget_id","qualname":"<UpdateCtx>::widget_id","value":"pub fn widget_id(&Self) -> WidgetId","parent":null,"children":[],"decl_id":null,"docs":" get the `WidgetId` of the current widget.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6115},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":93444,"byte_end":93450,"line_start":153,"line_end":153,"column_start":16,"column_end":22},"name":"window","qualname":"<UpdateCtx>::window","value":"pub fn window(&Self) -> &WindowHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the current `WindowHandle`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6116},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":93588,"byte_end":93597,"line_start":158,"line_end":158,"column_start":16,"column_end":25},"name":"window_id","qualname":"<UpdateCtx>::window_id","value":"pub fn window_id(&Self) -> WindowId","parent":null,"children":[],"decl_id":null,"docs":" Get the `WindowId` of the current window.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6117},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":93735,"byte_end":93739,"line_start":163,"line_end":163,"column_start":16,"column_end":20},"name":"text","qualname":"<UpdateCtx>::text","value":"pub fn text(&mut Self) -> &mut PietText","parent":null,"children":[],"decl_id":null,"docs":" Get an object which can create text layouts.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6119},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":93291,"byte_end":93300,"line_start":148,"line_end":148,"column_start":16,"column_end":25},"name":"widget_id","qualname":"<LifeCycleCtx>::widget_id","value":"pub fn widget_id(&Self) -> WidgetId","parent":null,"children":[],"decl_id":null,"docs":" get the `WidgetId` of the current widget.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6120},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":93444,"byte_end":93450,"line_start":153,"line_end":153,"column_start":16,"column_end":22},"name":"window","qualname":"<LifeCycleCtx>::window","value":"pub fn window(&Self) -> &WindowHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the current `WindowHandle`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6121},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":93588,"byte_end":93597,"line_start":158,"line_end":158,"column_start":16,"column_end":25},"name":"window_id","qualname":"<LifeCycleCtx>::window_id","value":"pub fn window_id(&Self) -> WindowId","parent":null,"children":[],"decl_id":null,"docs":" Get the `WindowId` of the current window.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6122},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":93735,"byte_end":93739,"line_start":163,"line_end":163,"column_start":16,"column_end":20},"name":"text","qualname":"<LifeCycleCtx>::text","value":"pub fn text(&mut Self) -> &mut PietText","parent":null,"children":[],"decl_id":null,"docs":" Get an object which can create text layouts.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6124},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":93291,"byte_end":93300,"line_start":148,"line_end":148,"column_start":16,"column_end":25},"name":"widget_id","qualname":"<PaintCtx>::widget_id","value":"pub fn widget_id(&Self) -> WidgetId","parent":null,"children":[],"decl_id":null,"docs":" get the `WidgetId` of the current widget.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6125},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":93444,"byte_end":93450,"line_start":153,"line_end":153,"column_start":16,"column_end":22},"name":"window","qualname":"<PaintCtx>::window","value":"pub fn window(&Self) -> &WindowHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the current `WindowHandle`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6126},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":93588,"byte_end":93597,"line_start":158,"line_end":158,"column_start":16,"column_end":25},"name":"window_id","qualname":"<PaintCtx>::window_id","value":"pub fn window_id(&Self) -> WindowId","parent":null,"children":[],"decl_id":null,"docs":" Get the `WindowId` of the current window.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6127},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":93735,"byte_end":93739,"line_start":163,"line_end":163,"column_start":16,"column_end":20},"name":"text","qualname":"<PaintCtx>::text","value":"pub fn text(&mut Self) -> &mut PietText","parent":null,"children":[],"decl_id":null,"docs":" Get an object which can create text layouts.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6129},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":93291,"byte_end":93300,"line_start":148,"line_end":148,"column_start":16,"column_end":25},"name":"widget_id","qualname":"<LayoutCtx>::widget_id","value":"pub fn widget_id(&Self) -> WidgetId","parent":null,"children":[],"decl_id":null,"docs":" get the `WidgetId` of the current widget.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6130},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":93444,"byte_end":93450,"line_start":153,"line_end":153,"column_start":16,"column_end":22},"name":"window","qualname":"<LayoutCtx>::window","value":"pub fn window(&Self) -> &WindowHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the current `WindowHandle`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6131},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":93588,"byte_end":93597,"line_start":158,"line_end":158,"column_start":16,"column_end":25},"name":"window_id","qualname":"<LayoutCtx>::window_id","value":"pub fn window_id(&Self) -> WindowId","parent":null,"children":[],"decl_id":null,"docs":" Get the `WindowId` of the current window.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6132},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":93735,"byte_end":93739,"line_start":163,"line_end":163,"column_start":16,"column_end":20},"name":"text","qualname":"<LayoutCtx>::text","value":"pub fn text(&mut Self) -> &mut PietText","parent":null,"children":[],"decl_id":null,"docs":" Get an object which can create text layouts.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6134},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":94366,"byte_end":94370,"line_start":185,"line_end":185,"column_start":16,"column_end":20},"name":"size","qualname":"<EventCtx>::size","value":"pub fn size(&Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" The layout size.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6135},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":95234,"byte_end":95240,"line_start":203,"line_end":203,"column_start":16,"column_end":22},"name":"is_hot","qualname":"<EventCtx>::is_hot","value":"pub fn is_hot(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The \"hot\" (aka hover) status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6136},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":95764,"byte_end":95773,"line_start":217,"line_end":217,"column_start":16,"column_end":25},"name":"is_active","qualname":"<EventCtx>::is_active","value":"pub fn is_active(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The active status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6137},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":96886,"byte_end":96896,"line_start":240,"line_end":240,"column_start":16,"column_end":26},"name":"is_focused","qualname":"<EventCtx>::is_focused","value":"pub fn is_focused(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The focus status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6138},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":97303,"byte_end":97312,"line_start":250,"line_end":250,"column_start":16,"column_end":25},"name":"has_focus","qualname":"<EventCtx>::has_focus","value":"pub fn has_focus(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The (tree) focus status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6140},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":94366,"byte_end":94370,"line_start":185,"line_end":185,"column_start":16,"column_end":20},"name":"size","qualname":"<UpdateCtx>::size","value":"pub fn size(&Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" The layout size.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6141},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":95234,"byte_end":95240,"line_start":203,"line_end":203,"column_start":16,"column_end":22},"name":"is_hot","qualname":"<UpdateCtx>::is_hot","value":"pub fn is_hot(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The \"hot\" (aka hover) status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6142},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":95764,"byte_end":95773,"line_start":217,"line_end":217,"column_start":16,"column_end":25},"name":"is_active","qualname":"<UpdateCtx>::is_active","value":"pub fn is_active(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The active status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6143},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":96886,"byte_end":96896,"line_start":240,"line_end":240,"column_start":16,"column_end":26},"name":"is_focused","qualname":"<UpdateCtx>::is_focused","value":"pub fn is_focused(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The focus status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6144},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":97303,"byte_end":97312,"line_start":250,"line_end":250,"column_start":16,"column_end":25},"name":"has_focus","qualname":"<UpdateCtx>::has_focus","value":"pub fn has_focus(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The (tree) focus status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6146},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":94366,"byte_end":94370,"line_start":185,"line_end":185,"column_start":16,"column_end":20},"name":"size","qualname":"<LifeCycleCtx>::size","value":"pub fn size(&Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" The layout size.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6147},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":95234,"byte_end":95240,"line_start":203,"line_end":203,"column_start":16,"column_end":22},"name":"is_hot","qualname":"<LifeCycleCtx>::is_hot","value":"pub fn is_hot(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The \"hot\" (aka hover) status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6148},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":95764,"byte_end":95773,"line_start":217,"line_end":217,"column_start":16,"column_end":25},"name":"is_active","qualname":"<LifeCycleCtx>::is_active","value":"pub fn is_active(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The active status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6149},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":96886,"byte_end":96896,"line_start":240,"line_end":240,"column_start":16,"column_end":26},"name":"is_focused","qualname":"<LifeCycleCtx>::is_focused","value":"pub fn is_focused(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The focus status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6150},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":97303,"byte_end":97312,"line_start":250,"line_end":250,"column_start":16,"column_end":25},"name":"has_focus","qualname":"<LifeCycleCtx>::has_focus","value":"pub fn has_focus(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The (tree) focus status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6152},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":94366,"byte_end":94370,"line_start":185,"line_end":185,"column_start":16,"column_end":20},"name":"size","qualname":"<PaintCtx>::size","value":"pub fn size(&Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" The layout size.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6153},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":95234,"byte_end":95240,"line_start":203,"line_end":203,"column_start":16,"column_end":22},"name":"is_hot","qualname":"<PaintCtx>::is_hot","value":"pub fn is_hot(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The \"hot\" (aka hover) status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6154},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":95764,"byte_end":95773,"line_start":217,"line_end":217,"column_start":16,"column_end":25},"name":"is_active","qualname":"<PaintCtx>::is_active","value":"pub fn is_active(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The active status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6155},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":96886,"byte_end":96896,"line_start":240,"line_end":240,"column_start":16,"column_end":26},"name":"is_focused","qualname":"<PaintCtx>::is_focused","value":"pub fn is_focused(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The focus status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6156},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":97303,"byte_end":97312,"line_start":250,"line_end":250,"column_start":16,"column_end":25},"name":"has_focus","qualname":"<PaintCtx>::has_focus","value":"pub fn has_focus(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The (tree) focus status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6158},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":98009,"byte_end":98019,"line_start":268,"line_end":268,"column_start":12,"column_end":22},"name":"set_cursor","qualname":"<EventCtx>::set_cursor","value":"pub fn set_cursor(&mut Self, &Cursor)","parent":null,"children":[],"decl_id":null,"docs":" Set the cursor icon.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6159},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":98655,"byte_end":98670,"line_start":282,"line_end":282,"column_start":12,"column_end":27},"name":"override_cursor","qualname":"<EventCtx>::override_cursor","value":"pub fn override_cursor(&mut Self, &Cursor)","parent":null,"children":[],"decl_id":null,"docs":" Override the cursor icon.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6160},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":99022,"byte_end":99034,"line_start":292,"line_end":292,"column_start":12,"column_end":24},"name":"clear_cursor","qualname":"<EventCtx>::clear_cursor","value":"pub fn clear_cursor(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear the cursor icon.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6162},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":98009,"byte_end":98019,"line_start":268,"line_end":268,"column_start":12,"column_end":22},"name":"set_cursor","qualname":"<UpdateCtx>::set_cursor","value":"pub fn set_cursor(&mut Self, &Cursor)","parent":null,"children":[],"decl_id":null,"docs":" Set the cursor icon.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6163},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":98655,"byte_end":98670,"line_start":282,"line_end":282,"column_start":12,"column_end":27},"name":"override_cursor","qualname":"<UpdateCtx>::override_cursor","value":"pub fn override_cursor(&mut Self, &Cursor)","parent":null,"children":[],"decl_id":null,"docs":" Override the cursor icon.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6164},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":99022,"byte_end":99034,"line_start":292,"line_end":292,"column_start":12,"column_end":24},"name":"clear_cursor","qualname":"<UpdateCtx>::clear_cursor","value":"pub fn clear_cursor(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear the cursor icon.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6166},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":99571,"byte_end":99584,"line_start":305,"line_end":305,"column_start":12,"column_end":25},"name":"request_paint","qualname":"<EventCtx>::request_paint","value":"pub fn request_paint(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Request a [`paint`] pass. This is equivalent to calling\n [`request_paint_rect`] for the widget's [`paint_rect`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6167},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":99945,"byte_end":99963,"line_start":315,"line_end":315,"column_start":12,"column_end":30},"name":"request_paint_rect","qualname":"<EventCtx>::request_paint_rect","value":"pub fn request_paint_rect(&mut Self, Rect)","parent":null,"children":[],"decl_id":null,"docs":" Request a [`paint`] pass for redrawing a rectangle, which is given\n relative to our layout rectangle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6168},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":100487,"byte_end":100501,"line_start":329,"line_end":329,"column_start":12,"column_end":26},"name":"request_layout","qualname":"<EventCtx>::request_layout","value":"pub fn request_layout(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Request a layout pass.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6169},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":100616,"byte_end":100634,"line_start":334,"line_end":334,"column_start":12,"column_end":30},"name":"request_anim_frame","qualname":"<EventCtx>::request_anim_frame","value":"pub fn request_anim_frame(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Request an animation frame.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6170},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":100835,"byte_end":100851,"line_start":341,"line_end":341,"column_start":12,"column_end":28},"name":"children_changed","qualname":"<EventCtx>::children_changed","value":"pub fn children_changed(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Indicate that your children have changed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6171},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":101213,"byte_end":101221,"line_start":350,"line_end":350,"column_start":12,"column_end":20},"name":"set_menu","qualname":"<EventCtx>::set_menu","value":"pub fn set_menu<T: Any>(&mut Self, MenuDesc<T>)","parent":null,"children":[],"decl_id":null,"docs":" Set the menu of the window containing the current widget.\n `T` must be the application's root `Data` type (the type provided to [`AppLauncher::launch`]).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6174},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":99571,"byte_end":99584,"line_start":305,"line_end":305,"column_start":12,"column_end":25},"name":"request_paint","qualname":"<UpdateCtx>::request_paint","value":"pub fn request_paint(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Request a [`paint`] pass. This is equivalent to calling\n [`request_paint_rect`] for the widget's [`paint_rect`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6175},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":99945,"byte_end":99963,"line_start":315,"line_end":315,"column_start":12,"column_end":30},"name":"request_paint_rect","qualname":"<UpdateCtx>::request_paint_rect","value":"pub fn request_paint_rect(&mut Self, Rect)","parent":null,"children":[],"decl_id":null,"docs":" Request a [`paint`] pass for redrawing a rectangle, which is given\n relative to our layout rectangle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6176},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":100487,"byte_end":100501,"line_start":329,"line_end":329,"column_start":12,"column_end":26},"name":"request_layout","qualname":"<UpdateCtx>::request_layout","value":"pub fn request_layout(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Request a layout pass.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6177},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":100616,"byte_end":100634,"line_start":334,"line_end":334,"column_start":12,"column_end":30},"name":"request_anim_frame","qualname":"<UpdateCtx>::request_anim_frame","value":"pub fn request_anim_frame(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Request an animation frame.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6178},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":100835,"byte_end":100851,"line_start":341,"line_end":341,"column_start":12,"column_end":28},"name":"children_changed","qualname":"<UpdateCtx>::children_changed","value":"pub fn children_changed(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Indicate that your children have changed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6179},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":101213,"byte_end":101221,"line_start":350,"line_end":350,"column_start":12,"column_end":20},"name":"set_menu","qualname":"<UpdateCtx>::set_menu","value":"pub fn set_menu<T: Any>(&mut Self, MenuDesc<T>)","parent":null,"children":[],"decl_id":null,"docs":" Set the menu of the window containing the current widget.\n `T` must be the application's root `Data` type (the type provided to [`AppLauncher::launch`]).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6182},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":99571,"byte_end":99584,"line_start":305,"line_end":305,"column_start":12,"column_end":25},"name":"request_paint","qualname":"<LifeCycleCtx>::request_paint","value":"pub fn request_paint(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Request a [`paint`] pass. This is equivalent to calling\n [`request_paint_rect`] for the widget's [`paint_rect`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6183},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":99945,"byte_end":99963,"line_start":315,"line_end":315,"column_start":12,"column_end":30},"name":"request_paint_rect","qualname":"<LifeCycleCtx>::request_paint_rect","value":"pub fn request_paint_rect(&mut Self, Rect)","parent":null,"children":[],"decl_id":null,"docs":" Request a [`paint`] pass for redrawing a rectangle, which is given\n relative to our layout rectangle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6184},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":100487,"byte_end":100501,"line_start":329,"line_end":329,"column_start":12,"column_end":26},"name":"request_layout","qualname":"<LifeCycleCtx>::request_layout","value":"pub fn request_layout(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Request a layout pass.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6185},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":100616,"byte_end":100634,"line_start":334,"line_end":334,"column_start":12,"column_end":30},"name":"request_anim_frame","qualname":"<LifeCycleCtx>::request_anim_frame","value":"pub fn request_anim_frame(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Request an animation frame.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6186},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":100835,"byte_end":100851,"line_start":341,"line_end":341,"column_start":12,"column_end":28},"name":"children_changed","qualname":"<LifeCycleCtx>::children_changed","value":"pub fn children_changed(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Indicate that your children have changed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6187},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":101213,"byte_end":101221,"line_start":350,"line_end":350,"column_start":12,"column_end":20},"name":"set_menu","qualname":"<LifeCycleCtx>::set_menu","value":"pub fn set_menu<T: Any>(&mut Self, MenuDesc<T>)","parent":null,"children":[],"decl_id":null,"docs":" Set the menu of the window containing the current widget.\n `T` must be the application's root `Data` type (the type provided to [`AppLauncher::launch`]).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6190},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":102049,"byte_end":102063,"line_start":373,"line_end":373,"column_start":16,"column_end":30},"name":"submit_command","qualname":"<EventCtx>::submit_command","value":"pub fn submit_command<impl Into<Command>: Into<Command>>(&mut Self,\nimpl Into<Command>)","parent":null,"children":[],"decl_id":null,"docs":" Submit a [`Command`] to be run after this event is handled.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6192},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":102392,"byte_end":102411,"line_start":381,"line_end":381,"column_start":16,"column_end":35},"name":"get_external_handle","qualname":"<EventCtx>::get_external_handle","value":"pub fn get_external_handle(&Self) -> ExtEventSink","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`ExtEventSink`] that can be moved between threads,\n and can be used to submit commands back to the application.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6193},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":102664,"byte_end":102677,"line_start":389,"line_end":389,"column_start":16,"column_end":29},"name":"request_timer","qualname":"<EventCtx>::request_timer","value":"pub fn request_timer(&mut Self, Duration) -> TimerToken","parent":null,"children":[],"decl_id":null,"docs":" Request a timer event.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6195},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":102049,"byte_end":102063,"line_start":373,"line_end":373,"column_start":16,"column_end":30},"name":"submit_command","qualname":"<UpdateCtx>::submit_command","value":"pub fn submit_command<impl Into<Command>: Into<Command>>(&mut Self,\nimpl Into<Command>)","parent":null,"children":[],"decl_id":null,"docs":" Submit a [`Command`] to be run after this event is handled.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6197},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":102392,"byte_end":102411,"line_start":381,"line_end":381,"column_start":16,"column_end":35},"name":"get_external_handle","qualname":"<UpdateCtx>::get_external_handle","value":"pub fn get_external_handle(&Self) -> ExtEventSink","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`ExtEventSink`] that can be moved between threads,\n and can be used to submit commands back to the application.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6198},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":102664,"byte_end":102677,"line_start":389,"line_end":389,"column_start":16,"column_end":29},"name":"request_timer","qualname":"<UpdateCtx>::request_timer","value":"pub fn request_timer(&mut Self, Duration) -> TimerToken","parent":null,"children":[],"decl_id":null,"docs":" Request a timer event.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6200},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":102049,"byte_end":102063,"line_start":373,"line_end":373,"column_start":16,"column_end":30},"name":"submit_command","qualname":"<LifeCycleCtx>::submit_command","value":"pub fn submit_command<impl Into<Command>: Into<Command>>(&mut Self,\nimpl Into<Command>)","parent":null,"children":[],"decl_id":null,"docs":" Submit a [`Command`] to be run after this event is handled.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6202},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":102392,"byte_end":102411,"line_start":381,"line_end":381,"column_start":16,"column_end":35},"name":"get_external_handle","qualname":"<LifeCycleCtx>::get_external_handle","value":"pub fn get_external_handle(&Self) -> ExtEventSink","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`ExtEventSink`] that can be moved between threads,\n and can be used to submit commands back to the application.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6203},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":102664,"byte_end":102677,"line_start":389,"line_end":389,"column_start":16,"column_end":29},"name":"request_timer","qualname":"<LifeCycleCtx>::request_timer","value":"pub fn request_timer(&mut Self, Duration) -> TimerToken","parent":null,"children":[],"decl_id":null,"docs":" Request a timer event.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6205},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":102049,"byte_end":102063,"line_start":373,"line_end":373,"column_start":16,"column_end":30},"name":"submit_command","qualname":"<LayoutCtx>::submit_command","value":"pub fn submit_command<impl Into<Command>: Into<Command>>(&mut Self,\nimpl Into<Command>)","parent":null,"children":[],"decl_id":null,"docs":" Submit a [`Command`] to be run after this event is handled.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6207},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":102392,"byte_end":102411,"line_start":381,"line_end":381,"column_start":16,"column_end":35},"name":"get_external_handle","qualname":"<LayoutCtx>::get_external_handle","value":"pub fn get_external_handle(&Self) -> ExtEventSink","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`ExtEventSink`] that can be moved between threads,\n and can be used to submit commands back to the application.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6208},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":102664,"byte_end":102677,"line_start":389,"line_end":389,"column_start":16,"column_end":29},"name":"request_timer","qualname":"<LayoutCtx>::request_timer","value":"pub fn request_timer(&mut Self, Duration) -> TimerToken","parent":null,"children":[],"decl_id":null,"docs":" Request a timer event.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":103729,"byte_end":103748,"line_start":419,"line_end":419,"column_start":12,"column_end":31},"name":"submit_notification","qualname":"<EventCtx>::submit_notification","value":"pub fn submit_notification<impl Into<Command>: Into<Command>>(&mut Self,\nimpl Into<Command>)","parent":null,"children":[],"decl_id":null,"docs":" Submit a [`Notification`].","sig":null,"attributes":[{"value":"/ Submit a [`Notification`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":102844,"byte_end":102874,"line_start":396,"line_end":396,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":102879,"byte_end":102882,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ The provided argument can be a [`Selector`] or a [`Command`]; this lets","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":102887,"byte_end":102962,"line_start":398,"line_end":398,"column_start":5,"column_end":80}},{"value":"/ us work with the existing API for addding a payload to a [`Selector`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":102967,"byte_end":103041,"line_start":399,"line_end":399,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":103046,"byte_end":103049,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ If the argument is a `Command`, the command's target will be ignored.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":103054,"byte_end":103127,"line_start":401,"line_end":401,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":103132,"byte_end":103135,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":103140,"byte_end":103154,"line_start":403,"line_end":403,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":103159,"byte_end":103162,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":103167,"byte_end":103174,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/ # use druid::{Event, EventCtx, Selector};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":103179,"byte_end":103224,"line_start":406,"line_end":406,"column_start":5,"column_end":50}},{"value":"/ const IMPORTANT_EVENT: Selector<String> = Selector::new(\"druid-example.important-event\");","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":103229,"byte_end":103322,"line_start":407,"line_end":407,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":103327,"byte_end":103330,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ fn check_event(ctx: &mut EventCtx, event: &Event) {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":103335,"byte_end":103390,"line_start":409,"line_end":409,"column_start":5,"column_end":60}},{"value":"/     if is_this_the_event_we_were_looking_for(event) {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":103395,"byte_end":103452,"line_start":410,"line_end":410,"column_start":5,"column_end":62}},{"value":"/         ctx.submit_notification(IMPORTANT_EVENT.with(\"That's the one\".to_string()))","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":103457,"byte_end":103544,"line_start":411,"line_end":411,"column_start":5,"column_end":92}},{"value":"/     }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":103549,"byte_end":103558,"line_start":412,"line_end":412,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":103563,"byte_end":103568,"line_start":413,"line_end":413,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":103573,"byte_end":103576,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # fn is_this_the_event_we_were_looking_for(event: &Event) -> bool { true }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":103581,"byte_end":103659,"line_start":415,"line_end":415,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":103664,"byte_end":103671,"line_start":416,"line_end":416,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":103676,"byte_end":103679,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ [`Selector`]: crate::Selector","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":103684,"byte_end":103717,"line_start":418,"line_end":418,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":104052,"byte_end":104062,"line_start":427,"line_end":427,"column_start":12,"column_end":22},"name":"set_active","qualname":"<EventCtx>::set_active","value":"pub fn set_active(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Set the \"active\" state of the widget.","sig":null,"attributes":[{"value":"/ Set the \"active\" state of the widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":103915,"byte_end":103956,"line_start":424,"line_end":424,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":103961,"byte_end":103964,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ See [`EventCtx::is_active`](struct.EventCtx.html#method.is_active).","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":103969,"byte_end":104040,"line_start":426,"line_end":426,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":104441,"byte_end":104451,"line_start":436,"line_end":436,"column_start":12,"column_end":22},"name":"new_window","qualname":"<EventCtx>::new_window","value":"pub fn new_window<T: Any>(&mut Self, WindowDesc<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new window.\n `T` must be the application's root `Data` type (the type provided to [`AppLauncher::launch`]).","sig":null,"attributes":[{"value":"/ Create a new window.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":104223,"byte_end":104247,"line_start":432,"line_end":432,"column_start":5,"column_end":29}},{"value":"/ `T` must be the application's root `Data` type (the type provided to [`AppLauncher::launch`]).","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":104252,"byte_end":104350,"line_start":433,"line_end":433,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":104355,"byte_end":104358,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ [`AppLauncher::launch`]: struct.AppLauncher.html#method.launch","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":104363,"byte_end":104429,"line_start":435,"line_end":435,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":105139,"byte_end":105156,"line_start":452,"line_end":452,"column_start":12,"column_end":29},"name":"show_context_menu","qualname":"<EventCtx>::show_context_menu","value":"pub fn show_context_menu<T: Any>(&mut Self, ContextMenu<T>)","parent":null,"children":[],"decl_id":null,"docs":" Show the context menu in the window containing the current widget.\n `T` must be the application's root `Data` type (the type provided to [`AppLauncher::launch`]).","sig":null,"attributes":[{"value":"/ Show the context menu in the window containing the current widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":104875,"byte_end":104945,"line_start":448,"line_end":448,"column_start":5,"column_end":75}},{"value":"/ `T` must be the application's root `Data` type (the type provided to [`AppLauncher::launch`]).","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":104950,"byte_end":105048,"line_start":449,"line_end":449,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":105053,"byte_end":105056,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ [`AppLauncher::launch`]: struct.AppLauncher.html#method.launch","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":105061,"byte_end":105127,"line_start":451,"line_end":451,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":105728,"byte_end":105739,"line_start":468,"line_end":468,"column_start":12,"column_end":23},"name":"set_handled","qualname":"<EventCtx>::set_handled","value":"pub fn set_handled(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Set the event as \"handled\", which stops its propagation to other\n widgets.\n","sig":null,"attributes":[{"value":"/ Set the event as \"handled\", which stops its propagation to other","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":105631,"byte_end":105699,"line_start":466,"line_end":466,"column_start":5,"column_end":73}},{"value":"/ widgets.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":105704,"byte_end":105716,"line_start":467,"line_end":467,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":105878,"byte_end":105888,"line_start":473,"line_end":473,"column_start":12,"column_end":22},"name":"is_handled","qualname":"<EventCtx>::is_handled","value":"pub fn is_handled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determine whether the event has been handled by some other widget.\n","sig":null,"attributes":[{"value":"/ Determine whether the event has been handled by some other widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":105796,"byte_end":105866,"line_start":472,"line_end":472,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":106361,"byte_end":106374,"line_start":486,"line_end":486,"column_start":12,"column_end":25},"name":"request_focus","qualname":"<EventCtx>::request_focus","value":"pub fn request_focus(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Request keyboard focus.","sig":null,"attributes":[{"value":"/ Request keyboard focus.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":105941,"byte_end":105968,"line_start":477,"line_end":477,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":105973,"byte_end":105976,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ Because only one widget can be focused at a time, multiple focus requests","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":105981,"byte_end":106058,"line_start":479,"line_end":479,"column_start":5,"column_end":82}},{"value":"/ from different widgets during a single event cycle means that the last","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":106063,"byte_end":106137,"line_start":480,"line_end":480,"column_start":5,"column_end":79}},{"value":"/ widget that requests focus will override the previous requests.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":106142,"byte_end":106209,"line_start":481,"line_end":481,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":106214,"byte_end":106217,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ See [`is_focused`] for more information about focus.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":106222,"byte_end":106278,"line_start":483,"line_end":483,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":106283,"byte_end":106286,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ [`is_focused`]: struct.EventCtx.html#method.is_focused","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":106291,"byte_end":106349,"line_start":485,"line_end":485,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":107006,"byte_end":107015,"line_start":500,"line_end":500,"column_start":12,"column_end":21},"name":"set_focus","qualname":"<EventCtx>::set_focus","value":"pub fn set_focus(&mut Self, WidgetId)","parent":null,"children":[],"decl_id":null,"docs":" Transfer focus to the widget with the given `WidgetId`.","sig":null,"attributes":[{"value":"/ Transfer focus to the widget with the given `WidgetId`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":106795,"byte_end":106854,"line_start":495,"line_end":495,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":106859,"byte_end":106862,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ See [`is_focused`] for more information about focus.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":106867,"byte_end":106923,"line_start":497,"line_end":497,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":106928,"byte_end":106931,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ [`is_focused`]: struct.EventCtx.html#method.is_focused","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":106936,"byte_end":106994,"line_start":499,"line_end":499,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":107415,"byte_end":107425,"line_start":511,"line_end":511,"column_start":12,"column_end":22},"name":"focus_next","qualname":"<EventCtx>::focus_next","value":"pub fn focus_next(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Transfer focus to the next focusable widget.","sig":null,"attributes":[{"value":"/ Transfer focus to the next focusable widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":107134,"byte_end":107182,"line_start":504,"line_end":504,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":107187,"byte_end":107190,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ This should only be called by a widget that currently has focus.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":107195,"byte_end":107263,"line_start":506,"line_end":506,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":107268,"byte_end":107271,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ See [`is_focused`] for more information about focus.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":107276,"byte_end":107332,"line_start":508,"line_end":508,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":107337,"byte_end":107340,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ [`is_focused`]: struct.EventCtx.html#method.is_focused","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":107345,"byte_end":107403,"line_start":510,"line_end":510,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":107953,"byte_end":107963,"line_start":526,"line_end":526,"column_start":12,"column_end":22},"name":"focus_prev","qualname":"<EventCtx>::focus_prev","value":"pub fn focus_prev(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Transfer focus to the previous focusable widget.","sig":null,"attributes":[{"value":"/ Transfer focus to the previous focusable widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":107668,"byte_end":107720,"line_start":519,"line_end":519,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":107725,"byte_end":107728,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ This should only be called by a widget that currently has focus.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":107733,"byte_end":107801,"line_start":521,"line_end":521,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":107806,"byte_end":107809,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ See [`is_focused`] for more information about focus.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":107814,"byte_end":107870,"line_start":523,"line_end":523,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":107875,"byte_end":107878,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ [`is_focused`]: struct.EventCtx.html#method.is_focused","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":107883,"byte_end":107941,"line_start":525,"line_end":525,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":108461,"byte_end":108473,"line_start":541,"line_end":541,"column_start":12,"column_end":24},"name":"resign_focus","qualname":"<EventCtx>::resign_focus","value":"pub fn resign_focus(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Give up focus.","sig":null,"attributes":[{"value":"/ Give up focus.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":108210,"byte_end":108228,"line_start":534,"line_end":534,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":108233,"byte_end":108236,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ This should only be called by a widget that currently has focus.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":108241,"byte_end":108309,"line_start":536,"line_end":536,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":108314,"byte_end":108317,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ See [`is_focused`] for more information about focus.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":108322,"byte_end":108378,"line_start":538,"line_end":538,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":108383,"byte_end":108386,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ [`is_focused`]: struct.EventCtx.html#method.is_focused","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":108391,"byte_end":108449,"line_start":540,"line_end":540,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":109306,"byte_end":109320,"line_start":561,"line_end":561,"column_start":12,"column_end":26},"name":"request_update","qualname":"<EventCtx>::request_update","value":"pub fn request_update(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Request an update cycle.","sig":null,"attributes":[{"value":"/ Request an update cycle.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":108791,"byte_end":108819,"line_start":552,"line_end":552,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":108824,"byte_end":108827,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ After this, `update` will be called on the widget in the next update cycle, even","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":108832,"byte_end":108916,"line_start":554,"line_end":554,"column_start":5,"column_end":89}},{"value":"/ if there's not a data change.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":108921,"byte_end":108954,"line_start":555,"line_end":555,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":108959,"byte_end":108962,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ The use case for this method is when a container widget synthesizes data for its","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":108967,"byte_end":109051,"line_start":557,"line_end":557,"column_start":5,"column_end":89}},{"value":"/ children. This is appropriate in specialized cases, but before reaching for this","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":109056,"byte_end":109140,"line_start":558,"line_end":558,"column_start":5,"column_end":89}},{"value":"/ method, consider whether it might be better to refactor to be more idiomatic, in","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":109145,"byte_end":109229,"line_start":559,"line_end":559,"column_start":5,"column_end":89}},{"value":"/ particular to make that data available in the app state.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":109234,"byte_end":109294,"line_start":560,"line_end":560,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":109744,"byte_end":109764,"line_start":574,"line_end":574,"column_start":12,"column_end":32},"name":"has_requested_update","qualname":"<UpdateCtx>::has_requested_update","value":"pub fn has_requested_update(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this widget or a descendent as explicitly requested\n an update call.","sig":null,"attributes":[{"value":"/ Returns `true` if this widget or a descendent as explicitly requested","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":109421,"byte_end":109494,"line_start":567,"line_end":567,"column_start":5,"column_end":78}},{"value":"/ an update call.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":109499,"byte_end":109518,"line_start":568,"line_end":568,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":109523,"byte_end":109526,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This should only be needed in advanced cases;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":109531,"byte_end":109580,"line_start":570,"line_end":570,"column_start":5,"column_end":54}},{"value":"/ see [`EventCtx::request_update`] for more information.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":109585,"byte_end":109643,"line_start":571,"line_end":571,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":109648,"byte_end":109651,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ [`EventCtx::request_update`]: struct.EventCtx.html#method.request_update","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":109656,"byte_end":109732,"line_start":573,"line_end":573,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":110042,"byte_end":110053,"line_start":583,"line_end":583,"column_start":12,"column_end":23},"name":"env_changed","qualname":"<UpdateCtx>::env_changed","value":"pub fn env_changed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current [`Env`] has changed since the previous\n [`update`] call.","sig":null,"attributes":[{"value":"/ Returns `true` if the current [`Env`] has changed since the previous","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":109838,"byte_end":109910,"line_start":578,"line_end":578,"column_start":5,"column_end":77}},{"value":"/ [`update`] call.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":109915,"byte_end":109935,"line_start":579,"line_end":579,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":109940,"byte_end":109943,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ [`Env`]: struct.Env.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":109948,"byte_end":109976,"line_start":581,"line_end":581,"column_start":5,"column_end":33}},{"value":"/ [`update`]: trait.Widget.html#tymethod.update","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":109981,"byte_end":110030,"line_start":582,"line_end":582,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":110516,"byte_end":110531,"line_start":597,"line_end":597,"column_start":12,"column_end":27},"name":"env_key_changed","qualname":"<UpdateCtx>::env_key_changed","value":"pub fn env_key_changed<T,\nimpl KeyLike<T>: KeyLike<T>>(&Self, &impl KeyLike<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the given key has changed since the last [`update`]\n call.","sig":null,"attributes":[{"value":"/ Returns `true` if the given key has changed since the last [`update`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":110114,"byte_end":110187,"line_start":587,"line_end":587,"column_start":5,"column_end":78}},{"value":"/ call.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":110192,"byte_end":110201,"line_start":588,"line_end":588,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":110206,"byte_end":110209,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ The argument can be anything that is resolveable from the [`Env`],","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":110214,"byte_end":110284,"line_start":590,"line_end":590,"column_start":5,"column_end":75}},{"value":"/ such as a [`Key`] or a [`KeyOrValue`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":110289,"byte_end":110331,"line_start":591,"line_end":591,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":110336,"byte_end":110339,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ [`update`]: trait.Widget.html#tymethod.update","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":110344,"byte_end":110393,"line_start":593,"line_end":593,"column_start":5,"column_end":54}},{"value":"/ [`Env`]: struct.Env.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":110398,"byte_end":110426,"line_start":594,"line_end":594,"column_start":5,"column_end":33}},{"value":"/ [`Key`]: struct.Key.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":110431,"byte_end":110459,"line_start":595,"line_end":595,"column_start":5,"column_end":33}},{"value":"/ [`KeyOrValue`]: enum.KeyOrValue.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":110464,"byte_end":110504,"line_start":596,"line_end":596,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":110991,"byte_end":111005,"line_start":612,"line_end":612,"column_start":12,"column_end":26},"name":"register_child","qualname":"<LifeCycleCtx>::register_child","value":"pub fn register_child(&mut Self, WidgetId)","parent":null,"children":[],"decl_id":null,"docs":" Registers a child widget.","sig":null,"attributes":[{"value":"/ Registers a child widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":110747,"byte_end":110776,"line_start":606,"line_end":606,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":110781,"byte_end":110784,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ This should only be called in response to a `LifeCycle::WidgetAdded` event.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":110789,"byte_end":110868,"line_start":608,"line_end":608,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":110873,"byte_end":110876,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ In general, you should not need to call this method; it is handled by","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":110881,"byte_end":110954,"line_start":610,"line_end":610,"column_start":5,"column_end":78}},{"value":"/ the `WidgetPod`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":110959,"byte_end":110979,"line_start":611,"line_end":611,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":111512,"byte_end":111530,"line_start":624,"line_end":624,"column_start":12,"column_end":30},"name":"register_for_focus","qualname":"<LifeCycleCtx>::register_for_focus","value":"pub fn register_for_focus(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Register this widget to be eligile to accept focus automatically.","sig":null,"attributes":[{"value":"/ Register this widget to be eligile to accept focus automatically.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":111101,"byte_end":111170,"line_start":616,"line_end":616,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":111175,"byte_end":111178,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ This should only be called in response to a [`LifeCycle::WidgetAdded`] event.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":111183,"byte_end":111264,"line_start":618,"line_end":618,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":111269,"byte_end":111272,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ See [`EventCtx::is_focused`] for more information about focus.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":111277,"byte_end":111343,"line_start":620,"line_end":620,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":111348,"byte_end":111351,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ [`LifeCycle::WidgetAdded`]: enum.Lifecycle.html#variant.WidgetAdded","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":111356,"byte_end":111427,"line_start":622,"line_end":622,"column_start":5,"column_end":76}},{"value":"/ [`EventCtx::is_focused`]: struct.EventCtx.html#method.is_focused","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":111432,"byte_end":111500,"line_start":623,"line_end":623,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":112184,"byte_end":112200,"line_start":641,"line_end":641,"column_start":12,"column_end":28},"name":"set_paint_insets","qualname":"<LayoutCtx>::set_paint_insets","value":"pub fn set_paint_insets<impl Into<Insets>: Into<Insets>>(&mut Self,\nimpl Into<Insets>)","parent":null,"children":[],"decl_id":null,"docs":" Set explicit paint [`Insets`] for this widget.","sig":null,"attributes":[{"value":"/ Set explicit paint [`Insets`] for this widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":111644,"byte_end":111694,"line_start":630,"line_end":630,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":111699,"byte_end":111702,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ You are not required to set explicit paint bounds unless you need","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":111707,"byte_end":111776,"line_start":632,"line_end":632,"column_start":5,"column_end":74}},{"value":"/ to paint outside of your layout bounds. In this case, the argument","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":111781,"byte_end":111851,"line_start":633,"line_end":633,"column_start":5,"column_end":75}},{"value":"/ should be an [`Insets`] struct that indicates where your widget","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":111856,"byte_end":111923,"line_start":634,"line_end":634,"column_start":5,"column_end":72}},{"value":"/ needs to overpaint, relative to its bounds.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":111928,"byte_end":111975,"line_start":635,"line_end":635,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":111980,"byte_end":111983,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ For more information, see [`WidgetPod::paint_insets`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":111988,"byte_end":112046,"line_start":637,"line_end":637,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":112051,"byte_end":112054,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ [`Insets`]: struct.Insets.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":112059,"byte_end":112093,"line_start":639,"line_end":639,"column_start":5,"column_end":39}},{"value":"/ [`WidgetPod::paint_insets`]: struct.WidgetPod.html#method.paint_insets","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":112098,"byte_end":112172,"line_start":640,"line_end":640,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":112802,"byte_end":112821,"line_start":654,"line_end":654,"column_start":12,"column_end":31},"name":"set_baseline_offset","qualname":"<LayoutCtx>::set_baseline_offset","value":"pub fn set_baseline_offset(&mut Self, f64)","parent":null,"children":[],"decl_id":null,"docs":" Set an explicit baseline position for this widget.","sig":null,"attributes":[{"value":"/ Set an explicit baseline position for this widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":112322,"byte_end":112376,"line_start":645,"line_end":645,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":112381,"byte_end":112384,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ The baseline position is used to align widgets that contain text,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":112389,"byte_end":112458,"line_start":647,"line_end":647,"column_start":5,"column_end":74}},{"value":"/ such as buttons, labels, and other controls. It may also be used","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":112463,"byte_end":112531,"line_start":648,"line_end":648,"column_start":5,"column_end":73}},{"value":"/ by other widgets that are opinionated about how they are aligned","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":112536,"byte_end":112604,"line_start":649,"line_end":649,"column_start":5,"column_end":73}},{"value":"/ relative to neighbouring text, such as switches or checkboxes.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":112609,"byte_end":112675,"line_start":650,"line_end":650,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":112680,"byte_end":112683,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ The provided value should be the distance from the *bottom* of the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":112688,"byte_end":112758,"line_start":652,"line_end":652,"column_start":5,"column_end":75}},{"value":"/ widget to the baseline.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":112763,"byte_end":112790,"line_start":653,"line_end":653,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":113366,"byte_end":113371,"line_start":670,"line_end":670,"column_start":12,"column_end":17},"name":"depth","qualname":"<PaintCtx>::depth","value":"pub fn depth(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The depth in the tree of the currently painting widget.","sig":null,"attributes":[{"value":"/ The depth in the tree of the currently painting widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":112944,"byte_end":113003,"line_start":660,"line_end":660,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":113008,"byte_end":113011,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ This may be used in combination with [`paint_with_z_index`] in order","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":113016,"byte_end":113088,"line_start":662,"line_end":662,"column_start":5,"column_end":77}},{"value":"/ to correctly order painting operations.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":113093,"byte_end":113136,"line_start":663,"line_end":663,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":113141,"byte_end":113144,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ The `depth` here may not be exact; it is only guaranteed that a child will","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":113149,"byte_end":113227,"line_start":665,"line_end":665,"column_start":5,"column_end":83}},{"value":"/ have a greater depth than its parent.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":113232,"byte_end":113273,"line_start":666,"line_end":666,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":113278,"byte_end":113281,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ [`paint_with_z_index`]: #method.paint_with_z_index","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":113286,"byte_end":113340,"line_start":668,"line_end":668,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":113345,"byte_end":113354,"line_start":669,"line_end":669,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":113494,"byte_end":113500,"line_start":676,"line_end":676,"column_start":12,"column_end":18},"name":"region","qualname":"<PaintCtx>::region","value":"pub fn region(&Self) -> &Region","parent":null,"children":[],"decl_id":null,"docs":" Returns the region that needs to be repainted.\n","sig":null,"attributes":[{"value":"/ Returns the region that needs to be repainted.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":113418,"byte_end":113468,"line_start":674,"line_end":674,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":113473,"byte_end":113482,"line_start":675,"line_end":675,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":113821,"byte_end":113835,"line_start":685,"line_end":685,"column_start":12,"column_end":26},"name":"with_child_ctx","qualname":"<PaintCtx>::with_child_ctx","value":"pub fn with_child_ctx<impl Into<Region>: Into<Region>,\nimpl FnOnce(&mut PaintCtx): FnOnce(&mut PaintCtx) ->\n()>(&mut Self, impl Into<Region>, impl FnOnce(&mut PaintCtx))","parent":null,"children":[],"decl_id":null,"docs":" Creates a temporary `PaintCtx` with a new visible region, and calls\n the provided function with that `PaintCtx`.","sig":null,"attributes":[{"value":"/ Creates a temporary `PaintCtx` with a new visible region, and calls","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":113553,"byte_end":113624,"line_start":680,"line_end":680,"column_start":5,"column_end":76}},{"value":"/ the provided function with that `PaintCtx`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":113629,"byte_end":113676,"line_start":681,"line_end":681,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":113681,"byte_end":113684,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ This is used by containers to ensure that their children have the correct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":113689,"byte_end":113766,"line_start":683,"line_end":683,"column_start":5,"column_end":82}},{"value":"/ visible region given their layout.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":113771,"byte_end":113809,"line_start":684,"line_end":684,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":115013,"byte_end":115022,"line_start":719,"line_end":719,"column_start":12,"column_end":21},"name":"with_save","qualname":"<PaintCtx>::with_save","value":"pub fn with_save<impl FnOnce(&mut PaintCtx): FnOnce(&mut PaintCtx) ->\n()>(&mut Self, impl FnOnce(&mut PaintCtx))","parent":null,"children":[],"decl_id":null,"docs":" Saves the current context, executes the closures, and restores the context.","sig":null,"attributes":[{"value":"/ Saves the current context, executes the closures, and restores the context.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":114262,"byte_end":114341,"line_start":698,"line_end":698,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":114346,"byte_end":114349,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ This is useful if you would like to transform or clip or otherwise","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":114354,"byte_end":114424,"line_start":700,"line_end":700,"column_start":5,"column_end":75}},{"value":"/ modify the drawing context but do not want that modification to","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":114429,"byte_end":114496,"line_start":701,"line_end":701,"column_start":5,"column_end":72}},{"value":"/ effect other widgets.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":114501,"byte_end":114526,"line_start":702,"line_end":702,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":114531,"byte_end":114534,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":114539,"byte_end":114553,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":114558,"byte_end":114561,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":114566,"byte_end":114573,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use druid::{Env, PaintCtx, RenderContext, theme};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":114578,"byte_end":114633,"line_start":707,"line_end":707,"column_start":5,"column_end":60}},{"value":"/ # struct T;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":114638,"byte_end":114653,"line_start":708,"line_end":708,"column_start":5,"column_end":20}},{"value":"/ # impl T {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":114658,"byte_end":114672,"line_start":709,"line_end":709,"column_start":5,"column_end":19}},{"value":"/ fn paint(&mut self, ctx: &mut PaintCtx, _data: &T, env: &Env) {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":114677,"byte_end":114744,"line_start":710,"line_end":710,"column_start":5,"column_end":72}},{"value":"/     let clip_rect = ctx.size().to_rect().inset(5.0);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":114749,"byte_end":114805,"line_start":711,"line_end":711,"column_start":5,"column_end":61}},{"value":"/     ctx.with_save(|ctx| {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":114810,"byte_end":114839,"line_start":712,"line_end":712,"column_start":5,"column_end":34}},{"value":"/         ctx.clip(clip_rect);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":114844,"byte_end":114876,"line_start":713,"line_end":713,"column_start":5,"column_end":37}},{"value":"/         ctx.stroke(clip_rect, &env.get(theme::PRIMARY_DARK), 5.0);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":114881,"byte_end":114951,"line_start":714,"line_end":714,"column_start":5,"column_end":75}},{"value":"/     });","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":114956,"byte_end":114967,"line_start":715,"line_end":715,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":114972,"byte_end":114977,"line_start":716,"line_end":716,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":114982,"byte_end":114989,"line_start":717,"line_end":717,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":114994,"byte_end":115001,"line_start":718,"line_end":718,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":115518,"byte_end":115536,"line_start":735,"line_end":735,"column_start":12,"column_end":30},"name":"paint_with_z_index","qualname":"<PaintCtx>::paint_with_z_index","value":"pub fn paint_with_z_index<impl FnOnce(&mut PaintCtx) + 'static: FnOnce(&mut PaintCtx)\n-> () + 'static>(&mut Self, u32, impl FnOnce(&mut PaintCtx) + 'static)","parent":null,"children":[],"decl_id":null,"docs":" Allows to specify order for paint operations.","sig":null,"attributes":[{"value":"/ Allows to specify order for paint operations.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":115373,"byte_end":115422,"line_start":732,"line_end":732,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":115427,"byte_end":115430,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ Larger `z_index` indicate that an operation will be executed later.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":115435,"byte_end":115506,"line_start":734,"line_end":734,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1001},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":119427,"byte_end":119436,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"WidgetPod","qualname":"::core::WidgetPod","value":"WidgetPod {  }","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008}],"decl_id":null,"docs":" A container for one widget in the hierarchy.","sig":null,"attributes":[{"value":"/ A container for one widget in the hierarchy.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":118659,"byte_end":118707,"line_start":32,"line_end":32,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":118708,"byte_end":118711,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Generally, container widgets don't contain other widgets directly,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":118712,"byte_end":118782,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/ but rather contain a `WidgetPod`, which has additional state needed","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":118783,"byte_end":118854,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/ for layout and for the widget to participate in event flow.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":118855,"byte_end":118918,"line_start":36,"line_end":36,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":118919,"byte_end":118922,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ `WidgetPod` will translate internal druid events to regular events,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":118923,"byte_end":118994,"line_start":38,"line_end":38,"column_start":1,"column_end":72}},{"value":"/ synthesize additional events of interest, and stop propagation when it makes sense.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":118995,"byte_end":119082,"line_start":39,"line_end":39,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":119083,"byte_end":119086,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This struct also contains the previous data for a widget, which is","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":119087,"byte_end":119157,"line_start":41,"line_end":41,"column_start":1,"column_end":71}},{"value":"/ essential for the [`update`] method, both to decide when the update","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":119158,"byte_end":119229,"line_start":42,"line_end":42,"column_start":1,"column_end":72}},{"value":"/ needs to propagate, and to provide the previous data so that a","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":119230,"byte_end":119296,"line_start":43,"line_end":43,"column_start":1,"column_end":67}},{"value":"/ widget can process a diff between the old value and the new.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":119297,"byte_end":119361,"line_start":44,"line_end":44,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":119362,"byte_end":119365,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`update`]: trait.Widget.html#tymethod.update","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":119366,"byte_end":119415,"line_start":46,"line_end":46,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":123939,"byte_end":123942,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"new","qualname":"<WidgetPod<T, W>>::new","value":"pub fn new(W) -> WidgetPod<T, W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new widget pod.","sig":null,"attributes":[{"value":"/ Create a new widget pod.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":123679,"byte_end":123707,"line_start":161,"line_end":161,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":123712,"byte_end":123715,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ In a widget hierarchy, each widget is wrapped in a `WidgetPod`","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":123720,"byte_end":123786,"line_start":163,"line_end":163,"column_start":5,"column_end":71}},{"value":"/ so it can participate in layout and event flow. The process of","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":123791,"byte_end":123857,"line_start":164,"line_end":164,"column_start":5,"column_end":71}},{"value":"/ adding a child widget to a container should call this method.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":123862,"byte_end":123927,"line_start":165,"line_end":165,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":124679,"byte_end":124693,"line_start":188,"line_end":188,"column_start":12,"column_end":26},"name":"is_initialized","qualname":"<WidgetPod<T, W>>::is_initialized","value":"pub fn is_initialized(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the widget has received [`LifeCycle::WidgetAdded`].","sig":null,"attributes":[{"value":"/ Returns `true` if the widget has received [`LifeCycle::WidgetAdded`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":124508,"byte_end":124581,"line_start":185,"line_end":185,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":124586,"byte_end":124589,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ [`LifeCycle::WidgetAdded`]: ./enum.LifeCycle.html#variant.WidgetAdded","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":124594,"byte_end":124667,"line_start":187,"line_end":187,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":124809,"byte_end":124818,"line_start":193,"line_end":193,"column_start":12,"column_end":21},"name":"is_active","qualname":"<WidgetPod<T, W>>::is_active","value":"pub fn is_active(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Query the \"active\" state of the widget.\n","sig":null,"attributes":[{"value":"/ Query the \"active\" state of the widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":124754,"byte_end":124797,"line_start":192,"line_end":192,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":124935,"byte_end":124945,"line_start":198,"line_end":198,"column_start":12,"column_end":22},"name":"has_active","qualname":"<WidgetPod<T, W>>::has_active","value":"pub fn has_active(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if any descendant is active.\n","sig":null,"attributes":[{"value":"/ Returns `true` if any descendant is active.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":124876,"byte_end":124923,"line_start":197,"line_end":197,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":125169,"byte_end":125175,"line_start":206,"line_end":206,"column_start":12,"column_end":18},"name":"is_hot","qualname":"<WidgetPod<T, W>>::is_hot","value":"pub fn is_hot(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Query the \"hot\" state of the widget.","sig":null,"attributes":[{"value":"/ Query the \"hot\" state of the widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":125004,"byte_end":125044,"line_start":202,"line_end":202,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":125049,"byte_end":125052,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ See [`EventCtx::is_hot`](struct.EventCtx.html#method.is_hot) for","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":125057,"byte_end":125125,"line_start":204,"line_end":204,"column_start":5,"column_end":73}},{"value":"/ additional information.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":125130,"byte_end":125157,"line_start":205,"line_end":205,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":125285,"byte_end":125291,"line_start":211,"line_end":211,"column_start":12,"column_end":18},"name":"widget","qualname":"<WidgetPod<T, W>>::widget","value":"pub fn widget(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the inner widget.\n","sig":null,"attributes":[{"value":"/ Return a reference to the inner widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":125230,"byte_end":125273,"line_start":210,"line_end":210,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":125401,"byte_end":125411,"line_start":216,"line_end":216,"column_start":12,"column_end":22},"name":"widget_mut","qualname":"<WidgetPod<T, W>>::widget_mut","value":"pub fn widget_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the inner widget.\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to the inner widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":125338,"byte_end":125389,"line_start":215,"line_end":215,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":125517,"byte_end":125519,"line_start":221,"line_end":221,"column_start":12,"column_end":14},"name":"id","qualname":"<WidgetPod<T, W>>::id","value":"pub fn id(&Self) -> WidgetId","parent":null,"children":[],"decl_id":null,"docs":" Get the identity of the widget.\n","sig":null,"attributes":[{"value":"/ Get the identity of the widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":125470,"byte_end":125505,"line_start":220,"line_end":220,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":125761,"byte_end":125776,"line_start":230,"line_end":230,"column_start":12,"column_end":27},"name":"set_layout_rect","qualname":"<WidgetPod<T, W>>::set_layout_rect","value":"pub fn set_layout_rect(&mut Self, &mut LayoutCtx, &T, &Env, Rect)","parent":null,"children":[],"decl_id":null,"docs":" Set the layout [`Rect`].","sig":null,"attributes":[{"value":"/ Set the layout [`Rect`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":125574,"byte_end":125602,"line_start":225,"line_end":225,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":125607,"byte_end":125610,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This is soft-deprecated; you should use [`set_origin`] instead for new code.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":125615,"byte_end":125695,"line_start":227,"line_end":227,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":125700,"byte_end":125703,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ [`set_origin`]: WidgetPod::set_origin","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":125708,"byte_end":125749,"line_start":229,"line_end":229,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":126681,"byte_end":126691,"line_start":249,"line_end":249,"column_start":12,"column_end":22},"name":"set_origin","qualname":"<WidgetPod<T, W>>::set_origin","value":"pub fn set_origin(&mut Self, &mut LayoutCtx, &T, &Env, Point)","parent":null,"children":[],"decl_id":null,"docs":" Set the origin of this widget, in the parent's coordinate space.","sig":null,"attributes":[{"value":"/ Set the origin of this widget, in the parent's coordinate space.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":126082,"byte_end":126150,"line_start":237,"line_end":237,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":126155,"byte_end":126158,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ A container widget should call the [`Widget::layout`] method on its children in","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":126163,"byte_end":126246,"line_start":239,"line_end":239,"column_start":5,"column_end":88}},{"value":"/ its own [`Widget::layout`] implementation, and then call `set_origin` to","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":126251,"byte_end":126327,"line_start":240,"line_end":240,"column_start":5,"column_end":81}},{"value":"/ position those children.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":126332,"byte_end":126360,"line_start":241,"line_end":241,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":126365,"byte_end":126368,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ The child will receive the [`LifeCycle::Size`] event informing them of the final [`Size`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":126373,"byte_end":126467,"line_start":243,"line_end":243,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":126472,"byte_end":126475,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ [`Widget::layout`]: trait.Widget.html#tymethod.layout","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":126480,"byte_end":126537,"line_start":245,"line_end":245,"column_start":5,"column_end":62}},{"value":"/ [`Rect`]: struct.Rect.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":126542,"byte_end":126572,"line_start":246,"line_end":246,"column_start":5,"column_end":35}},{"value":"/ [`Size`]: struct.Size.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":126577,"byte_end":126607,"line_start":247,"line_end":247,"column_start":5,"column_end":35}},{"value":"/ [`LifeCycle::Size`]: enum.LifeCycle.html#variant.Size","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":126612,"byte_end":126669,"line_start":248,"line_end":248,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":127694,"byte_end":127705,"line_start":278,"line_end":278,"column_start":12,"column_end":23},"name":"layout_rect","qualname":"<WidgetPod<T, W>>::layout_rect","value":"pub fn layout_rect(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Returns the layout [`Rect`].","sig":null,"attributes":[{"value":"/ Returns the layout [`Rect`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":127316,"byte_end":127348,"line_start":269,"line_end":269,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":127353,"byte_end":127356,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This will be a [`Rect`] with a [`Size`] determined by the child's [`layout`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":127361,"byte_end":127441,"line_start":271,"line_end":271,"column_start":5,"column_end":85}},{"value":"/ method, and the origin that was set by [`set_origin`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":127446,"byte_end":127504,"line_start":272,"line_end":272,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":127509,"byte_end":127512,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ [`Rect`]: struct.Rect.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":127517,"byte_end":127547,"line_start":274,"line_end":274,"column_start":5,"column_end":35}},{"value":"/ [`Size`]: struct.Size.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":127552,"byte_end":127582,"line_start":275,"line_end":275,"column_start":5,"column_end":35}},{"value":"/ [`layout`]: trait.Widget.html#tymethod.layout","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":127587,"byte_end":127636,"line_start":276,"line_end":276,"column_start":5,"column_end":54}},{"value":"/ [`set_origin`]: WidgetPod::set_origin","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":127641,"byte_end":127682,"line_start":277,"line_end":277,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":128271,"byte_end":128290,"line_start":291,"line_end":291,"column_start":12,"column_end":31},"name":"set_viewport_offset","qualname":"<WidgetPod<T, W>>::set_viewport_offset","value":"pub fn set_viewport_offset(&mut Self, Vec2)","parent":null,"children":[],"decl_id":null,"docs":" Set the viewport offset.","sig":null,"attributes":[{"value":"/ Set the viewport offset.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":127767,"byte_end":127795,"line_start":282,"line_end":282,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":127800,"byte_end":127803,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ This is relevant only for children of a scroll view (or similar). It must","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":127808,"byte_end":127885,"line_start":284,"line_end":284,"column_start":5,"column_end":82}},{"value":"/ be set by the parent widget whenever it modifies the position of its child","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":127890,"byte_end":127968,"line_start":285,"line_end":285,"column_start":5,"column_end":83}},{"value":"/ while painting it and propagating events. As a rule of thumb, you need this","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":127973,"byte_end":128052,"line_start":286,"line_end":286,"column_start":5,"column_end":84}},{"value":"/ if and only if you `Affine::translate` the paint context before painting","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":128057,"byte_end":128133,"line_start":287,"line_end":287,"column_start":5,"column_end":81}},{"value":"/ your child. For an example, see the implentation of [`Scroll`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":128138,"byte_end":128205,"line_start":288,"line_end":288,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":128210,"byte_end":128213,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ [`Scroll`]: widget/struct.Scroll.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":128218,"byte_end":128259,"line_start":290,"line_end":290,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":128554,"byte_end":128569,"line_start":300,"line_end":300,"column_start":12,"column_end":27},"name":"viewport_offset","qualname":"<WidgetPod<T, W>>::viewport_offset","value":"pub fn viewport_offset(&Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" The viewport offset.","sig":null,"attributes":[{"value":"/ The viewport offset.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":128374,"byte_end":128398,"line_start":295,"line_end":295,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":128403,"byte_end":128406,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ This will be the same value as set by [`set_viewport_offset`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":128411,"byte_end":128477,"line_start":297,"line_end":297,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":128482,"byte_end":128485,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ [`set_viewport_offset`]: #method.viewport_offset","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":128490,"byte_end":128542,"line_start":299,"line_end":299,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":129051,"byte_end":129061,"line_start":313,"line_end":313,"column_start":12,"column_end":22},"name":"paint_rect","qualname":"<WidgetPod<T, W>>::paint_rect","value":"pub fn paint_rect(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Get the widget's paint [`Rect`].","sig":null,"attributes":[{"value":"/ Get the widget's paint [`Rect`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":128633,"byte_end":128669,"line_start":304,"line_end":304,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":128674,"byte_end":128677,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ This is the [`Rect`] that widget has indicated it needs to paint in.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":128682,"byte_end":128754,"line_start":306,"line_end":306,"column_start":5,"column_end":77}},{"value":"/ This is the same as the [`layout_rect`] with the [`paint_insets`] applied;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":128759,"byte_end":128837,"line_start":307,"line_end":307,"column_start":5,"column_end":83}},{"value":"/ in the general case it is the same as the [`layout_rect`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":128842,"byte_end":128904,"line_start":308,"line_end":308,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":128909,"byte_end":128912,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ [`layout_rect`]: #method.layout_rect","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":128917,"byte_end":128957,"line_start":310,"line_end":310,"column_start":5,"column_end":45}},{"value":"/ [`Rect`]: struct.Rect.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":128962,"byte_end":128992,"line_start":311,"line_end":311,"column_start":5,"column_end":35}},{"value":"/ [`paint_insets`]: #method.paint_insets","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":128997,"byte_end":129039,"line_start":312,"line_end":312,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":129722,"byte_end":129734,"line_start":331,"line_end":331,"column_start":12,"column_end":24},"name":"paint_insets","qualname":"<WidgetPod<T, W>>::paint_insets","value":"pub fn paint_insets(&Self) -> Insets","parent":null,"children":[],"decl_id":null,"docs":" Return the paint [`Insets`] for this widget.","sig":null,"attributes":[{"value":"/ Return the paint [`Insets`] for this widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":129122,"byte_end":129170,"line_start":317,"line_end":317,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":129175,"byte_end":129178,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ If these [`Insets`] are nonzero, they describe the area beyond a widget's","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":129183,"byte_end":129260,"line_start":319,"line_end":319,"column_start":5,"column_end":82}},{"value":"/ layout rect where it needs to paint.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":129265,"byte_end":129305,"line_start":320,"line_end":320,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":129310,"byte_end":129313,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ These are generally zero; exceptions are widgets that do things like","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":129318,"byte_end":129390,"line_start":322,"line_end":322,"column_start":5,"column_end":77}},{"value":"/ paint a drop shadow.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":129395,"byte_end":129419,"line_start":323,"line_end":323,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":129424,"byte_end":129427,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ A widget can set its insets by calling [`set_paint_insets`] during its","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":129432,"byte_end":129506,"line_start":325,"line_end":325,"column_start":5,"column_end":79}},{"value":"/ [`layout`] method.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":129511,"byte_end":129533,"line_start":326,"line_end":326,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":129538,"byte_end":129541,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ [`Insets`]: struct.Insets.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":129546,"byte_end":129580,"line_start":328,"line_end":328,"column_start":5,"column_end":39}},{"value":"/ [`set_paint_insets`]: struct.LayoutCtx.html#method.set_paint_insets","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":129585,"byte_end":129656,"line_start":329,"line_end":329,"column_start":5,"column_end":76}},{"value":"/ [`layout`]: trait.Widget.html#tymethod.layout","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":129661,"byte_end":129710,"line_start":330,"line_end":330,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":130285,"byte_end":130312,"line_start":345,"line_end":345,"column_start":12,"column_end":39},"name":"compute_parent_paint_insets","qualname":"<WidgetPod<T, W>>::compute_parent_paint_insets","value":"pub fn compute_parent_paint_insets(&Self, Size) -> Insets","parent":null,"children":[],"decl_id":null,"docs":" Given a parents layout size, determine the appropriate paint `Insets`\n for the parent.","sig":null,"attributes":[{"value":"/ Given a parents layout size, determine the appropriate paint `Insets`","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":129797,"byte_end":129870,"line_start":335,"line_end":335,"column_start":5,"column_end":78}},{"value":"/ for the parent.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":129875,"byte_end":129894,"line_start":336,"line_end":336,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":129899,"byte_end":129902,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method to be used from the [`layout`] method","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":129907,"byte_end":129977,"line_start":338,"line_end":338,"column_start":5,"column_end":75}},{"value":"/ of a `Widget` that manages a child; it allows the parent to correctly","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":129982,"byte_end":130055,"line_start":339,"line_end":339,"column_start":5,"column_end":78}},{"value":"/ propogate a child's desired paint rect, if it extends beyond the bounds","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":130060,"byte_end":130135,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ of the parent's layout rect.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":130140,"byte_end":130172,"line_start":341,"line_end":341,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":130177,"byte_end":130180,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ [`layout`]: trait.Widget.html#tymethod.layout","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":130185,"byte_end":130234,"line_start":343,"line_end":343,"column_start":5,"column_end":54}},{"value":"/ [`Insets`]: struct.Insets.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":130239,"byte_end":130273,"line_start":344,"line_end":344,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":130611,"byte_end":130626,"line_start":352,"line_end":352,"column_start":12,"column_end":27},"name":"baseline_offset","qualname":"<WidgetPod<T, W>>::baseline_offset","value":"pub fn baseline_offset(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The distance from the bottom of this widget to the baseline.\n","sig":null,"attributes":[{"value":"/ The distance from the bottom of this widget to the baseline.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":130535,"byte_end":130599,"line_start":351,"line_end":351,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":132414,"byte_end":132423,"line_start":405,"line_end":405,"column_start":12,"column_end":21},"name":"paint_raw","qualname":"<WidgetPod<T, W>>::paint_raw","value":"pub fn paint_raw(&mut Self, &mut PaintCtx, &T, &Env)","parent":null,"children":[],"decl_id":null,"docs":" Paint a child widget.","sig":null,"attributes":[{"value":"/ Paint a child widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":131982,"byte_end":132007,"line_start":394,"line_end":394,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":132012,"byte_end":132015,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ Generally called by container widgets as part of their [`Widget::paint`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":132020,"byte_end":132096,"line_start":396,"line_end":396,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":132101,"byte_end":132112,"line_start":397,"line_end":397,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":132117,"byte_end":132120,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ Note that this method does not apply the offset of the layout rect.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":132125,"byte_end":132196,"line_start":399,"line_end":399,"column_start":5,"column_end":76}},{"value":"/ If that is desired, use [`paint`] instead.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":132201,"byte_end":132247,"line_start":400,"line_end":400,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":132252,"byte_end":132255,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ [`layout`]: trait.Widget.html#tymethod.layout","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":132260,"byte_end":132309,"line_start":402,"line_end":402,"column_start":5,"column_end":54}},{"value":"/ [`Widget::paint`]: trait.Widget.html#tymethod.paint","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":132314,"byte_end":132369,"line_start":403,"line_end":403,"column_start":5,"column_end":60}},{"value":"/ [`paint`]: #method.paint","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":132374,"byte_end":132402,"line_start":404,"line_end":404,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":133611,"byte_end":133616,"line_start":438,"line_end":438,"column_start":12,"column_end":17},"name":"paint","qualname":"<WidgetPod<T, W>>::paint","value":"pub fn paint(&mut Self, &mut PaintCtx, &T, &Env)","parent":null,"children":[],"decl_id":null,"docs":" Paint the widget, translating it by the origin of its layout rectangle.","sig":null,"attributes":[{"value":"/ Paint the widget, translating it by the origin of its layout rectangle.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":133384,"byte_end":133459,"line_start":434,"line_end":434,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":133464,"byte_end":133467,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ This will recursively paint widgets, stopping if a widget's layout","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":133472,"byte_end":133542,"line_start":436,"line_end":436,"column_start":5,"column_end":75}},{"value":"/ rect is outside of the currently visible region.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":133547,"byte_end":133599,"line_start":437,"line_end":437,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":133838,"byte_end":133850,"line_start":444,"line_end":444,"column_start":12,"column_end":24},"name":"paint_always","qualname":"<WidgetPod<T, W>>::paint_always","value":"pub fn paint_always(&mut Self, &mut PaintCtx, &T, &Env)","parent":null,"children":[],"decl_id":null,"docs":" Paint the widget, even if its layout rect is outside of the currently\n visible region.\n","sig":null,"attributes":[{"value":"/ Paint the widget, even if its layout rect is outside of the currently","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":133729,"byte_end":133802,"line_start":442,"line_end":442,"column_start":5,"column_end":78}},{"value":"/ visible region.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":133807,"byte_end":133826,"line_start":443,"line_end":443,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":136996,"byte_end":137002,"line_start":521,"line_end":521,"column_start":12,"column_end":18},"name":"layout","qualname":"<WidgetPod<T, W>>::layout","value":"pub fn layout(&mut Self, &mut LayoutCtx, &BoxConstraints, &T, &Env) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Compute layout of a widget.","sig":null,"attributes":[{"value":"/ Compute layout of a widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":136793,"byte_end":136824,"line_start":515,"line_end":515,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":136829,"byte_end":136832,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ Generally called by container widgets as part of their [`layout`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":136837,"byte_end":136906,"line_start":517,"line_end":517,"column_start":5,"column_end":74}},{"value":"/ method.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":136911,"byte_end":136922,"line_start":518,"line_end":518,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":136927,"byte_end":136930,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ [`layout`]: trait.Widget.html#tymethod.layout","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":136935,"byte_end":136984,"line_start":520,"line_end":520,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":139713,"byte_end":139718,"line_start":604,"line_end":604,"column_start":12,"column_end":17},"name":"event","qualname":"<WidgetPod<T, W>>::event","value":"pub fn event(&mut Self, &mut EventCtx, &Event, &mut T, &Env)","parent":null,"children":[],"decl_id":null,"docs":" Propagate an event.","sig":null,"attributes":[{"value":"/ Propagate an event.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":139366,"byte_end":139389,"line_start":596,"line_end":596,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":139394,"byte_end":139397,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ Generally the [`event`] method of a container widget will call this","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":139402,"byte_end":139473,"line_start":598,"line_end":598,"column_start":5,"column_end":76}},{"value":"/ method on all its children. Here is where a great deal of the event","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":139478,"byte_end":139549,"line_start":599,"line_end":599,"column_start":5,"column_end":76}},{"value":"/ flow logic resides, particularly whether to continue propagating","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":139554,"byte_end":139622,"line_start":600,"line_end":600,"column_start":5,"column_end":73}},{"value":"/ the event.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":139627,"byte_end":139641,"line_start":601,"line_end":601,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":139646,"byte_end":139649,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ [`event`]: trait.Widget.html#tymethod.event","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":139654,"byte_end":139701,"line_start":603,"line_end":603,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":149387,"byte_end":149396,"line_start":851,"line_end":851,"column_start":12,"column_end":21},"name":"lifecycle","qualname":"<WidgetPod<T, W>>::lifecycle","value":"pub fn lifecycle(&mut Self, &mut LifeCycleCtx, &LifeCycle, &T, &Env)","parent":null,"children":[],"decl_id":null,"docs":" Propagate a [`LifeCycle`] event.","sig":null,"attributes":[{"value":"/ Propagate a [`LifeCycle`] event.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":149288,"byte_end":149324,"line_start":848,"line_end":848,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":149329,"byte_end":149332,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ [`LifeCycle`]: enum.LifeCycle.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":149337,"byte_end":149375,"line_start":850,"line_end":850,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":154631,"byte_end":154637,"line_start":978,"line_end":978,"column_start":12,"column_end":18},"name":"update","qualname":"<WidgetPod<T, W>>::update","value":"pub fn update(&mut Self, &mut UpdateCtx, &T, &Env)","parent":null,"children":[],"decl_id":null,"docs":" Propagate a data update.","sig":null,"attributes":[{"value":"/ Propagate a data update.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":154431,"byte_end":154459,"line_start":972,"line_end":972,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":154464,"byte_end":154467,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ Generally called by container widgets as part of their [`update`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":154472,"byte_end":154541,"line_start":974,"line_end":974,"column_start":5,"column_end":74}},{"value":"/ method.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":154546,"byte_end":154557,"line_start":975,"line_end":975,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":154562,"byte_end":154565,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ [`update`]: trait.Widget.html#tymethod.update","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":154570,"byte_end":154619,"line_start":977,"line_end":977,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":156012,"byte_end":156017,"line_start":1018,"line_end":1018,"column_start":12,"column_end":17},"name":"boxed","qualname":"<WidgetPod<T, W>>::boxed","value":"pub fn boxed(Self) -> WidgetPod<T, Box<dyn Widget<T>>>","parent":null,"children":[],"decl_id":null,"docs":" Box the contained widget.","sig":null,"attributes":[{"value":"/ Box the contained widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":155844,"byte_end":155873,"line_start":1014,"line_end":1014,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":155878,"byte_end":155881,"line_start":1015,"line_end":1015,"column_start":5,"column_end":8}},{"value":"/ Convert a `WidgetPod` containing a widget of a specific concrete type","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":155886,"byte_end":155959,"line_start":1016,"line_end":1016,"column_start":5,"column_end":78}},{"value":"/ into a dynamically boxed widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":155964,"byte_end":156000,"line_start":1017,"line_end":1017,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":166123,"byte_end":166127,"line_start":107,"line_end":107,"column_start":11,"column_end":15},"name":"Data","qualname":"::data::Data","value":"Data: Clone + 'static","parent":null,"children":[{"krate":0,"index":1094}],"decl_id":null,"docs":" A trait used to represent value types.","sig":null,"attributes":[{"value":"/ A trait used to represent value types.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":163482,"byte_end":163524,"line_start":27,"line_end":27,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":163525,"byte_end":163528,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ These should be cheap to compare and cheap to clone.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":163529,"byte_end":163585,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":163586,"byte_end":163589,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ See <https://sinusoid.es/lager/model.html#id2> for a well-written","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":163590,"byte_end":163659,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ explanation of value types (albeit within a C++ context).","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":163660,"byte_end":163721,"line_start":32,"line_end":32,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":163722,"byte_end":163725,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ## Derive macro","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":163726,"byte_end":163745,"line_start":34,"line_end":34,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":163746,"byte_end":163749,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ In general, you can use `derive` to generate a `Data` impl for your types.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":163750,"byte_end":163828,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":163829,"byte_end":163832,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":163833,"byte_end":163840,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":163841,"byte_end":163866,"line_start":39,"line_end":39,"column_start":1,"column_end":26}},{"value":"/ # use druid::Data;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":163867,"byte_end":163889,"line_start":40,"line_end":40,"column_start":1,"column_end":23}},{"value":"/ #[derive(Clone, Data)]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":163890,"byte_end":163916,"line_start":41,"line_end":41,"column_start":1,"column_end":27}},{"value":"/ enum Foo {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":163917,"byte_end":163931,"line_start":42,"line_end":42,"column_start":1,"column_end":15}},{"value":"/     Case1(i32, f32),","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":163932,"byte_end":163956,"line_start":43,"line_end":43,"column_start":1,"column_end":25}},{"value":"/     Case2 { a: String, b: Arc<i32> }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":163957,"byte_end":163997,"line_start":44,"line_end":44,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":163998,"byte_end":164003,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164004,"byte_end":164011,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164012,"byte_end":164015,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ### Derive macro attributes","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164016,"byte_end":164047,"line_start":48,"line_end":48,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164048,"byte_end":164051,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ There are a number of field attributes available for use with `derive(Data)`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164052,"byte_end":164133,"line_start":50,"line_end":50,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164134,"byte_end":164137,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ - **`#[data(ignore)]`**","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164138,"byte_end":164165,"line_start":52,"line_end":52,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164166,"byte_end":164169,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ Skip this field when computing `same`ness.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164170,"byte_end":164216,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164217,"byte_end":164220,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ If the type you are implementing `Data` on contains some fields that are","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164221,"byte_end":164297,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/ not relevant to the `Data` impl, you can ignore them with this attribute.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164298,"byte_end":164375,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164376,"byte_end":164379,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ - **`#[data(same_fn = \"path\")]`**","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164380,"byte_end":164417,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164418,"byte_end":164421,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Use a specific function to compute `same`ness.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164422,"byte_end":164472,"line_start":61,"line_end":61,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164473,"byte_end":164476,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ By default, derived implementations of `Data` just call [`Data::same`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164477,"byte_end":164551,"line_start":63,"line_end":63,"column_start":1,"column_end":75}},{"value":"/ recursively on each field. With this attribute, you can specify a","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164552,"byte_end":164621,"line_start":64,"line_end":64,"column_start":1,"column_end":70}},{"value":"/ custom function that will be used instead.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164622,"byte_end":164668,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164669,"byte_end":164672,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ This function must have a signature in the form, `fn<T>(&T, &T) -> bool`,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164673,"byte_end":164750,"line_start":67,"line_end":67,"column_start":1,"column_end":78}},{"value":"/ where `T` is the type of the field.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164751,"byte_end":164790,"line_start":68,"line_end":68,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164791,"byte_end":164794,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ## Collection types","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164795,"byte_end":164818,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164819,"byte_end":164822,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ `Data` is not implemented for `std` collection types, because comparing them","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164823,"byte_end":164903,"line_start":72,"line_end":72,"column_start":1,"column_end":81}},{"value":"/ can be expensive. To use collection types with druid, there are two easy options:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164904,"byte_end":164989,"line_start":73,"line_end":73,"column_start":1,"column_end":86}},{"value":"/ either wrap the collection in an `Arc`, or build druid with the `im` feature,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":164990,"byte_end":165071,"line_start":74,"line_end":74,"column_start":1,"column_end":82}},{"value":"/ which adds `Data` implementations to the collections from the [`im` crate],","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165072,"byte_end":165151,"line_start":75,"line_end":75,"column_start":1,"column_end":80}},{"value":"/ a set of immutable data structures that fit nicely with druid.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165152,"byte_end":165218,"line_start":76,"line_end":76,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165219,"byte_end":165222,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ If the `im` feature is used, the `im` crate is reexported from the root","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165223,"byte_end":165298,"line_start":78,"line_end":78,"column_start":1,"column_end":76}},{"value":"/ of the druid crate.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165299,"byte_end":165322,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165323,"byte_end":165326,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ### Example:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165327,"byte_end":165343,"line_start":81,"line_end":81,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165344,"byte_end":165347,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165348,"byte_end":165355,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/ # use std::path::PathBuf;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165356,"byte_end":165385,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/ # use std::time::Instant;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165386,"byte_end":165415,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/ # use druid::Data;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165416,"byte_end":165438,"line_start":86,"line_end":86,"column_start":1,"column_end":23}},{"value":"/ #[derive(Clone, Data)]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165439,"byte_end":165465,"line_start":87,"line_end":87,"column_start":1,"column_end":27}},{"value":"/ struct PathEntry {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165466,"byte_end":165488,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/     // There's no Data impl for PathBuf, but no problem","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165489,"byte_end":165548,"line_start":89,"line_end":89,"column_start":1,"column_end":60}},{"value":"/     #[data(same_fn = \"PartialEq::eq\")]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165549,"byte_end":165591,"line_start":90,"line_end":90,"column_start":1,"column_end":43}},{"value":"/     path: PathBuf,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165592,"byte_end":165614,"line_start":91,"line_end":91,"column_start":1,"column_end":23}},{"value":"/     priority: usize,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165615,"byte_end":165639,"line_start":92,"line_end":92,"column_start":1,"column_end":25}},{"value":"/     // This field is not part of our data model.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165640,"byte_end":165692,"line_start":93,"line_end":93,"column_start":1,"column_end":53}},{"value":"/     #[data(ignore)]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165693,"byte_end":165716,"line_start":94,"line_end":94,"column_start":1,"column_end":24}},{"value":"/     last_read: Instant,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165717,"byte_end":165744,"line_start":95,"line_end":95,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165745,"byte_end":165750,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165751,"byte_end":165758,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165759,"byte_end":165762,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ## C-style enums","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165763,"byte_end":165783,"line_start":99,"line_end":99,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165784,"byte_end":165787,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ In the case of a \"c-style\" enum (one that only contains unit variants,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165788,"byte_end":165862,"line_start":101,"line_end":101,"column_start":1,"column_end":75}},{"value":"/ that is where no variant has fields), the implementation that is generated","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165863,"byte_end":165941,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ checks for equality. Therefore, such types must also implement `PartialEq`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":165942,"byte_end":166021,"line_start":103,"line_end":103,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":166022,"byte_end":166025,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ [`Data::same`]: trait.Data.html#tymethod.same","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":166026,"byte_end":166075,"line_start":105,"line_end":105,"column_start":1,"column_end":50}},{"value":"/ [`im` crate]: https://docs.rs/im","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":166076,"byte_end":166112,"line_start":106,"line_end":106,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":166719,"byte_end":166723,"line_start":119,"line_end":119,"column_start":8,"column_end":12},"name":"same","qualname":"::data::Data::same","value":"pub fn same(&Self, &Self) -> bool","parent":{"krate":0,"index":1093},"children":[],"decl_id":null,"docs":" Determine whether two values are the same.","sig":null,"attributes":[{"value":"/ Determine whether two values are the same.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":166176,"byte_end":166222,"line_start":109,"line_end":109,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":166227,"byte_end":166230,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ This is intended to always be a fast operation. If it returns","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":166235,"byte_end":166300,"line_start":111,"line_end":111,"column_start":5,"column_end":70}},{"value":"/ `true`, the two values *must* be equal, but two equal values","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":166305,"byte_end":166369,"line_start":112,"line_end":112,"column_start":5,"column_end":69}},{"value":"/ need not be considered the same here, as will often be the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":166374,"byte_end":166436,"line_start":113,"line_end":113,"column_start":5,"column_end":67}},{"value":"/ case when two copies are separately allocated.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":166441,"byte_end":166491,"line_start":114,"line_end":114,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":166496,"byte_end":166499,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Note that \"equal\" above has a slightly different meaning than","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":166504,"byte_end":166569,"line_start":116,"line_end":116,"column_start":5,"column_end":70}},{"value":"/ `PartialEq`, for example two floating point NaN values should","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":166574,"byte_end":166639,"line_start":117,"line_end":117,"column_start":5,"column_end":70}},{"value":"/ be considered equal when they have the same bit representation.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":166644,"byte_end":166711,"line_start":118,"line_end":118,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":6396},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":183900,"byte_end":183917,"line_start":115,"line_end":115,"column_start":12,"column_end":29},"name":"FileDialogOptions","qualname":"::dialog::FileDialogOptions","value":"FileDialogOptions {  }","parent":null,"children":[{"krate":0,"index":6397},{"krate":0,"index":6398},{"krate":0,"index":6399}],"decl_id":null,"docs":" Options for file dialogs.","sig":null,"attributes":[{"value":"/ Options for file dialogs.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":178530,"byte_end":178559,"line_start":26,"line_end":26,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":178560,"byte_end":178563,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ File dialogs let the user choose a specific path to open or save.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":178564,"byte_end":178633,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":178634,"byte_end":178637,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ By default the file dialogs operate in *files mode* where the user can only choose files.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":178638,"byte_end":178731,"line_start":30,"line_end":30,"column_start":1,"column_end":94}},{"value":"/ Importantly these are files from the user's perspective, but technically the returned path","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":178732,"byte_end":178826,"line_start":31,"line_end":31,"column_start":1,"column_end":95}},{"value":"/ will be a directory when the user chooses a package. You can read more about [packages] below.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":178827,"byte_end":178925,"line_start":32,"line_end":32,"column_start":1,"column_end":99}},{"value":"/ It's also possible for users to manually specify a path which they might otherwise not be able","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":178926,"byte_end":179024,"line_start":33,"line_end":33,"column_start":1,"column_end":99}},{"value":"/ to choose. Thus it is important to verify that all the returned paths match your expectations.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":179025,"byte_end":179123,"line_start":34,"line_end":34,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":179124,"byte_end":179127,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The open dialog can also be switched to *directories mode* via [`select_directories`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":179128,"byte_end":179218,"line_start":36,"line_end":36,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":179219,"byte_end":179222,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Cross-platform compatibility","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":179223,"byte_end":179257,"line_start":38,"line_end":38,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":179258,"byte_end":179261,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ You could write platform specific code that really makes the best use of each platform.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":179262,"byte_end":179353,"line_start":40,"line_end":40,"column_start":1,"column_end":92}},{"value":"/ However if you want to write universal code that will work on all platforms then","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":179354,"byte_end":179438,"line_start":41,"line_end":41,"column_start":1,"column_end":85}},{"value":"/ you have to keep some restrictions in mind.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":179439,"byte_end":179486,"line_start":42,"line_end":42,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":179487,"byte_end":179490,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ## Don't depend on directories with extensions","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":179491,"byte_end":179541,"line_start":44,"line_end":44,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":179542,"byte_end":179545,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Your application should avoid having to deal with directories that have extensions","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":179546,"byte_end":179632,"line_start":46,"line_end":46,"column_start":1,"column_end":87}},{"value":"/ in their name, e.g. `my_stuff.pkg`. This clashes with [packages] on macOS and you","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":179633,"byte_end":179718,"line_start":47,"line_end":47,"column_start":1,"column_end":86}},{"value":"/ will either need platform specific code or a degraded user experience on macOS","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":179719,"byte_end":179801,"line_start":48,"line_end":48,"column_start":1,"column_end":83}},{"value":"/ via [`packages_as_directories`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":179802,"byte_end":179838,"line_start":49,"line_end":49,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":179839,"byte_end":179842,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ## Use the save dialog only for new paths","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":179843,"byte_end":179888,"line_start":51,"line_end":51,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":179889,"byte_end":179892,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Don't direct the user to choose an existing file with the save dialog.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":179893,"byte_end":179967,"line_start":53,"line_end":53,"column_start":1,"column_end":75}},{"value":"/ Selecting existing files for overwriting is possible but extremely cumbersome on macOS.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":179968,"byte_end":180059,"line_start":54,"line_end":54,"column_start":1,"column_end":92}},{"value":"/ The much more optimized flow is to have the user select a file with the open dialog","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":180060,"byte_end":180147,"line_start":55,"line_end":55,"column_start":1,"column_end":88}},{"value":"/ and then keep saving to that file without showing a save dialog.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":180148,"byte_end":180216,"line_start":56,"line_end":56,"column_start":1,"column_end":69}},{"value":"/ Use the save dialog only for selecting a new location.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":180217,"byte_end":180275,"line_start":57,"line_end":57,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":180276,"byte_end":180279,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # macOS","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":180280,"byte_end":180291,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":180292,"byte_end":180295,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ The file dialog works a bit differently on macOS. For a lot of applications this doesn't matter","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":180296,"byte_end":180395,"line_start":61,"line_end":61,"column_start":1,"column_end":100}},{"value":"/ and you don't need to know the details. However if your application makes extensive use","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":180396,"byte_end":180487,"line_start":62,"line_end":62,"column_start":1,"column_end":92}},{"value":"/ of file dialogs and you target macOS then you should understand the macOS specifics.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":180488,"byte_end":180576,"line_start":63,"line_end":63,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":180577,"byte_end":180580,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ## Packages","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":180581,"byte_end":180596,"line_start":65,"line_end":65,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":180597,"byte_end":180600,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ On macOS directories with known extensions are considered to be packages, e.g. `app_files.pkg`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":180601,"byte_end":180700,"line_start":67,"line_end":67,"column_start":1,"column_end":100}},{"value":"/ Furthermore the packages are divided into two groups based on their extension.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":180701,"byte_end":180783,"line_start":68,"line_end":68,"column_start":1,"column_end":83}},{"value":"/ First there are packages that have been defined at the OS level, and secondly there are","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":180784,"byte_end":180875,"line_start":69,"line_end":69,"column_start":1,"column_end":92}},{"value":"/ packages that are defined at the file dialog level based on [`allowed_types`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":180876,"byte_end":180958,"line_start":70,"line_end":70,"column_start":1,"column_end":83}},{"value":"/ These two types have slightly different behavior in the file dialogs. Generally packages","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":180959,"byte_end":181051,"line_start":71,"line_end":71,"column_start":1,"column_end":93}},{"value":"/ behave similarly to regular files in many contexts, including the file dialogs.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":181052,"byte_end":181135,"line_start":72,"line_end":72,"column_start":1,"column_end":84}},{"value":"/ This package concept can be turned off in the file dialog via [`packages_as_directories`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":181136,"byte_end":181230,"line_start":73,"line_end":73,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":181231,"byte_end":181234,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ &#xFEFF; | Packages as files. File filters apply to packages. | Packages as directories.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":181235,"byte_end":181327,"line_start":75,"line_end":75,"column_start":1,"column_end":93}},{"value":"/ -------- | -------------------------------------------------- | ------------------------","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":181328,"byte_end":181420,"line_start":76,"line_end":76,"column_start":1,"column_end":93}},{"value":"/ Open directory | Not selectable. Not traversable. | Selectable. Traversable.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":181421,"byte_end":181501,"line_start":77,"line_end":77,"column_start":1,"column_end":81}},{"value":"/ Open file | Selectable. Not traversable. | Not selectable. Traversable.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":181502,"byte_end":181577,"line_start":78,"line_end":78,"column_start":1,"column_end":76}},{"value":"/ Save file | OS packages [clickable] but not traversable.<br/>Dialog packages traversable but not selectable. | Not selectable. Traversable.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":181578,"byte_end":181721,"line_start":79,"line_end":79,"column_start":1,"column_end":144}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":181722,"byte_end":181725,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ Keep in mind that the file dialog may start inside any package if the user has traversed","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":181726,"byte_end":181818,"line_start":81,"line_end":81,"column_start":1,"column_end":93}},{"value":"/ into one just recently. The user might also manually specify a path inside a package.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":181819,"byte_end":181908,"line_start":82,"line_end":82,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":181909,"byte_end":181912,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Generally this behavior should be kept, because it's least surprising to macOS users.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":181913,"byte_end":182002,"line_start":84,"line_end":84,"column_start":1,"column_end":90}},{"value":"/ However if your application requires selecting directories with extensions as directories","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":182003,"byte_end":182096,"line_start":85,"line_end":85,"column_start":1,"column_end":94}},{"value":"/ or the user needs to be able to traverse into them to select a specific file,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":182097,"byte_end":182178,"line_start":86,"line_end":86,"column_start":1,"column_end":82}},{"value":"/ then you can change the default behavior via [`packages_as_directories`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":182179,"byte_end":182255,"line_start":87,"line_end":87,"column_start":1,"column_end":77}},{"value":"/ to force macOS to behave like other platforms and not give special treatment to packages.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":182256,"byte_end":182349,"line_start":88,"line_end":88,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":182350,"byte_end":182353,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ## Selecting files for overwriting in the save dialog is cumbersome","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":182354,"byte_end":182425,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":182426,"byte_end":182429,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ Existing files can be clicked on in the save dialog, but that only copies their base file name.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":182430,"byte_end":182529,"line_start":92,"line_end":92,"column_start":1,"column_end":100}},{"value":"/ If the clicked file's extension is different than the first extension of the default type","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":182530,"byte_end":182623,"line_start":93,"line_end":93,"column_start":1,"column_end":94}},{"value":"/ then the returned path does not actually match the path of the file that was clicked on.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":182624,"byte_end":182716,"line_start":94,"line_end":94,"column_start":1,"column_end":93}},{"value":"/ Clicking on a file doesn't change the base path either. Keep in mind that the macOS file dialog","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":182717,"byte_end":182816,"line_start":95,"line_end":95,"column_start":1,"column_end":100}},{"value":"/ can have several directories open at once. So if a user has traversed into `/Users/Joe/foo/`","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":182817,"byte_end":182913,"line_start":96,"line_end":96,"column_start":1,"column_end":97}},{"value":"/ and then clicks on an existing file `/Users/Joe/old.txt` in another directory then the returned","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":182914,"byte_end":183013,"line_start":97,"line_end":97,"column_start":1,"column_end":100}},{"value":"/ path will actually be `/Users/Joe/foo/old.rtf` if the default type's first extension is `rtf`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":183014,"byte_end":183112,"line_start":98,"line_end":98,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":183113,"byte_end":183116,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ## Have a really good save dialog default type","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":183117,"byte_end":183167,"line_start":100,"line_end":100,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":183168,"byte_end":183171,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ There is no way for the user to choose which extension they want to save a file as via the UI.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":183172,"byte_end":183270,"line_start":102,"line_end":102,"column_start":1,"column_end":99}},{"value":"/ They have no way of knowing which extensions are even supported and must manually type it out.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":183271,"byte_end":183369,"line_start":103,"line_end":103,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":183370,"byte_end":183373,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ *Hopefully it's a temporary problem and we can find a way to show the file formats in the UI.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":183374,"byte_end":183471,"line_start":105,"line_end":105,"column_start":1,"column_end":98}},{"value":"/ This is being tracked in [druid#998].*","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":183472,"byte_end":183514,"line_start":106,"line_end":106,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":183515,"byte_end":183518,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [clickable]: #selecting-files-for-overwriting-in-the-save-dialog-is-cumbersome","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":183519,"byte_end":183601,"line_start":108,"line_end":108,"column_start":1,"column_end":83}},{"value":"/ [packages]: #packages","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":183602,"byte_end":183627,"line_start":109,"line_end":109,"column_start":1,"column_end":26}},{"value":"/ [`select_directories`]: #method.select_directories","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":183628,"byte_end":183682,"line_start":110,"line_end":110,"column_start":1,"column_end":55}},{"value":"/ [`allowed_types`]: #method.allowed_types","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":183683,"byte_end":183727,"line_start":111,"line_end":111,"column_start":1,"column_end":45}},{"value":"/ [`packages_as_directories`]: #method.packages_as_directories","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":183728,"byte_end":183792,"line_start":112,"line_end":112,"column_start":1,"column_end":65}},{"value":"/ [druid#998]: https://github.com/xi-editor/druid/issues/998","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":183793,"byte_end":183855,"line_start":113,"line_end":113,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1219},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":184134,"byte_end":184137,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"new","qualname":"<FileDialogOptions>::new","value":"pub fn new() -> FileDialogOptions","parent":null,"children":[],"decl_id":null,"docs":" Create a new set of options.\n","sig":null,"attributes":[{"value":"/ Create a new set of options.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":184090,"byte_end":184122,"line_start":122,"line_end":122,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1220},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":184274,"byte_end":184285,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"show_hidden","qualname":"<FileDialogOptions>::show_hidden","value":"pub fn show_hidden(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set hidden files and directories to be visible.\n","sig":null,"attributes":[{"value":"/ Set hidden files and directories to be visible.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":184211,"byte_end":184262,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1221},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":184495,"byte_end":184513,"line_start":136,"line_end":136,"column_start":12,"column_end":30},"name":"select_directories","qualname":"<FileDialogOptions>::select_directories","value":"pub fn select_directories(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set directories to be selectable instead of files.","sig":null,"attributes":[{"value":"/ Set directories to be selectable instead of files.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":184373,"byte_end":184427,"line_start":133,"line_end":133,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":184432,"byte_end":184435,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ This is only relevant for open dialogs.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":184440,"byte_end":184483,"line_start":135,"line_end":135,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1222},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":184878,"byte_end":184901,"line_start":148,"line_end":148,"column_start":12,"column_end":35},"name":"packages_as_directories","qualname":"<FileDialogOptions>::packages_as_directories","value":"pub fn packages_as_directories(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set [packages] to be treated as directories instead of files.","sig":null,"attributes":[{"value":"/ Set [packages] to be treated as directories instead of files.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":184608,"byte_end":184673,"line_start":141,"line_end":141,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":184678,"byte_end":184681,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This allows for writing more universal cross-platform code at the cost of user experience.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":184686,"byte_end":184780,"line_start":143,"line_end":143,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":184785,"byte_end":184788,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ This is only relevant on macOS.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":184793,"byte_end":184828,"line_start":145,"line_end":145,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":184833,"byte_end":184836,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ [packages]: #packages","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":184841,"byte_end":184866,"line_start":147,"line_end":147,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1223},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":185109,"byte_end":185124,"line_start":156,"line_end":156,"column_start":12,"column_end":27},"name":"multi_selection","qualname":"<FileDialogOptions>::multi_selection","value":"pub fn multi_selection(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set multiple items to be selectable.","sig":null,"attributes":[{"value":"/ Set multiple items to be selectable.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":185001,"byte_end":185041,"line_start":153,"line_end":153,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":185046,"byte_end":185049,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This is only relevant for open dialogs.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":185054,"byte_end":185097,"line_start":155,"line_end":155,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1224},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":185754,"byte_end":185767,"line_start":174,"line_end":174,"column_start":12,"column_end":25},"name":"allowed_types","qualname":"<FileDialogOptions>::allowed_types","value":"pub fn allowed_types(Self, Vec<FileSpec>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the file types the user is allowed to select.","sig":null,"attributes":[{"value":"/ Set the file types the user is allowed to select.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":185216,"byte_end":185269,"line_start":161,"line_end":161,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":185274,"byte_end":185277,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This filter is only applied to files and [packages], but not to directories.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":185282,"byte_end":185362,"line_start":163,"line_end":163,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":185367,"byte_end":185370,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ An empty collection is treated as no filter.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":185375,"byte_end":185423,"line_start":165,"line_end":165,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":185428,"byte_end":185431,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # macOS","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":185436,"byte_end":185447,"line_start":167,"line_end":167,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":185452,"byte_end":185455,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ These file types also apply to directories to define [packages].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":185460,"byte_end":185528,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ Which means the directories that match the filter are no longer considered directories.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":185533,"byte_end":185624,"line_start":170,"line_end":170,"column_start":5,"column_end":96}},{"value":"/ The packages are defined by this collection even in *directories mode*.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":185629,"byte_end":185704,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":185709,"byte_end":185712,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ [packages]: #packages","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":185717,"byte_end":185742,"line_start":173,"line_end":173,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1225},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":186227,"byte_end":186239,"line_start":188,"line_end":188,"column_start":12,"column_end":24},"name":"default_type","qualname":"<FileDialogOptions>::default_type","value":"pub fn default_type(Self, FileSpec) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the default file type.","sig":null,"attributes":[{"value":"/ Set the default file type.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":185884,"byte_end":185914,"line_start":179,"line_end":179,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":185919,"byte_end":185922,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ The provided `default_type` must also be present in [`allowed_types`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":185927,"byte_end":186001,"line_start":181,"line_end":181,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":186006,"byte_end":186009,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ If it's `None` then the first entry in [`allowed_types`] will be used as the default.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":186014,"byte_end":186103,"line_start":183,"line_end":183,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":186108,"byte_end":186111,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ This is only relevant in *files mode*.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":186116,"byte_end":186158,"line_start":185,"line_end":185,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":186163,"byte_end":186166,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ [`allowed_types`]: #method.allowed_types","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":186171,"byte_end":186215,"line_start":187,"line_end":187,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1226},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":186432,"byte_end":186444,"line_start":194,"line_end":194,"column_start":12,"column_end":24},"name":"default_name","qualname":"<FileDialogOptions>::default_name","value":"pub fn default_name<impl Into<String>: Into<String>>(Self, impl Into<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the default filename that appears in the dialog.\n","sig":null,"attributes":[{"value":"/ Set the default filename that appears in the dialog.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":186364,"byte_end":186420,"line_start":193,"line_end":193,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":186649,"byte_end":186659,"line_start":200,"line_end":200,"column_start":12,"column_end":22},"name":"name_label","qualname":"<FileDialogOptions>::name_label","value":"pub fn name_label<impl Into<String>: Into<String>>(Self, impl Into<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the text in the label next to the filename editbox.\n","sig":null,"attributes":[{"value":"/ Set the text in the label next to the filename editbox.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":186578,"byte_end":186637,"line_start":199,"line_end":199,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":186836,"byte_end":186841,"line_start":206,"line_end":206,"column_start":12,"column_end":17},"name":"title","qualname":"<FileDialogOptions>::title","value":"pub fn title<impl Into<String>: Into<String>>(Self, impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the title text of the dialog.\n","sig":null,"attributes":[{"value":"/ Set the title text of the dialog.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":186787,"byte_end":186824,"line_start":205,"line_end":205,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":187007,"byte_end":187018,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"button_text","qualname":"<FileDialogOptions>::button_text","value":"pub fn button_text<impl Into<String>: Into<String>>(Self, impl Into<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the text of the Open/Save button.\n","sig":null,"attributes":[{"value":"/ Set the text of the Open/Save button.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":186954,"byte_end":186995,"line_start":211,"line_end":211,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":187397,"byte_end":187421,"line_start":223,"line_end":223,"column_start":12,"column_end":36},"name":"force_starting_directory","qualname":"<FileDialogOptions>::force_starting_directory","value":"pub fn force_starting_directory<impl Into<PathBuf>: Into<PathBuf>>(Self,\nimpl Into<PathBuf>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Force the starting directory to the specified `path`.","sig":null,"attributes":[{"value":"/ Force the starting directory to the specified `path`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":187135,"byte_end":187192,"line_start":217,"line_end":217,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":187197,"byte_end":187200,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # User experience","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":187205,"byte_end":187226,"line_start":219,"line_end":219,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":187231,"byte_end":187234,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ This should almost never be used because it overrides the OS choice,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":187239,"byte_end":187311,"line_start":221,"line_end":221,"column_start":5,"column_end":77}},{"value":"/ which will usually be a directory that the user recently visited.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":187316,"byte_end":187385,"line_start":222,"line_end":222,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":187977,"byte_end":187991,"line_start":236,"line_end":236,"column_start":12,"column_end":26},"name":"accept_command","qualname":"<FileDialogOptions>::accept_command","value":"pub fn accept_command(Self, Selector<FileInfo>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a custom command to use when the file dialog succeeds.","sig":null,"attributes":[{"value":"/ Sets a custom command to use when the file dialog succeeds.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":187552,"byte_end":187615,"line_start":228,"line_end":228,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":187620,"byte_end":187623,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ By default, an \"open\" dialog sends the [`OPEN_FILE`] command when it succeeds, and a \"save\"","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":187628,"byte_end":187723,"line_start":230,"line_end":230,"column_start":5,"column_end":100}},{"value":"/ dialog sends the [`SAVE_FILE_AS`] command. Using this method, you can configure a different","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":187728,"byte_end":187823,"line_start":231,"line_end":231,"column_start":5,"column_end":100}},{"value":"/ command to be used.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":187828,"byte_end":187851,"line_start":232,"line_end":232,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":187856,"byte_end":187859,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ [`OPEN_FILE`]: crate::commands::OPEN_FILE","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":187864,"byte_end":187909,"line_start":234,"line_end":234,"column_start":5,"column_end":50}},{"value":"/ [`SAVE_FILE_AS`]: crate::commands::SAVE_FILE_AS","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":187914,"byte_end":187965,"line_start":235,"line_end":235,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":188588,"byte_end":188602,"line_start":249,"line_end":249,"column_start":12,"column_end":26},"name":"cancel_command","qualname":"<FileDialogOptions>::cancel_command","value":"pub fn cancel_command(Self, Selector<()>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a custom command to use when the file dialog is cancelled.","sig":null,"attributes":[{"value":"/ Sets a custom command to use when the file dialog is cancelled.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":188098,"byte_end":188165,"line_start":241,"line_end":241,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":188170,"byte_end":188173,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ By default, an \"open\" dialog sends the [`OPEN_PANEL_CANCELLED`] command when it is cancelled, and a \"save\"","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":188178,"byte_end":188288,"line_start":243,"line_end":243,"column_start":5,"column_end":115}},{"value":"/ dialog sends the [`SAVE_PANEL_CANCELLED`] command. Using this method, you can configure a different","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":188293,"byte_end":188396,"line_start":244,"line_end":244,"column_start":5,"column_end":108}},{"value":"/ command to be used.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":188401,"byte_end":188424,"line_start":245,"line_end":245,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":188429,"byte_end":188432,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ [`OPEN_PANEL_CANCELLED`]: crate::commands::OPEN_PANEL_CANCELLED","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":188437,"byte_end":188504,"line_start":247,"line_end":247,"column_start":5,"column_end":72}},{"value":"/ [`SAVE_PANEL_CANCELLED`]: crate::commands::SAVE_PANEL_CANCELLED","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":188509,"byte_end":188576,"line_start":248,"line_end":248,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":6406},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":190658,"byte_end":190661,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"Env","qualname":"::env::Env","value":"","parent":null,"children":[],"decl_id":null,"docs":" An environment passed down through all widget traversals.","sig":null,"attributes":[{"value":"/ An environment passed down through all widget traversals.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":189673,"byte_end":189734,"line_start":29,"line_end":29,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":189735,"byte_end":189738,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ All widget methods have access to an environment, and it is passed","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":189739,"byte_end":189809,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ downwards during traversals.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":189810,"byte_end":189842,"line_start":32,"line_end":32,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":189843,"byte_end":189846,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ A widget can retrieve theme parameters (colors, dimensions, etc.). In","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":189847,"byte_end":189920,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ addition, it can pass custom data down to all descendants. An important","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":189921,"byte_end":189996,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/ example of the latter is setting a value for enabled/disabled status","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":189997,"byte_end":190069,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ so that an entire subtree can be disabled (\"grayed out\") with one","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":190070,"byte_end":190139,"line_start":37,"line_end":37,"column_start":1,"column_end":70}},{"value":"/ setting.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":190140,"byte_end":190152,"line_start":38,"line_end":38,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":190153,"byte_end":190156,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`EnvScope`] can be used to override parts of `Env` for its descendants.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":190157,"byte_end":190233,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":190234,"byte_end":190237,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Important","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":190238,"byte_end":190253,"line_start":42,"line_end":42,"column_start":1,"column_end":16}},{"value":"/ It is the programmer's responsibility to ensure that the environment","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":190254,"byte_end":190326,"line_start":43,"line_end":43,"column_start":1,"column_end":73}},{"value":"/ is used correctly. See [`Key`] for an example.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":190327,"byte_end":190377,"line_start":44,"line_end":44,"column_start":1,"column_end":51}},{"value":"/ - [`Key`]s should be `const`s with unique names","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":190378,"byte_end":190429,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ - [`Key`]s must always be set before they are used.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":190430,"byte_end":190485,"line_start":46,"line_end":46,"column_start":1,"column_end":56}},{"value":"/ - Values can only be overwritten by values of the same type.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":190486,"byte_end":190550,"line_start":47,"line_end":47,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":190551,"byte_end":190554,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ [`EnvScope`]: widget/struct.EnvScope.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":190555,"byte_end":190600,"line_start":49,"line_end":49,"column_start":1,"column_end":46}},{"value":"/ [`Key`]: struct.Key.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":190601,"byte_end":190629,"line_start":50,"line_end":50,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":6417},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":191801,"byte_end":191804,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"Key","qualname":"::env::Key","value":"Key {  }","parent":null,"children":[{"krate":0,"index":6419},{"krate":0,"index":6420}],"decl_id":null,"docs":" A typed [`Env`] key.","sig":null,"attributes":[{"value":"/ A typed [`Env`] key.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":190806,"byte_end":190830,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":190831,"byte_end":190834,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This lets you retrieve values of a given type. The parameter","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":190835,"byte_end":190899,"line_start":63,"line_end":63,"column_start":1,"column_end":65}},{"value":"/ implements [`ValueType`]. For \"expensive\" types, this is a reference,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":190900,"byte_end":190973,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ so the type for a string is `Key<&str>`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":190974,"byte_end":191018,"line_start":65,"line_end":65,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":191019,"byte_end":191022,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":191023,"byte_end":191037,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":191038,"byte_end":191041,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":191042,"byte_end":191049,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/# use druid::{Key, Color, WindowDesc, AppLauncher, widget::Label};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":191050,"byte_end":191119,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/ const IMPORTANT_LABEL_COLOR: Key<Color> = Key::new(\"org.linebender.example.important-label-color\");","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":191120,"byte_end":191223,"line_start":71,"line_end":71,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":191224,"byte_end":191227,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ fn important_label() -> Label<()> {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":191228,"byte_end":191267,"line_start":73,"line_end":73,"column_start":1,"column_end":40}},{"value":"/     Label::new(\"Warning!\").with_text_color(IMPORTANT_LABEL_COLOR)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":191268,"byte_end":191337,"line_start":74,"line_end":74,"column_start":1,"column_end":70}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":191338,"byte_end":191343,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":191344,"byte_end":191347,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":191348,"byte_end":191363,"line_start":77,"line_end":77,"column_start":1,"column_end":16}},{"value":"/     let main_window = WindowDesc::new(important_label);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":191364,"byte_end":191423,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":191424,"byte_end":191427,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/     AppLauncher::with_window(main_window)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":191428,"byte_end":191473,"line_start":80,"line_end":80,"column_start":1,"column_end":46}},{"value":"/         .configure_env(|env, _state| {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":191474,"byte_end":191516,"line_start":81,"line_end":81,"column_start":1,"column_end":43}},{"value":"/             // The `Key` must be set before it is used.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":191517,"byte_end":191576,"line_start":82,"line_end":82,"column_start":1,"column_end":60}},{"value":"/             env.set(IMPORTANT_LABEL_COLOR, Color::rgb(1.0, 0.0, 0.0));","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":191577,"byte_end":191651,"line_start":83,"line_end":83,"column_start":1,"column_end":75}},{"value":"/         });","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":191652,"byte_end":191667,"line_start":84,"line_end":84,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":191668,"byte_end":191673,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":191674,"byte_end":191681,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":191682,"byte_end":191685,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [`ValueType`]: trait.ValueType.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":191686,"byte_end":191725,"line_start":88,"line_end":88,"column_start":1,"column_end":40}},{"value":"/ [`Env`]: struct.Env.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":191726,"byte_end":191754,"line_start":89,"line_end":89,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6434},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192221,"byte_end":192226,"line_start":104,"line_end":104,"column_start":5,"column_end":10},"name":"Point","qualname":"::env::Value::Point","value":"Value::Point(Point)","parent":{"krate":0,"index":6433},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6437},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192239,"byte_end":192243,"line_start":105,"line_end":105,"column_start":5,"column_end":9},"name":"Size","qualname":"::env::Value::Size","value":"Value::Size(Size)","parent":{"krate":0,"index":6433},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6440},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192255,"byte_end":192259,"line_start":106,"line_end":106,"column_start":5,"column_end":9},"name":"Rect","qualname":"::env::Value::Rect","value":"Value::Rect(Rect)","parent":{"krate":0,"index":6433},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6443},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192271,"byte_end":192277,"line_start":107,"line_end":107,"column_start":5,"column_end":11},"name":"Insets","qualname":"::env::Value::Insets","value":"Value::Insets(Insets)","parent":{"krate":0,"index":6433},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6446},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192291,"byte_end":192296,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"Color","qualname":"::env::Value::Color","value":"Value::Color(Color)","parent":{"krate":0,"index":6433},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6449},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192309,"byte_end":192314,"line_start":109,"line_end":109,"column_start":5,"column_end":10},"name":"Float","qualname":"::env::Value::Float","value":"Value::Float(f64)","parent":{"krate":0,"index":6433},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6452},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192325,"byte_end":192329,"line_start":110,"line_end":110,"column_start":5,"column_end":9},"name":"Bool","qualname":"::env::Value::Bool","value":"Value::Bool(bool)","parent":{"krate":0,"index":6433},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6455},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192341,"byte_end":192352,"line_start":111,"line_end":111,"column_start":5,"column_end":16},"name":"UnsignedInt","qualname":"::env::Value::UnsignedInt","value":"Value::UnsignedInt(u64)","parent":{"krate":0,"index":6433},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6458},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192363,"byte_end":192369,"line_start":112,"line_end":112,"column_start":5,"column_end":11},"name":"String","qualname":"::env::Value::String","value":"Value::String(ArcStr)","parent":{"krate":0,"index":6433},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6461},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192383,"byte_end":192387,"line_start":113,"line_end":113,"column_start":5,"column_end":9},"name":"Font","qualname":"::env::Value::Font","value":"Value::Font(FontDescriptor)","parent":{"krate":0,"index":6433},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6433},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192209,"byte_end":192214,"line_start":103,"line_end":103,"column_start":10,"column_end":15},"name":"Value","qualname":"::env::Value","value":"pub enum Value {\n    Point(Point),\n    Size(Size),\n    Rect(Rect),\n    Insets(Insets),\n    Color(Color),\n    Float(f64),\n    Bool(bool),\n    UnsignedInt(u64),\n    String(ArcStr),\n    Font(FontDescriptor),\n}","parent":null,"children":[{"krate":0,"index":6434},{"krate":0,"index":6437},{"krate":0,"index":6440},{"krate":0,"index":6443},{"krate":0,"index":6446},{"krate":0,"index":6449},{"krate":0,"index":6452},{"krate":0,"index":6455},{"krate":0,"index":6458},{"krate":0,"index":6461}],"decl_id":null,"docs":" A dynamic type representing all values that can be stored in an environment.\n","sig":null,"attributes":[{"value":"/ A dynamic type representing all values that can be stored in an environment.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192040,"byte_end":192120,"line_start":99,"line_end":99,"column_start":1,"column_end":81}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192155,"byte_end":192177,"line_start":101,"line_end":101,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6474},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192867,"byte_end":192875,"line_start":129,"line_end":129,"column_start":5,"column_end":13},"name":"Concrete","qualname":"::env::KeyOrValue::Concrete","value":"KeyOrValue::Concrete(T)","parent":{"krate":0,"index":6472},"children":[],"decl_id":null,"docs":" A concrete [`Value`] of type `T`.","sig":null,"attributes":[{"value":"/ A concrete [`Value`] of type `T`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192782,"byte_end":192819,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192824,"byte_end":192827,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`Value`]: enum.Value.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192832,"byte_end":192862,"line_start":128,"line_end":128,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6477},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":193030,"byte_end":193033,"line_start":134,"line_end":134,"column_start":5,"column_end":8},"name":"Key","qualname":"::env::KeyOrValue::Key","value":"KeyOrValue::Key(Key<T>)","parent":{"krate":0,"index":6472},"children":[],"decl_id":null,"docs":" A [`Key<T>`] that can be resolved to a value in the [`Env`].","sig":null,"attributes":[{"value":"/ A [`Key<T>`] that can be resolved to a value in the [`Env`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192884,"byte_end":192948,"line_start":130,"line_end":130,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192953,"byte_end":192956,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [`Key<T>`]: struct.Key.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192961,"byte_end":192992,"line_start":132,"line_end":132,"column_start":5,"column_end":36}},{"value":"/ [`Env`]: struct.Env.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192997,"byte_end":193025,"line_start":133,"line_end":133,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":6472},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192762,"byte_end":192772,"line_start":125,"line_end":125,"column_start":10,"column_end":20},"name":"KeyOrValue","qualname":"::env::KeyOrValue","value":"pub enum KeyOrValue<T> { Concrete(T), Key(Key<T>), }","parent":null,"children":[{"krate":0,"index":6474},{"krate":0,"index":6477}],"decl_id":null,"docs":" Either a concrete `T` or a [`Key<T>`] that can be resolved in the [`Env`].","sig":null,"attributes":[{"value":"/ Either a concrete `T` or a [`Key<T>`] that can be resolved in the [`Env`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192434,"byte_end":192512,"line_start":117,"line_end":117,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192513,"byte_end":192516,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ This is a way to allow widgets to interchangeably use either a specific","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192517,"byte_end":192592,"line_start":119,"line_end":119,"column_start":1,"column_end":76}},{"value":"/ value or a value from the environment for some purpose.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192593,"byte_end":192652,"line_start":120,"line_end":120,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192653,"byte_end":192656,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ [`Key<T>`]: struct.Key.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192657,"byte_end":192688,"line_start":122,"line_end":122,"column_start":1,"column_end":32}},{"value":"/ [`Env`]: struct.Env.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":192689,"byte_end":192717,"line_start":123,"line_end":123,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":1292},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":193382,"byte_end":193389,"line_start":144,"line_end":144,"column_start":11,"column_end":18},"name":"KeyLike","qualname":"::env::KeyLike","value":"KeyLike<T>","parent":null,"children":[{"krate":0,"index":1294}],"decl_id":null,"docs":" A trait for anything that can resolve a value of some type from the [`Env`].","sig":null,"attributes":[{"value":"/ A trait for anything that can resolve a value of some type from the [`Env`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":193046,"byte_end":193126,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":193127,"byte_end":193130,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This is a generalization of the idea of [`KeyOrValue`], mostly motivated","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":193131,"byte_end":193207,"line_start":139,"line_end":139,"column_start":1,"column_end":77}},{"value":"/ by wanting to improve the API used for checking if items in the [`Env`] have changed.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":193208,"byte_end":193297,"line_start":140,"line_end":140,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":193298,"byte_end":193301,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ [`Env`]: struct.Env.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":193302,"byte_end":193330,"line_start":142,"line_end":142,"column_start":1,"column_end":29}},{"value":"/ [`KeyOrValue`]: enum.KeyOrValue.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":193331,"byte_end":193371,"line_start":143,"line_end":143,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":193524,"byte_end":193531,"line_start":148,"line_end":148,"column_start":8,"column_end":15},"name":"changed","qualname":"::env::KeyLike::changed","value":"pub fn changed(&Self, &Env, &Env) -> bool","parent":{"krate":0,"index":1292},"children":[],"decl_id":null,"docs":" Returns `true` if this item has changed between the old and new [`Env`].","sig":null,"attributes":[{"value":"/ Returns `true` if this item has changed between the old and new [`Env`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":193399,"byte_end":193475,"line_start":145,"line_end":145,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":193480,"byte_end":193483,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ [`Env`]: struct.Env.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":193488,"byte_end":193516,"line_start":147,"line_end":147,"column_start":5,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":1301},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":194063,"byte_end":194072,"line_start":167,"line_end":167,"column_start":11,"column_end":20},"name":"ValueType","qualname":"::env::ValueType","value":"ValueType: Sized + Clone + Into<Value>","parent":null,"children":[{"krate":0,"index":1302}],"decl_id":null,"docs":" Values which can be stored in an environment.\n","sig":null,"attributes":[{"value":"/ Values which can be stored in an environment.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":194003,"byte_end":194052,"line_start":166,"line_end":166,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":194174,"byte_end":194188,"line_start":169,"line_end":169,"column_start":8,"column_end":22},"name":"try_from_value","qualname":"::env::ValueType::try_from_value","value":"pub fn try_from_value(&Value) -> Result<Self, ValueTypeError>","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":" Attempt to convert the generic `Value` into this type.\n","sig":null,"attributes":[{"value":"/ Attempt to convert the generic `Value` into this type.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":194108,"byte_end":194166,"line_start":168,"line_end":168,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":6492},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":194460,"byte_end":194474,"line_start":178,"line_end":178,"column_start":12,"column_end":26},"name":"ValueTypeError","qualname":"::env::ValueTypeError","value":"ValueTypeError {  }","parent":null,"children":[{"krate":0,"index":6493},{"krate":0,"index":6494}],"decl_id":null,"docs":" The error type for environment access.","sig":null,"attributes":[{"value":"/ The error type for environment access.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":194236,"byte_end":194278,"line_start":172,"line_end":172,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":194279,"byte_end":194282,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ This error is expected to happen rarely, if ever, as it only","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":194283,"byte_end":194347,"line_start":174,"line_end":174,"column_start":1,"column_end":65}},{"value":"/ happens when the string part of keys collide but the types","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":194348,"byte_end":194410,"line_start":175,"line_end":175,"column_start":1,"column_end":63}},{"value":"/ mismatch.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":194411,"byte_end":194424,"line_start":176,"line_end":176,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6499},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":194674,"byte_end":194689,"line_start":188,"line_end":188,"column_start":12,"column_end":27},"name":"MissingKeyError","qualname":"::env::MissingKeyError","value":"MissingKeyError {  }","parent":null,"children":[{"krate":0,"index":6500}],"decl_id":null,"docs":" An error type for when a key is missing from the [`Env`].","sig":null,"attributes":[{"value":"/ An error type for when a key is missing from the [`Env`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":194526,"byte_end":194587,"line_start":183,"line_end":183,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":194588,"byte_end":194591,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ [`Env`]: struct.Env.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":194592,"byte_end":194620,"line_start":185,"line_end":185,"column_start":1,"column_end":29}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":194645,"byte_end":194662,"line_start":187,"line_end":187,"column_start":1,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":1306},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":196119,"byte_end":196131,"line_start":231,"line_end":231,"column_start":15,"column_end":27},"name":"DEBUG_WIDGET","qualname":"::env::Env::DEBUG_WIDGET","value":"Key<bool>","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":" A key used to tell widgets to print additional debug information.","sig":null,"attributes":[{"value":"/ A key used to tell widgets to print additional debug information.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":195390,"byte_end":195459,"line_start":210,"line_end":210,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":195464,"byte_end":195467,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ This does nothing by default; however you can check this key while","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":195472,"byte_end":195542,"line_start":212,"line_end":212,"column_start":5,"column_end":75}},{"value":"/ debugging a widget to limit println spam.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":195547,"byte_end":195592,"line_start":213,"line_end":213,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":195597,"byte_end":195600,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ For convenience, this key can be set with the [`WidgetExt::debug_widget`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":195605,"byte_end":195682,"line_start":215,"line_end":215,"column_start":5,"column_end":82}},{"value":"/ method.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":195687,"byte_end":195698,"line_start":216,"line_end":216,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":195703,"byte_end":195706,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":195711,"byte_end":195725,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":195730,"byte_end":195733,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":195738,"byte_end":195751,"line_start":220,"line_end":220,"column_start":5,"column_end":18}},{"value":"/ # use druid::Env;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":195756,"byte_end":195777,"line_start":221,"line_end":221,"column_start":5,"column_end":26}},{"value":"/ # let env = Env::default();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":195782,"byte_end":195813,"line_start":222,"line_end":222,"column_start":5,"column_end":36}},{"value":"/ # let widget_id = 0;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":195818,"byte_end":195842,"line_start":223,"line_end":223,"column_start":5,"column_end":29}},{"value":"/ # let my_rect = druid::Rect::ZERO;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":195847,"byte_end":195885,"line_start":224,"line_end":224,"column_start":5,"column_end":43}},{"value":"/ if env.get(Env::DEBUG_WIDGET) {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":195890,"byte_end":195925,"line_start":225,"line_end":225,"column_start":5,"column_end":40}},{"value":"/     eprintln!(\"widget {:?} bounds: {:?}\", widget_id, my_rect);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":195930,"byte_end":195996,"line_start":226,"line_end":226,"column_start":5,"column_end":71}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":196001,"byte_end":196006,"line_start":227,"line_end":227,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":196011,"byte_end":196018,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":196023,"byte_end":196026,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ [`WidgetExt::debug_widget`]: trait.WidgetExt.html#method.debug_widget","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":196031,"byte_end":196104,"line_start":230,"line_end":230,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1307},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":196579,"byte_end":196582,"line_start":242,"line_end":242,"column_start":12,"column_end":15},"name":"get","qualname":"<Env>::get","value":"pub fn get<V: ValueType,\nimpl Borrow<Key<V>>: Borrow<Key<V>>>(&Self, impl Borrow<Key<V>>) -> V","parent":null,"children":[],"decl_id":null,"docs":" Gets a value from the environment, expecting it to be present.","sig":null,"attributes":[{"value":"/ Gets a value from the environment, expecting it to be present.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":196206,"byte_end":196272,"line_start":233,"line_end":233,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":196277,"byte_end":196280,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Note that the return value is a reference for \"expensive\" types such","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":196285,"byte_end":196357,"line_start":235,"line_end":235,"column_start":5,"column_end":77}},{"value":"/ as strings, but an ordinary value for \"cheap\" types such as numbers","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":196362,"byte_end":196433,"line_start":236,"line_end":236,"column_start":5,"column_end":76}},{"value":"/ and colors.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":196438,"byte_end":196453,"line_start":237,"line_end":237,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":196458,"byte_end":196461,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":196466,"byte_end":196478,"line_start":239,"line_end":239,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":196483,"byte_end":196486,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Panics if the key is not found, or if it is present with the wrong type.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":196491,"byte_end":196567,"line_start":241,"line_end":241,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1310},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":197012,"byte_end":197019,"line_start":256,"line_end":256,"column_start":12,"column_end":19},"name":"try_get","qualname":"<Env>::try_get","value":"pub fn try_get<V: ValueType,\nimpl Borrow<Key<V>>: Borrow<Key<V>>>(&Self, impl Borrow<Key<V>>)\n-> Result<V, MissingKeyError>","parent":null,"children":[],"decl_id":null,"docs":" Trys to get a value from the environment.","sig":null,"attributes":[{"value":"/ Trys to get a value from the environment.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":196767,"byte_end":196812,"line_start":249,"line_end":249,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":196817,"byte_end":196820,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If the value is not found, the raw key is returned as the error.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":196825,"byte_end":196893,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":196898,"byte_end":196901,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":196906,"byte_end":196918,"line_start":253,"line_end":253,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":196923,"byte_end":196926,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ Panics if the value for the key is found, but has the wrong type.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":196931,"byte_end":197000,"line_start":255,"line_end":255,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":197731,"byte_end":197742,"line_start":277,"line_end":277,"column_start":12,"column_end":23},"name":"get_untyped","qualname":"<Env>::get_untyped","value":"pub fn get_untyped<V,\nimpl Borrow<Key<V>>: Borrow<Key<V>>>(&Self, impl Borrow<Key<V>>) -> &Value","parent":null,"children":[],"decl_id":null,"docs":" Gets a value from the environment, in its encapsulated [`Value`] form,\n expecting the key to be present.","sig":null,"attributes":[{"value":"/ Gets a value from the environment, in its encapsulated [`Value`] form,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":197328,"byte_end":197402,"line_start":266,"line_end":266,"column_start":5,"column_end":79}},{"value":"/ expecting the key to be present.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":197407,"byte_end":197443,"line_start":267,"line_end":267,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":197448,"byte_end":197451,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ *WARNING:* This is not intended for general use, but only for inspecting an `Env` e.g.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":197456,"byte_end":197546,"line_start":269,"line_end":269,"column_start":5,"column_end":95}},{"value":"/ for debugging, theme editing, and theme loading.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":197551,"byte_end":197603,"line_start":270,"line_end":270,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":197608,"byte_end":197611,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":197616,"byte_end":197628,"line_start":272,"line_end":272,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":197633,"byte_end":197636,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Panics if the key is not found.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":197641,"byte_end":197676,"line_start":274,"line_end":274,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":197681,"byte_end":197684,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ [`Value`]: enum.Value.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":197689,"byte_end":197719,"line_start":276,"line_end":276,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1317},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":198267,"byte_end":198282,"line_start":292,"line_end":292,"column_start":12,"column_end":27},"name":"try_get_untyped","qualname":"<Env>::try_get_untyped","value":"pub fn try_get_untyped<V,\nimpl Borrow<Key<V>>: Borrow<Key<V>>>(&Self, impl Borrow<Key<V>>)\n-> Result<&Value, MissingKeyError>","parent":null,"children":[],"decl_id":null,"docs":" Gets a value from the environment, in its encapsulated [`Value`] form,\n returning `None` if a value isn't found.","sig":null,"attributes":[{"value":"/ Gets a value from the environment, in its encapsulated [`Value`] form,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":197925,"byte_end":197999,"line_start":284,"line_end":284,"column_start":5,"column_end":79}},{"value":"/ returning `None` if a value isn't found.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":198004,"byte_end":198048,"line_start":285,"line_end":285,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":198053,"byte_end":198056,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":198061,"byte_end":198071,"line_start":287,"line_end":287,"column_start":5,"column_end":15}},{"value":"/ This is not intended for general use, but only for inspecting an `Env`","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":198076,"byte_end":198150,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/ e.g. for debugging, theme editing, and theme loading.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":198155,"byte_end":198212,"line_start":289,"line_end":289,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":198217,"byte_end":198220,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ [`Value`]: enum.Value.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":198225,"byte_end":198255,"line_start":291,"line_end":291,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":198719,"byte_end":198726,"line_start":302,"line_end":302,"column_start":12,"column_end":19},"name":"get_all","qualname":"<Env>::get_all","value":"pub fn get_all(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Gets the entire contents of the `Env`, in key-value pairs.","sig":null,"attributes":[{"value":"/ Gets the entire contents of the `Env`, in key-value pairs.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":198485,"byte_end":198547,"line_start":298,"line_end":298,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":198552,"byte_end":198555,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ *WARNING:* This is not intended for general use, but only for inspecting an `Env` e.g.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":198560,"byte_end":198650,"line_start":300,"line_end":300,"column_start":5,"column_end":95}},{"value":"/ for debugging, theme editing, and theme loading.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":198655,"byte_end":198707,"line_start":301,"line_end":301,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":198881,"byte_end":198887,"line_start":307,"line_end":307,"column_start":12,"column_end":18},"name":"adding","qualname":"<Env>::adding","value":"pub fn adding<V: ValueType, impl Into<V>: Into<V>>(Self, Key<V>, impl Into<V>)\n-> Env","parent":null,"children":[],"decl_id":null,"docs":" Adds a key/value, acting like a builder.\n","sig":null,"attributes":[{"value":"/ Adds a key/value, acting like a builder.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":198825,"byte_end":198869,"line_start":306,"line_end":306,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":199268,"byte_end":199271,"line_start":319,"line_end":319,"column_start":12,"column_end":15},"name":"set","qualname":"<Env>::set","value":"pub fn set<V: ValueType,\nimpl Into<V>: Into<V>>(&mut Self, Key<V>, impl Into<V>)","parent":null,"children":[],"decl_id":null,"docs":" Sets a value in an environment.","sig":null,"attributes":[{"value":"/ Sets a value in an environment.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":199082,"byte_end":199117,"line_start":313,"line_end":313,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":199122,"byte_end":199125,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":199130,"byte_end":199142,"line_start":315,"line_end":315,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":199147,"byte_end":199150,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Panics if the environment already has a value for the key, but it is","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":199155,"byte_end":199227,"line_start":317,"line_end":317,"column_start":5,"column_end":77}},{"value":"/ of a different type.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":199232,"byte_end":199256,"line_start":318,"line_end":318,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1329},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":200168,"byte_end":200183,"line_start":345,"line_end":345,"column_start":12,"column_end":27},"name":"get_debug_color","qualname":"<Env>::get_debug_color","value":"pub fn get_debug_color(&Self, u64) -> Color","parent":null,"children":[],"decl_id":null,"docs":" Given an id, returns one of 18 distinct colors\n","sig":null,"attributes":[{"value":"/ Given an id, returns one of 18 distinct colors","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":200087,"byte_end":200137,"line_start":343,"line_end":343,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1332},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":200784,"byte_end":200787,"line_start":364,"line_end":364,"column_start":18,"column_end":21},"name":"new","qualname":"<Key<T>>::new","value":"pub const fn new(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new strongly typed `Key` with the given string value.\n The type of the key will be inferred.","sig":null,"attributes":[{"value":"/ Create a new strongly typed `Key` with the given string value.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":200353,"byte_end":200419,"line_start":352,"line_end":352,"column_start":5,"column_end":71}},{"value":"/ The type of the key will be inferred.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":200424,"byte_end":200465,"line_start":353,"line_end":353,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":200470,"byte_end":200473,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":200478,"byte_end":200492,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":200497,"byte_end":200500,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":200505,"byte_end":200512,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ use druid::Key;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":200517,"byte_end":200536,"line_start":358,"line_end":358,"column_start":5,"column_end":24}},{"value":"/ use druid::piet::Color;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":200541,"byte_end":200568,"line_start":359,"line_end":359,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":200573,"byte_end":200576,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ let float_key: Key<f64> = Key::new(\"org.linebender.example.a.very.good.float\");","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":200581,"byte_end":200664,"line_start":361,"line_end":361,"column_start":5,"column_end":88}},{"value":"/ let color_key: Key<Color> = Key::new(\"org.linebender.example.a.very.nice.color\");","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":200669,"byte_end":200754,"line_start":362,"line_end":362,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":200759,"byte_end":200766,"line_start":363,"line_end":363,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1334},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":201252,"byte_end":201259,"line_start":380,"line_end":380,"column_start":18,"column_end":25},"name":"untyped","qualname":"<Key<()>>::untyped","value":"pub const fn untyped(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an untyped `Key` with the given string value.","sig":null,"attributes":[{"value":"/ Create an untyped `Key` with the given string value.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":200923,"byte_end":200979,"line_start":373,"line_end":373,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":200984,"byte_end":200987,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ *WARNING:* This is not for general usage - it's only useful","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":200992,"byte_end":201055,"line_start":375,"line_end":375,"column_start":5,"column_end":68}},{"value":"/ for inspecting the contents of an [`Env`]  - this is expected to be","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":201060,"byte_end":201131,"line_start":376,"line_end":376,"column_start":5,"column_end":76}},{"value":"/ used for debugging, loading, and manipulating themes.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":201136,"byte_end":201193,"line_start":377,"line_end":377,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":201198,"byte_end":201201,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ [`Env`]: struct.Env.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":201206,"byte_end":201234,"line_start":379,"line_end":379,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1336},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":201549,"byte_end":201567,"line_start":394,"line_end":394,"column_start":12,"column_end":30},"name":"to_inner_unchecked","qualname":"<Value>::to_inner_unchecked","value":"pub fn to_inner_unchecked<V: ValueType>(&Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the inner object.","sig":null,"attributes":[{"value":"/ Get a reference to the inner object.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":201393,"byte_end":201433,"line_start":389,"line_end":389,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":201438,"byte_end":201441,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":201446,"byte_end":201458,"line_start":391,"line_end":391,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":201463,"byte_end":201466,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ Panics when the value variant doesn't match the provided type.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":201471,"byte_end":201537,"line_start":393,"line_end":393,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":205392,"byte_end":205399,"line_start":517,"line_end":517,"column_start":12,"column_end":19},"name":"raw_key","qualname":"<MissingKeyError>::raw_key","value":"pub fn raw_key(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" The raw key that was missing.\n","sig":null,"attributes":[{"value":"/ The raw key that was missing.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":205347,"byte_end":205380,"line_start":516,"line_end":516,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":206848,"byte_end":206855,"line_start":567,"line_end":567,"column_start":12,"column_end":19},"name":"resolve","qualname":"<KeyOrValue<T>>::resolve","value":"pub fn resolve(&Self, &Env) -> T","parent":null,"children":[],"decl_id":null,"docs":" Resolve the concrete type `T` from this `KeyOrValue`, using the provided\n [`Env`] if required.","sig":null,"attributes":[{"value":"/ Resolve the concrete type `T` from this `KeyOrValue`, using the provided","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":206690,"byte_end":206766,"line_start":563,"line_end":563,"column_start":5,"column_end":81}},{"value":"/ [`Env`] if required.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":206771,"byte_end":206795,"line_start":564,"line_end":564,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":206800,"byte_end":206803,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ [`Env`]: struct.Env.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":206808,"byte_end":206836,"line_start":566,"line_end":566,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6546},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":210594,"byte_end":210609,"line_start":62,"line_end":62,"column_start":5,"column_end":20},"name":"WindowConnected","qualname":"::event::Event::WindowConnected","value":"Event::WindowConnected","parent":{"krate":0,"index":6545},"children":[],"decl_id":null,"docs":" Sent to all widgets in a given window when that window is first instantiated.","sig":null,"attributes":[{"value":"/ Sent to all widgets in a given window when that window is first instantiated.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":210158,"byte_end":210239,"line_start":53,"line_end":53,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":210244,"byte_end":210247,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This should always be the first `Event` received, although widgets will","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":210252,"byte_end":210327,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ receive [`LifeCycle::WidgetAdded`] first.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":210332,"byte_end":210377,"line_start":56,"line_end":56,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":210382,"byte_end":210385,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Widgets should handle this event if they need to do some addition setup","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":210390,"byte_end":210465,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ when a window is first created.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":210470,"byte_end":210505,"line_start":59,"line_end":59,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":210510,"byte_end":210513,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ [`LifeCycle::WidgetAdded`]: enum.LifeCycle.html#variant.WidgetAdded","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":210518,"byte_end":210589,"line_start":61,"line_end":61,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6548},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":210939,"byte_end":210949,"line_start":69,"line_end":69,"column_start":5,"column_end":15},"name":"WindowSize","qualname":"::event::Event::WindowSize","value":"Event::WindowSize(Size)","parent":{"krate":0,"index":6545},"children":[],"decl_id":null,"docs":" Called on the root widget when the window size changes.","sig":null,"attributes":[{"value":"/ Called on the root widget when the window size changes.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":210615,"byte_end":210674,"line_start":63,"line_end":63,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":210679,"byte_end":210682,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Discussion: it's not obvious this should be propagated to user","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":210687,"byte_end":210753,"line_start":65,"line_end":65,"column_start":5,"column_end":71}},{"value":"/ widgets. It *is* propagated through the RootWidget and handled","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":210758,"byte_end":210824,"line_start":66,"line_end":66,"column_start":5,"column_end":71}},{"value":"/ in the WindowPod, but after that it might be considered better","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":210829,"byte_end":210895,"line_start":67,"line_end":67,"column_start":5,"column_end":71}},{"value":"/ to just handle it in `layout`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":210900,"byte_end":210934,"line_start":68,"line_end":68,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6551},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":211008,"byte_end":211017,"line_start":71,"line_end":71,"column_start":5,"column_end":14},"name":"MouseDown","qualname":"::event::Event::MouseDown","value":"Event::MouseDown(MouseEvent)","parent":{"krate":0,"index":6545},"children":[],"decl_id":null,"docs":" Called when a mouse button is pressed.\n","sig":null,"attributes":[{"value":"/ Called when a mouse button is pressed.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":210961,"byte_end":211003,"line_start":70,"line_end":70,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6554},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":211083,"byte_end":211090,"line_start":73,"line_end":73,"column_start":5,"column_end":12},"name":"MouseUp","qualname":"::event::Event::MouseUp","value":"Event::MouseUp(MouseEvent)","parent":{"krate":0,"index":6545},"children":[],"decl_id":null,"docs":" Called when a mouse button is released.\n","sig":null,"attributes":[{"value":"/ Called when a mouse button is released.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":211035,"byte_end":211078,"line_start":72,"line_end":72,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6557},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":211837,"byte_end":211846,"line_start":88,"line_end":88,"column_start":5,"column_end":14},"name":"MouseMove","qualname":"::event::Event::MouseMove","value":"Event::MouseMove(MouseEvent)","parent":{"krate":0,"index":6545},"children":[],"decl_id":null,"docs":" Called when the mouse is moved.","sig":null,"attributes":[{"value":"/ Called when the mouse is moved.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":211108,"byte_end":211143,"line_start":74,"line_end":74,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":211148,"byte_end":211151,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The `MouseMove` event is propagated to the active widget, if","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":211156,"byte_end":211220,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/ there is one, otherwise to hot widgets (see `HotChanged`).","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":211225,"byte_end":211287,"line_start":77,"line_end":77,"column_start":5,"column_end":67}},{"value":"/ If a widget loses its hot status due to `MouseMove` then that specific","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":211292,"byte_end":211366,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ `MouseMove` event is also still sent to that widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":211371,"byte_end":211427,"line_start":79,"line_end":79,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":211432,"byte_end":211435,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ The `MouseMove` event is also the primary mechanism for widgets","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":211440,"byte_end":211507,"line_start":81,"line_end":81,"column_start":5,"column_end":72}},{"value":"/ to set a cursor, for example to an I-bar inside a text widget. A","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":211512,"byte_end":211580,"line_start":82,"line_end":82,"column_start":5,"column_end":73}},{"value":"/ simple tactic is for the widget to unconditionally call","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":211585,"byte_end":211644,"line_start":83,"line_end":83,"column_start":5,"column_end":64}},{"value":"/ [`set_cursor`] in the MouseMove handler, as `MouseMove` is only","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":211649,"byte_end":211716,"line_start":84,"line_end":84,"column_start":5,"column_end":72}},{"value":"/ propagated to active or hot widgets.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":211721,"byte_end":211761,"line_start":85,"line_end":85,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":211766,"byte_end":211769,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ [`set_cursor`]: struct.EventCtx.html#method.set_cursor","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":211774,"byte_end":211832,"line_start":87,"line_end":87,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6560},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":211925,"byte_end":211930,"line_start":90,"line_end":90,"column_start":5,"column_end":10},"name":"Wheel","qualname":"::event::Event::Wheel","value":"Event::Wheel(MouseEvent)","parent":{"krate":0,"index":6545},"children":[],"decl_id":null,"docs":" Called when the mouse wheel or trackpad is scrolled.\n","sig":null,"attributes":[{"value":"/ Called when the mouse wheel or trackpad is scrolled.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":211864,"byte_end":211920,"line_start":89,"line_end":89,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6563},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":211986,"byte_end":211993,"line_start":92,"line_end":92,"column_start":5,"column_end":12},"name":"KeyDown","qualname":"::event::Event::KeyDown","value":"Event::KeyDown(KeyEvent)","parent":{"krate":0,"index":6545},"children":[],"decl_id":null,"docs":" Called when a key is pressed.\n","sig":null,"attributes":[{"value":"/ Called when a key is pressed.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":211948,"byte_end":211981,"line_start":91,"line_end":91,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6566},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":212170,"byte_end":212175,"line_start":97,"line_end":97,"column_start":5,"column_end":10},"name":"KeyUp","qualname":"::event::Event::KeyUp","value":"Event::KeyUp(KeyEvent)","parent":{"krate":0,"index":6545},"children":[],"decl_id":null,"docs":" Called when a key is released.","sig":null,"attributes":[{"value":"/ Called when a key is released.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":212009,"byte_end":212043,"line_start":93,"line_end":93,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":212048,"byte_end":212051,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Because of repeat, there may be a number `KeyDown` events before","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":212056,"byte_end":212124,"line_start":95,"line_end":95,"column_start":5,"column_end":73}},{"value":"/ a corresponding `KeyUp` is sent.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":212129,"byte_end":212165,"line_start":96,"line_end":96,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6569},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":212240,"byte_end":212245,"line_start":99,"line_end":99,"column_start":5,"column_end":10},"name":"Paste","qualname":"::event::Event::Paste","value":"Event::Paste(Clipboard)","parent":{"krate":0,"index":6545},"children":[],"decl_id":null,"docs":" Called when a paste command is received.\n","sig":null,"attributes":[{"value":"/ Called when a paste command is received.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":212191,"byte_end":212235,"line_start":98,"line_end":98,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6572},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":212345,"byte_end":212349,"line_start":103,"line_end":103,"column_start":5,"column_end":9},"name":"Zoom","qualname":"::event::Event::Zoom","value":"Event::Zoom(f64)","parent":{"krate":0,"index":6545},"children":[],"decl_id":null,"docs":" Called when the trackpad is pinched.","sig":null,"attributes":[{"value":"/ Called when the trackpad is pinched.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":212262,"byte_end":212302,"line_start":100,"line_end":100,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":212307,"byte_end":212310,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The value is a delta.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":212315,"byte_end":212340,"line_start":102,"line_end":102,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6575},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":212792,"byte_end":212797,"line_start":114,"line_end":114,"column_start":5,"column_end":10},"name":"Timer","qualname":"::event::Event::Timer","value":"Event::Timer(TimerToken)","parent":{"krate":0,"index":6545},"children":[],"decl_id":null,"docs":" Called on a timer event.","sig":null,"attributes":[{"value":"/ Called on a timer event.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":212360,"byte_end":212388,"line_start":104,"line_end":104,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":212393,"byte_end":212396,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Request a timer event through [`EventCtx::request_timer()`]. That will","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":212401,"byte_end":212475,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ cause a timer event later.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":212480,"byte_end":212510,"line_start":107,"line_end":107,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":212515,"byte_end":212518,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Note that timer events from other widgets may be delivered as well. Use","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":212523,"byte_end":212598,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/ the token returned from the `request_timer()` call to filter events more","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":212603,"byte_end":212679,"line_start":110,"line_end":110,"column_start":5,"column_end":81}},{"value":"/ precisely.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":212684,"byte_end":212698,"line_start":111,"line_end":111,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":212703,"byte_end":212706,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ [`EventCtx::request_timer()`]: struct.EventCtx.html#method.request_timer","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":212711,"byte_end":212787,"line_start":113,"line_end":113,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6578},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":213424,"byte_end":213433,"line_start":125,"line_end":125,"column_start":5,"column_end":14},"name":"AnimFrame","qualname":"::event::Event::AnimFrame","value":"Event::AnimFrame(u64)","parent":{"krate":0,"index":6545},"children":[],"decl_id":null,"docs":" Called at the beginning of a new animation frame.","sig":null,"attributes":[{"value":"/ Called at the beginning of a new animation frame.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":212815,"byte_end":212868,"line_start":115,"line_end":115,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":212873,"byte_end":212876,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ On the first frame when transitioning from idle to animating, `interval`","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":212881,"byte_end":212957,"line_start":117,"line_end":117,"column_start":5,"column_end":81}},{"value":"/ will be 0. (This logic is presently per-window but might change to","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":212962,"byte_end":213032,"line_start":118,"line_end":118,"column_start":5,"column_end":75}},{"value":"/ per-widget to make it more consistent). Otherwise it is in nanoseconds.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":213037,"byte_end":213112,"line_start":119,"line_end":119,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":213117,"byte_end":213120,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ The `paint` method will be called shortly after this event is finished.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":213125,"byte_end":213200,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ As a result, you should try to avoid doing anything computationally","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":213205,"byte_end":213276,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ intensive in response to an `AnimFrame` event: it might make Druid miss","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":213281,"byte_end":213356,"line_start":123,"line_end":123,"column_start":5,"column_end":80}},{"value":"/ the monitor's refresh, causing lag or jerky animation.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":213361,"byte_end":213419,"line_start":124,"line_end":124,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6581},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":214517,"byte_end":214524,"line_start":146,"line_end":146,"column_start":5,"column_end":12},"name":"Command","qualname":"::event::Event::Command","value":"Event::Command(Command)","parent":{"krate":0,"index":6545},"children":[],"decl_id":null,"docs":" An event containing a [`Command`] to be handled by the widget.","sig":null,"attributes":[{"value":"/ An event containing a [`Command`] to be handled by the widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":213444,"byte_end":213510,"line_start":126,"line_end":126,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":213515,"byte_end":213518,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`Command`]s are messages, optionally with attached data, that can","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":213523,"byte_end":213593,"line_start":128,"line_end":128,"column_start":5,"column_end":75}},{"value":"/ may be generated from a number of sources:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":213598,"byte_end":213644,"line_start":129,"line_end":129,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":213649,"byte_end":213652,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ - If your application uses  menus (either window or context menus)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":213657,"byte_end":213727,"line_start":131,"line_end":131,"column_start":5,"column_end":75}},{"value":"/ then the [`MenuItem`]s in the menu will each correspond to a `Command`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":213732,"byte_end":213807,"line_start":132,"line_end":132,"column_start":5,"column_end":80}},{"value":"/ When the menu item is selected, that [`Command`] will be delivered to","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":213812,"byte_end":213885,"line_start":133,"line_end":133,"column_start":5,"column_end":78}},{"value":"/ the root widget of the appropriate window.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":213890,"byte_end":213936,"line_start":134,"line_end":134,"column_start":5,"column_end":51}},{"value":"/ - If you are doing work in another thread (using an [`ExtEventSink`])","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":213941,"byte_end":214014,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ then [`Command`]s are the mechanism by which you communicate back to","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":214019,"byte_end":214091,"line_start":136,"line_end":136,"column_start":5,"column_end":77}},{"value":"/ the main thread.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":214096,"byte_end":214116,"line_start":137,"line_end":137,"column_start":5,"column_end":25}},{"value":"/ - Widgets and other Druid components can send custom [`Command`]s at","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":214121,"byte_end":214193,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ runtime, via methods such as [`EventCtx::submit_command`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":214198,"byte_end":214260,"line_start":139,"line_end":139,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":214265,"byte_end":214268,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ [`Command`]: struct.Command.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":214273,"byte_end":214309,"line_start":141,"line_end":141,"column_start":5,"column_end":41}},{"value":"/ [`Widget`]: trait.Widget.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":214314,"byte_end":214347,"line_start":142,"line_end":142,"column_start":5,"column_end":38}},{"value":"/ [`EventCtx::submit_command`]: struct.EventCtx.html#method.submit_command","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":214352,"byte_end":214428,"line_start":143,"line_end":143,"column_start":5,"column_end":81}},{"value":"/ [`ExtEventSink`]: crate::ExtEventSink","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":214433,"byte_end":214474,"line_start":144,"line_end":144,"column_start":5,"column_end":46}},{"value":"/ [`MenuItem`]: crate::MenuItem","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":214479,"byte_end":214512,"line_start":145,"line_end":145,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6584},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":215384,"byte_end":215396,"line_start":164,"line_end":164,"column_start":5,"column_end":17},"name":"Notification","qualname":"::event::Event::Notification","value":"Event::Notification(Notification)","parent":{"krate":0,"index":6545},"children":[],"decl_id":null,"docs":" A [`Notification`] from one of this widget's descendants.","sig":null,"attributes":[{"value":"/ A [`Notification`] from one of this widget's descendants.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":214539,"byte_end":214600,"line_start":147,"line_end":147,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":214605,"byte_end":214608,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ While handling events, widgets can submit notifications to be","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":214613,"byte_end":214678,"line_start":149,"line_end":149,"column_start":5,"column_end":70}},{"value":"/ delivered to their ancestors immdiately after they return.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":214683,"byte_end":214745,"line_start":150,"line_end":150,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":214750,"byte_end":214753,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If you handle a [`Notification`], you should call [`EventCtx::set_handled`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":214758,"byte_end":214837,"line_start":152,"line_end":152,"column_start":5,"column_end":84}},{"value":"/ to stop the notification from being delivered to further ancestors.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":214842,"byte_end":214913,"line_start":153,"line_end":153,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":214918,"byte_end":214921,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ## Special considerations","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":214926,"byte_end":214955,"line_start":155,"line_end":155,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":214960,"byte_end":214963,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Notifications are slightly different from other events; they originate","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":214968,"byte_end":215042,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ inside Druid, and they are delivered as part of the handling of another","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":215047,"byte_end":215122,"line_start":158,"line_end":158,"column_start":5,"column_end":80}},{"value":"/ event. In this sense, they can sort of be thought of as an augmentation","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":215127,"byte_end":215202,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ of an event; they are a way for multiple widgets to coordinate the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":215207,"byte_end":215277,"line_start":160,"line_end":160,"column_start":5,"column_end":75}},{"value":"/ handling of an event.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":215282,"byte_end":215307,"line_start":161,"line_end":161,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":215312,"byte_end":215315,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`EventCtx::set_handled`]: crate::EventCtx::set_handled","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":215320,"byte_end":215379,"line_start":163,"line_end":163,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6587},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":215579,"byte_end":215587,"line_start":170,"line_end":170,"column_start":5,"column_end":13},"name":"Internal","qualname":"::event::Event::Internal","value":"Event::Internal(InternalEvent)","parent":{"krate":0,"index":6545},"children":[],"decl_id":null,"docs":" Internal druid event.","sig":null,"attributes":[{"value":"/ Internal druid event.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":215416,"byte_end":215441,"line_start":165,"line_end":165,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":215446,"byte_end":215449,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ This should always be passed down to descendant [`WidgetPod`]s.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":215454,"byte_end":215521,"line_start":167,"line_end":167,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":215526,"byte_end":215529,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ [`WidgetPod`]: struct.WidgetPod.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":215534,"byte_end":215574,"line_start":169,"line_end":169,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":6545},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":210146,"byte_end":210151,"line_start":52,"line_end":52,"column_start":10,"column_end":15},"name":"Event","qualname":"::event::Event","value":"pub enum Event {\n    WindowConnected,\n    WindowSize(Size),\n    MouseDown(MouseEvent),\n    MouseUp(MouseEvent),\n    MouseMove(MouseEvent),\n    Wheel(MouseEvent),\n    KeyDown(KeyEvent),\n    KeyUp(KeyEvent),\n    Paste(Clipboard),\n    Zoom(f64),\n    Timer(TimerToken),\n    AnimFrame(u64),\n    Command(Command),\n    Notification(Notification),\n    Internal(InternalEvent),\n}","parent":null,"children":[{"krate":0,"index":6546},{"krate":0,"index":6548},{"krate":0,"index":6551},{"krate":0,"index":6554},{"krate":0,"index":6557},{"krate":0,"index":6560},{"krate":0,"index":6563},{"krate":0,"index":6566},{"krate":0,"index":6569},{"krate":0,"index":6572},{"krate":0,"index":6575},{"krate":0,"index":6578},{"krate":0,"index":6581},{"krate":0,"index":6584},{"krate":0,"index":6587}],"decl_id":null,"docs":" An event, propagated downwards during event flow.","sig":null,"attributes":[{"value":"/ An event, propagated downwards during event flow.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":208707,"byte_end":208760,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":208761,"byte_end":208764,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ With two exceptions ([`Event::Command`] and [`Event::Notification`], which","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":208765,"byte_end":208843,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ have special considerations outlined in their own docs) each event","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":208844,"byte_end":208914,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/ corresponds to some user action or other message recieved from the platform.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":208915,"byte_end":208995,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":208996,"byte_end":208999,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Events are things that happen that can change the state of widgets.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":209000,"byte_end":209071,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ An important category is events plumbed from the platform windowing","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":209072,"byte_end":209143,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ system, which includes mouse and keyboard events, but also (in the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":209144,"byte_end":209214,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/ future) status changes such as window focus changes.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":209215,"byte_end":209271,"line_start":33,"line_end":33,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":209272,"byte_end":209275,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Events can also be higher level concepts indicating state changes","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":209276,"byte_end":209345,"line_start":35,"line_end":35,"column_start":1,"column_end":70}},{"value":"/ within the widget hierarchy, for example when a widget gains or loses","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":209346,"byte_end":209419,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/ focus or \"hot\" (also known as hover) status.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":209420,"byte_end":209468,"line_start":37,"line_end":37,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":209469,"byte_end":209472,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Events are a key part of what is called \"event flow\", which is","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":209473,"byte_end":209539,"line_start":39,"line_end":39,"column_start":1,"column_end":67}},{"value":"/ basically the propagation of an event through the widget hierarchy","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":209540,"byte_end":209610,"line_start":40,"line_end":40,"column_start":1,"column_end":71}},{"value":"/ through the [`event`] widget method. A container widget will","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":209611,"byte_end":209675,"line_start":41,"line_end":41,"column_start":1,"column_end":65}},{"value":"/ generally pass the event to its children, mediated through the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":209676,"byte_end":209742,"line_start":42,"line_end":42,"column_start":1,"column_end":67}},{"value":"/ [`WidgetPod`] container, which is where most of the event flow logic","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":209743,"byte_end":209815,"line_start":43,"line_end":43,"column_start":1,"column_end":73}},{"value":"/ is applied (especially the decision whether or not to propagate).","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":209816,"byte_end":209885,"line_start":44,"line_end":44,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":209886,"byte_end":209889,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This enum is expected to grow considerably, as there are many, many","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":209890,"byte_end":209961,"line_start":46,"line_end":46,"column_start":1,"column_end":72}},{"value":"/ different kinds of events that are relevant in a GUI.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":209962,"byte_end":210019,"line_start":47,"line_end":47,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":210020,"byte_end":210023,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ [`event`]: trait.Widget.html#tymethod.event","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":210024,"byte_end":210071,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/ [`WidgetPod`]: struct.WidgetPod.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":210072,"byte_end":210112,"line_start":50,"line_end":50,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6595},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":216105,"byte_end":216115,"line_start":186,"line_end":186,"column_start":5,"column_end":15},"name":"MouseLeave","qualname":"::event::InternalEvent::MouseLeave","value":"InternalEvent::MouseLeave","parent":{"krate":0,"index":6594},"children":[],"decl_id":null,"docs":" Sent in some cases when the mouse has left the window.","sig":null,"attributes":[{"value":"/ Sent in some cases when the mouse has left the window.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":215889,"byte_end":215947,"line_start":182,"line_end":182,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":215952,"byte_end":215955,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ This is used in cases when the platform no longer sends mouse events,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":215960,"byte_end":216033,"line_start":184,"line_end":184,"column_start":5,"column_end":78}},{"value":"/ but we know that we've stopped receiving the mouse events.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":216038,"byte_end":216100,"line_start":185,"line_end":185,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6597},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":216181,"byte_end":216196,"line_start":188,"line_end":188,"column_start":5,"column_end":20},"name":"TargetedCommand","qualname":"::event::InternalEvent::TargetedCommand","value":"InternalEvent::TargetedCommand(Command)","parent":{"krate":0,"index":6594},"children":[],"decl_id":null,"docs":" A command still in the process of being dispatched.\n","sig":null,"attributes":[{"value":"/ A command still in the process of being dispatched.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":216121,"byte_end":216176,"line_start":187,"line_end":187,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6600},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":216250,"byte_end":216260,"line_start":190,"line_end":190,"column_start":5,"column_end":15},"name":"RouteTimer","qualname":"::event::InternalEvent::RouteTimer","value":"InternalEvent::RouteTimer(TimerToken, WidgetId)","parent":{"krate":0,"index":6594},"children":[],"decl_id":null,"docs":" Used for routing timer events.\n","sig":null,"attributes":[{"value":"/ Used for routing timer events.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":216211,"byte_end":216245,"line_start":189,"line_end":189,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":6594},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":215869,"byte_end":215882,"line_start":181,"line_end":181,"column_start":10,"column_end":23},"name":"InternalEvent","qualname":"::event::InternalEvent","value":"pub enum InternalEvent {\n    MouseLeave,\n    TargetedCommand(Command),\n    RouteTimer(TimerToken, WidgetId),\n}","parent":null,"children":[{"krate":0,"index":6595},{"krate":0,"index":6597},{"krate":0,"index":6600}],"decl_id":null,"docs":" Internal events used by druid inside [`WidgetPod`].","sig":null,"attributes":[{"value":"/ Internal events used by druid inside [`WidgetPod`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":215607,"byte_end":215662,"line_start":173,"line_end":173,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":215663,"byte_end":215666,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ These events are translated into regular [`Event`]s","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":215667,"byte_end":215722,"line_start":175,"line_end":175,"column_start":1,"column_end":56}},{"value":"/ and should not be used directly.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":215723,"byte_end":215759,"line_start":176,"line_end":176,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":215760,"byte_end":215763,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ [`WidgetPod`]: struct.WidgetPod.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":215764,"byte_end":215804,"line_start":178,"line_end":178,"column_start":1,"column_end":41}},{"value":"/ [`Event`]: enum.Event.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":215805,"byte_end":215835,"line_start":179,"line_end":179,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6609},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":218291,"byte_end":218302,"line_start":234,"line_end":234,"column_start":5,"column_end":16},"name":"WidgetAdded","qualname":"::event::LifeCycle::WidgetAdded","value":"LifeCycle::WidgetAdded","parent":{"krate":0,"index":6608},"children":[],"decl_id":null,"docs":" Sent to a `Widget` when it is added to the widget tree. This should be\n the first message that each widget receives.","sig":null,"attributes":[{"value":"/ Sent to a `Widget` when it is added to the widget tree. This should be","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":217131,"byte_end":217205,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ the first message that each widget receives.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":217210,"byte_end":217258,"line_start":212,"line_end":212,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":217263,"byte_end":217266,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ Widgets should handle this event in order to do any initial setup.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":217271,"byte_end":217341,"line_start":214,"line_end":214,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":217346,"byte_end":217349,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ In addition to setup, this event is also used by the framework to","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":217354,"byte_end":217423,"line_start":216,"line_end":216,"column_start":5,"column_end":74}},{"value":"/ track certain types of important widget state.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":217428,"byte_end":217478,"line_start":217,"line_end":217,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":217483,"byte_end":217486,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ## Registering children","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":217491,"byte_end":217518,"line_start":219,"line_end":219,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":217523,"byte_end":217526,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Container widgets (widgets which use [`WidgetPod`] to manage children)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":217531,"byte_end":217605,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ must ensure that this event is forwarded to those children. The [`WidgetPod`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":217610,"byte_end":217691,"line_start":222,"line_end":222,"column_start":5,"column_end":86}},{"value":"/ itself will handle registering those children with the system; this is","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":217696,"byte_end":217770,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/ required for things like correct routing of events.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":217775,"byte_end":217830,"line_start":224,"line_end":224,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":217835,"byte_end":217838,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ## Participating in focus","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":217843,"byte_end":217872,"line_start":226,"line_end":226,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":217877,"byte_end":217880,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Widgets which wish to participate in automatic focus (using tab to change","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":217885,"byte_end":217962,"line_start":228,"line_end":228,"column_start":5,"column_end":82}},{"value":"/ focus) must handle this event and call [`LifeCycleCtx::register_for_focus`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":217967,"byte_end":218047,"line_start":229,"line_end":229,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":218052,"byte_end":218055,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ [`LifeCycleCtx::register_child`]: struct.LifeCycleCtx.html#method.register_child","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":218060,"byte_end":218144,"line_start":231,"line_end":231,"column_start":5,"column_end":89}},{"value":"/ [`WidgetPod`]: struct.WidgetPod.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":218149,"byte_end":218189,"line_start":232,"line_end":232,"column_start":5,"column_end":45}},{"value":"/ [`LifeCycleCtx::register_for_focus`]: struct.LifeCycleCtx.html#method.register_for_focus","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":218194,"byte_end":218286,"line_start":233,"line_end":233,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6611},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":218610,"byte_end":218614,"line_start":242,"line_end":242,"column_start":5,"column_end":9},"name":"Size","qualname":"::event::LifeCycle::Size","value":"LifeCycle::Size(Size)","parent":{"krate":0,"index":6608},"children":[],"decl_id":null,"docs":" Called when the [`Size`] of the widget changes.","sig":null,"attributes":[{"value":"/ Called when the [`Size`] of the widget changes.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":218308,"byte_end":218359,"line_start":235,"line_end":235,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":218364,"byte_end":218367,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ This will be called after [`Widget::layout`], if the [`Size`] returned","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":218372,"byte_end":218446,"line_start":237,"line_end":237,"column_start":5,"column_end":79}},{"value":"/ by the widget differs from its previous size.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":218451,"byte_end":218500,"line_start":238,"line_end":238,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":218505,"byte_end":218508,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ [`Size`]: struct.Size.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":218513,"byte_end":218543,"line_start":240,"line_end":240,"column_start":5,"column_end":35}},{"value":"/ [`Widget::layout`]: trait.Widget.html#tymethod.layout","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":218548,"byte_end":218605,"line_start":241,"line_end":241,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6614},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":219014,"byte_end":219024,"line_start":251,"line_end":251,"column_start":5,"column_end":15},"name":"HotChanged","qualname":"::event::LifeCycle::HotChanged","value":"LifeCycle::HotChanged(bool)","parent":{"krate":0,"index":6608},"children":[],"decl_id":null,"docs":" Called when the \"hot\" status changes.","sig":null,"attributes":[{"value":"/ Called when the \"hot\" status changes.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":218626,"byte_end":218667,"line_start":243,"line_end":243,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":218672,"byte_end":218675,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This will always be called _before_ the event that triggered it; that is,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":218680,"byte_end":218757,"line_start":245,"line_end":245,"column_start":5,"column_end":82}},{"value":"/ when the mouse moves over a widget, that widget will receive","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":218762,"byte_end":218826,"line_start":246,"line_end":246,"column_start":5,"column_end":69}},{"value":"/ `LifeCycle::HotChanged` before it receives `Event::MouseMove`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":218831,"byte_end":218897,"line_start":247,"line_end":247,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":218902,"byte_end":218905,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ See [`is_hot`](struct.EventCtx.html#method.is_hot) for","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":218910,"byte_end":218968,"line_start":249,"line_end":249,"column_start":5,"column_end":63}},{"value":"/ discussion about the hot status.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":218973,"byte_end":219009,"line_start":250,"line_end":250,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6617},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":219463,"byte_end":219475,"line_start":261,"line_end":261,"column_start":5,"column_end":17},"name":"FocusChanged","qualname":"::event::LifeCycle::FocusChanged","value":"LifeCycle::FocusChanged(bool)","parent":{"krate":0,"index":6608},"children":[],"decl_id":null,"docs":" Called when the focus status changes.","sig":null,"attributes":[{"value":"/ Called when the focus status changes.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":219036,"byte_end":219077,"line_start":252,"line_end":252,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":219082,"byte_end":219085,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ This will always be called immediately after a new widget gains focus.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":219090,"byte_end":219164,"line_start":254,"line_end":254,"column_start":5,"column_end":79}},{"value":"/ The newly focused widget will receive this with `true` and the widget","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":219169,"byte_end":219242,"line_start":255,"line_end":255,"column_start":5,"column_end":78}},{"value":"/ that lost focus will receive this with `false`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":219247,"byte_end":219298,"line_start":256,"line_end":256,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":219303,"byte_end":219306,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ See [`EventCtx::is_focused`] for more information about focus.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":219311,"byte_end":219377,"line_start":258,"line_end":258,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":219382,"byte_end":219385,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ [`EventCtx::is_focused`]: struct.EventCtx.html#method.is_focused","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":219390,"byte_end":219458,"line_start":260,"line_end":260,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6620},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":219660,"byte_end":219668,"line_start":267,"line_end":267,"column_start":5,"column_end":13},"name":"Internal","qualname":"::event::LifeCycle::Internal","value":"LifeCycle::Internal(InternalLifeCycle)","parent":{"krate":0,"index":6608},"children":[],"decl_id":null,"docs":" Internal druid lifecycle event.","sig":null,"attributes":[{"value":"/ Internal druid lifecycle event.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":219487,"byte_end":219522,"line_start":262,"line_end":262,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":219527,"byte_end":219530,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ This should always be passed down to descendant [`WidgetPod`]s.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":219535,"byte_end":219602,"line_start":264,"line_end":264,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":219607,"byte_end":219610,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ [`WidgetPod`]: struct.WidgetPod.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":219615,"byte_end":219655,"line_start":266,"line_end":266,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":6608},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":217115,"byte_end":217124,"line_start":210,"line_end":210,"column_start":10,"column_end":19},"name":"LifeCycle","qualname":"::event::LifeCycle","value":"pub enum LifeCycle {\n    WidgetAdded,\n    Size(Size),\n    HotChanged(bool),\n    FocusChanged(bool),\n    Internal(InternalLifeCycle),\n}","parent":null,"children":[{"krate":0,"index":6609},{"krate":0,"index":6611},{"krate":0,"index":6614},{"krate":0,"index":6617},{"krate":0,"index":6620}],"decl_id":null,"docs":" Application life cycle events.","sig":null,"attributes":[{"value":"/ Application life cycle events.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":216287,"byte_end":216321,"line_start":193,"line_end":193,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":216322,"byte_end":216325,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ Unlike [`Event`]s, [`LifeCycle`] events are generated by Druid, and","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":216326,"byte_end":216397,"line_start":195,"line_end":195,"column_start":1,"column_end":72}},{"value":"/ may occur at different times during a given pass of the event loop. The","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":216398,"byte_end":216473,"line_start":196,"line_end":196,"column_start":1,"column_end":76}},{"value":"/ [`LifeCycle::WidgetAdded`] event, for instance, may occur when the app","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":216474,"byte_end":216548,"line_start":197,"line_end":197,"column_start":1,"column_end":75}},{"value":"/ first launches (during the handling of [`Event::WindowConnected`]) or it","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":216549,"byte_end":216625,"line_start":198,"line_end":198,"column_start":1,"column_end":77}},{"value":"/ may occur during [`update`] cycle, if some widget has been added there.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":216626,"byte_end":216701,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":216702,"byte_end":216705,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ Similarly the [`LifeCycle::Size`] method occurs during [`layout`], and","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":216706,"byte_end":216780,"line_start":201,"line_end":201,"column_start":1,"column_end":75}},{"value":"/ [`LifeCycle::HotChanged`] can occur both during [`event`] (if the mouse","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":216781,"byte_end":216856,"line_start":202,"line_end":202,"column_start":1,"column_end":76}},{"value":"/ moves over a widget) or during [`layout`], if a widget is resized and","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":216857,"byte_end":216930,"line_start":203,"line_end":203,"column_start":1,"column_end":74}},{"value":"/ that moves it under the mouse.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":216931,"byte_end":216965,"line_start":204,"line_end":204,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":216966,"byte_end":216969,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ [`event`]: crate::Widget::event","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":216970,"byte_end":217005,"line_start":206,"line_end":206,"column_start":1,"column_end":36}},{"value":"/ [`update`]: crate::Widget::update","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":217006,"byte_end":217043,"line_start":207,"line_end":207,"column_start":1,"column_end":38}},{"value":"/ [`layout`]: crate::Widget::layout","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":217044,"byte_end":217081,"line_start":208,"line_end":208,"column_start":1,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6628},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":220077,"byte_end":220093,"line_start":280,"line_end":280,"column_start":5,"column_end":21},"name":"RouteWidgetAdded","qualname":"::event::InternalLifeCycle::RouteWidgetAdded","value":"InternalLifeCycle::RouteWidgetAdded","parent":{"krate":0,"index":6627},"children":[],"decl_id":null,"docs":" Used to route the `WidgetAdded` event to the required widgets.\n","sig":null,"attributes":[{"value":"/ Used to route the `WidgetAdded` event to the required widgets.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":220006,"byte_end":220072,"line_start":279,"line_end":279,"column_start":5,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":6630},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":220147,"byte_end":220164,"line_start":282,"line_end":282,"column_start":5,"column_end":22},"name":"RouteFocusChanged","qualname":"::event::InternalLifeCycle::RouteFocusChanged","value":"InternalLifeCycle::RouteFocusChanged { old, new }","parent":{"krate":0,"index":6627},"children":[],"decl_id":null,"docs":" Used to route the `FocusChanged` event.\n","sig":null,"attributes":[{"value":"/ Used to route the `FocusChanged` event.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":220099,"byte_end":220142,"line_start":281,"line_end":281,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":6627},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":219982,"byte_end":219999,"line_start":278,"line_end":278,"column_start":10,"column_end":27},"name":"InternalLifeCycle","qualname":"::event::InternalLifeCycle","value":"pub enum InternalLifeCycle {\n    RouteWidgetAdded,\n    RouteFocusChanged {\n            old: Option<WidgetId>,\n            new: Option<WidgetId>,\n        },\n}","parent":null,"children":[{"krate":0,"index":6628},{"krate":0,"index":6630}],"decl_id":null,"docs":" Internal lifecycle events used by druid inside [`WidgetPod`].","sig":null,"attributes":[{"value":"/ Internal lifecycle events used by druid inside [`WidgetPod`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":219692,"byte_end":219757,"line_start":270,"line_end":270,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":219758,"byte_end":219761,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ These events are translated into regular [`LifeCycle`] events","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":219762,"byte_end":219827,"line_start":272,"line_end":272,"column_start":1,"column_end":66}},{"value":"/ and should not be used directly.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":219828,"byte_end":219864,"line_start":273,"line_end":273,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":219865,"byte_end":219868,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ [`WidgetPod`]: struct.WidgetPod.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":219869,"byte_end":219909,"line_start":275,"line_end":275,"column_start":1,"column_end":41}},{"value":"/ [`LifeCycle`]: enum.LifeCycle.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":219910,"byte_end":219948,"line_start":276,"line_end":276,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1411},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":221137,"byte_end":221153,"line_start":309,"line_end":309,"column_start":12,"column_end":28},"name":"transform_scroll","qualname":"<Event>::transform_scroll","value":"pub fn transform_scroll(&Self, Vec2, Rect, bool) -> Option<Event>","parent":null,"children":[],"decl_id":null,"docs":" Transform the event for the contents of a scrolling container.","sig":null,"attributes":[{"value":"/ Transform the event for the contents of a scrolling container.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":220884,"byte_end":220950,"line_start":304,"line_end":304,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":220955,"byte_end":220958,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ the `force` flag is used to ensure an event is delivered even","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":220963,"byte_end":221028,"line_start":306,"line_end":306,"column_start":5,"column_end":70}},{"value":"/ if the cursor is out of the viewport, such as if the contents are active","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":221033,"byte_end":221109,"line_start":307,"line_end":307,"column_start":5,"column_end":81}},{"value":"/ or hot.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":221114,"byte_end":221125,"line_start":308,"line_end":308,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":222894,"byte_end":222920,"line_start":353,"line_end":353,"column_start":12,"column_end":38},"name":"should_propagate_to_hidden","qualname":"<Event>::should_propagate_to_hidden","value":"pub fn should_propagate_to_hidden(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this event should be sent to widgets which are currently not visible\n (for example the hidden tabs in a tabs widget).\n","sig":null,"attributes":[{"value":"/ Whether this event should be sent to widgets which are currently not visible","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":222746,"byte_end":222826,"line_start":351,"line_end":351,"column_start":5,"column_end":85}},{"value":"/ (for example the hidden tabs in a tabs widget).","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":222831,"byte_end":222882,"line_start":352,"line_end":352,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1414},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":223651,"byte_end":223677,"line_start":377,"line_end":377,"column_start":12,"column_end":38},"name":"should_propagate_to_hidden","qualname":"<LifeCycle>::should_propagate_to_hidden","value":"pub fn should_propagate_to_hidden(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this event should be sent to widgets which are currently not visible\n (for example the hidden tabs in a tabs widget).\n","sig":null,"attributes":[{"value":"/ Whether this event should be sent to widgets which are currently not visible","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":223503,"byte_end":223583,"line_start":375,"line_end":375,"column_start":5,"column_end":85}},{"value":"/ (for example the hidden tabs in a tabs widget).","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":223588,"byte_end":223639,"line_start":376,"line_end":376,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":6637},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":227084,"byte_end":227096,"line_start":32,"line_end":32,"column_start":12,"column_end":24},"name":"ExtEventSink","qualname":"::ext_event::ExtEventSink","value":"ExtEventSink {  }","parent":null,"children":[{"krate":0,"index":6638},{"krate":0,"index":6639}],"decl_id":null,"docs":" A thing that can move into other threads and be used to submit commands back\n to the running application.","sig":null,"attributes":[{"value":"/ A thing that can move into other threads and be used to submit commands back","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":226863,"byte_end":226943,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ to the running application.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":226944,"byte_end":226975,"line_start":28,"line_end":28,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":226976,"byte_end":226979,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This API is preliminary, and may be changed or removed without warning.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":226980,"byte_end":227055,"line_start":30,"line_end":30,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6648},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":228077,"byte_end":228090,"line_start":55,"line_end":55,"column_start":12,"column_end":25},"name":"ExtEventError","qualname":"::ext_event::ExtEventError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error that occurs if an external event cannot be submitted.\n This probably means that the application has gone away.\n","sig":null,"attributes":[{"value":"/ An error that occurs if an external event cannot be submitted.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":227915,"byte_end":227981,"line_start":52,"line_end":52,"column_start":1,"column_end":67}},{"value":"/ This probably means that the application has gone away.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":227982,"byte_end":228041,"line_start":53,"line_end":53,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":229556,"byte_end":229570,"line_start":102,"line_end":102,"column_start":12,"column_end":26},"name":"submit_command","qualname":"<ExtEventSink>::submit_command","value":"pub fn submit_command<T: Any + Send, impl Into<Box<T>>: Into<Box<T>>,\nimpl Into<Target>: Into<Target>>(&Self, Selector<T>, impl Into<Box<T>>,\nimpl Into<Target>) -> Result<(), ExtEventError>","parent":null,"children":[],"decl_id":null,"docs":" Submit a [`Command`] to the running application.","sig":null,"attributes":[{"value":"/ Submit a [`Command`] to the running application.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":228918,"byte_end":228970,"line_start":88,"line_end":88,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":228975,"byte_end":228978,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ [`Command`] is not thread safe, so you cannot submit it directly;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":228983,"byte_end":229052,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/ instead you have to pass the [`Selector`] and the payload","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":229057,"byte_end":229118,"line_start":91,"line_end":91,"column_start":5,"column_end":66}},{"value":"/ separately, and it will be turned into a [`Command`] when it is received.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":229123,"byte_end":229200,"line_start":92,"line_end":92,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":229205,"byte_end":229208,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ The `payload` must implement `Any + Send`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":229213,"byte_end":229259,"line_start":94,"line_end":94,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":229264,"byte_end":229267,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ If the [`Target::Auto`] is equivalent to [`Target::Global`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":229272,"byte_end":229336,"line_start":96,"line_end":96,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":229341,"byte_end":229344,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ [`Command`]: struct.Command.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":229349,"byte_end":229385,"line_start":98,"line_end":98,"column_start":5,"column_end":41}},{"value":"/ [`Selector`]: struct.Selector.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":229390,"byte_end":229428,"line_start":99,"line_end":99,"column_start":5,"column_end":43}},{"value":"/ [`Target::Auto`]: enum.Target.html#variant.Auto","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":229433,"byte_end":229484,"line_start":100,"line_end":100,"column_start":5,"column_end":56}},{"value":"/ [`Target::Global`]: enum.Target.html#variant.Global","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":229489,"byte_end":229544,"line_start":101,"line_end":101,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6661},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":233762,"byte_end":233777,"line_start":91,"line_end":91,"column_start":12,"column_end":27},"name":"LocalizedString","qualname":"::localization::LocalizedString","value":"LocalizedString {  }","parent":null,"children":[{"krate":0,"index":6663},{"krate":0,"index":6664},{"krate":0,"index":6665},{"krate":0,"index":6666},{"krate":0,"index":6667}],"decl_id":null,"docs":" A string that can be localized based on the current locale.","sig":null,"attributes":[{"value":"/ A string that can be localized based on the current locale.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":233529,"byte_end":233592,"line_start":86,"line_end":86,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":233593,"byte_end":233596,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ At its simplest, a `LocalizedString` is a key that can be resolved","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":233597,"byte_end":233667,"line_start":88,"line_end":88,"column_start":1,"column_end":71}},{"value":"/ against a map of localized strings for a given locale.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":233668,"byte_end":233726,"line_start":89,"line_end":89,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1574},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":241111,"byte_end":241114,"line_start":295,"line_end":295,"column_start":18,"column_end":21},"name":"new","qualname":"<LocalizedString<T>>::new","value":"pub const fn new(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `LocalizedString` with the given key.\n","sig":null,"attributes":[{"value":"/ Create a new `LocalizedString` with the given key.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":241039,"byte_end":241093,"line_start":294,"line_end":294,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":241466,"byte_end":241482,"line_start":308,"line_end":308,"column_start":12,"column_end":28},"name":"with_placeholder","qualname":"<LocalizedString<T>>::with_placeholder","value":"pub fn with_placeholder<impl Into<ArcStr>: Into<ArcStr>>(Self,\nimpl Into<ArcStr>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a placeholder value. This will be used if localization fails.","sig":null,"attributes":[{"value":"/ Add a placeholder value. This will be used if localization fails.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":241324,"byte_end":241393,"line_start":305,"line_end":305,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":241398,"byte_end":241401,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ This is intended for use during prototyping.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":241406,"byte_end":241454,"line_start":307,"line_end":307,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1577},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":241770,"byte_end":241783,"line_start":315,"line_end":315,"column_start":12,"column_end":25},"name":"localized_str","qualname":"<LocalizedString<T>>::localized_str","value":"pub fn localized_str(&Self) -> ArcStr","parent":null,"children":[],"decl_id":null,"docs":" Return the localized value for this string, or the placeholder, if\n the localization is missing, or the key if there is no placeholder.\n","sig":null,"attributes":[{"value":"/ Return the localized value for this string, or the placeholder, if","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":241612,"byte_end":241682,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ the localization is missing, or the key if there is no placeholder.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":241687,"byte_end":241758,"line_start":314,"line_end":314,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1580},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":242145,"byte_end":242153,"line_start":325,"line_end":325,"column_start":12,"column_end":20},"name":"with_arg","qualname":"<LocalizedString<T>>::with_arg","value":"pub fn with_arg<impl Fn(&T, &Env) -> FluentValue<'static> + 'static: Fn(&T,\n&Env) -> FluentValue +\n'static>(Self, &'static str,\nimpl Fn(&T, &Env) -> FluentValue<'static> + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a named argument and a corresponding closure. This closure\n is a function that will return a value for the given key from the current\n environment and data.\n","sig":null,"attributes":[{"value":"/ Add a named argument and a corresponding closure. This closure","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":241955,"byte_end":242021,"line_start":322,"line_end":322,"column_start":5,"column_end":71}},{"value":"/ is a function that will return a value for the given key from the current","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":242026,"byte_end":242103,"line_start":323,"line_end":323,"column_start":5,"column_end":82}},{"value":"/ environment and data.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":242108,"byte_end":242133,"line_start":324,"line_end":324,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1582},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":242608,"byte_end":242615,"line_start":340,"line_end":340,"column_start":12,"column_end":19},"name":"resolve","qualname":"<LocalizedString<T>>::resolve","value":"pub fn resolve<'a>(&'a mut Self, &T, &Env) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Lazily compute the localized value for this string based on the provided\n environment and data.","sig":null,"attributes":[{"value":"/ Lazily compute the localized value for this string based on the provided","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":242411,"byte_end":242487,"line_start":336,"line_end":336,"column_start":5,"column_end":81}},{"value":"/ environment and data.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":242492,"byte_end":242517,"line_start":337,"line_end":337,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":242522,"byte_end":242525,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if the current value of the string has changed.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":242530,"byte_end":242596,"line_start":339,"line_end":339,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":6674},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":249793,"byte_end":249801,"line_start":117,"line_end":117,"column_start":12,"column_end":20},"name":"MenuDesc","qualname":"::menu::MenuDesc","value":"MenuDesc {  }","parent":null,"children":[{"krate":0,"index":6676},{"krate":0,"index":6677}],"decl_id":null,"docs":" A platform-agnostic description of an application, window, or context\n menu.\n","sig":null,"attributes":[{"value":"/ A platform-agnostic description of an application, window, or context","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":249681,"byte_end":249754,"line_start":114,"line_end":114,"column_start":1,"column_end":74}},{"value":"/ menu.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":249755,"byte_end":249764,"line_start":115,"line_end":115,"column_start":1,"column_end":10}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6683},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":250084,"byte_end":250088,"line_start":127,"line_end":127,"column_start":5,"column_end":9},"name":"Item","qualname":"::menu::MenuEntry::Item","value":"MenuEntry::Item(MenuItem<T>)","parent":{"krate":0,"index":6681},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6686},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":250107,"byte_end":250114,"line_start":128,"line_end":128,"column_start":5,"column_end":12},"name":"SubMenu","qualname":"::menu::MenuEntry::SubMenu","value":"MenuEntry::SubMenu(MenuDesc<T>)","parent":{"krate":0,"index":6681},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6689},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":250133,"byte_end":250142,"line_start":129,"line_end":129,"column_start":5,"column_end":14},"name":"Separator","qualname":"::menu::MenuEntry::Separator","value":"MenuEntry::Separator","parent":{"krate":0,"index":6681},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6681},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":250065,"byte_end":250074,"line_start":126,"line_end":126,"column_start":10,"column_end":19},"name":"MenuEntry","qualname":"::menu::MenuEntry","value":"pub enum MenuEntry<T> { Item(MenuItem<T>), SubMenu(MenuDesc<T>), Separator, }","parent":null,"children":[{"krate":0,"index":6683},{"krate":0,"index":6686},{"krate":0,"index":6689}],"decl_id":null,"docs":" An item in a menu, which may be a normal item, a submenu, or a separator.\n","sig":null,"attributes":[{"value":"/ An item in a menu, which may be a normal item, a submenu, or a separator.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":249917,"byte_end":249994,"line_start":123,"line_end":123,"column_start":1,"column_end":78}},{"value":"allow(clippy :: large_enum_variant)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":250019,"byte_end":250055,"line_start":125,"line_end":125,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":6697},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":250607,"byte_end":250615,"line_start":143,"line_end":143,"column_start":12,"column_end":20},"name":"MenuItem","qualname":"::menu::MenuItem","value":"MenuItem {  }","parent":null,"children":[{"krate":0,"index":6699},{"krate":0,"index":6700},{"krate":0,"index":6701},{"krate":0,"index":6702},{"krate":0,"index":6703},{"krate":0,"index":6704},{"krate":0,"index":6705}],"decl_id":null,"docs":" A normal menu item.","sig":null,"attributes":[{"value":"/ A normal menu item.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":250147,"byte_end":250170,"line_start":132,"line_end":132,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":250171,"byte_end":250174,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ A `MenuItem` always has a title (a [`LocalizedString`]) as well a [`Command`],","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":250175,"byte_end":250257,"line_start":134,"line_end":134,"column_start":1,"column_end":83}},{"value":"/ that is sent to the application when the item is selected.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":250258,"byte_end":250320,"line_start":135,"line_end":135,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":250321,"byte_end":250324,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ In addition, other properties can be set during construction, such as whether","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":250325,"byte_end":250406,"line_start":137,"line_end":137,"column_start":1,"column_end":82}},{"value":"/ the item is selected (checked), or enabled, or if it has a hotkey.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":250407,"byte_end":250477,"line_start":138,"line_end":138,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":250478,"byte_end":250481,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ [`LocalizedString`]: struct.LocalizedString.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":250482,"byte_end":250534,"line_start":140,"line_end":140,"column_start":1,"column_end":53}},{"value":"/ [`Command`]: struct.Command.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":250535,"byte_end":250571,"line_start":141,"line_end":141,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":6712},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":251012,"byte_end":251023,"line_start":157,"line_end":157,"column_start":12,"column_end":23},"name":"ContextMenu","qualname":"::menu::ContextMenu","value":"ContextMenu {  }","parent":null,"children":[{"krate":0,"index":6714},{"krate":0,"index":6715}],"decl_id":null,"docs":" A menu displayed as a pop-over.\n","sig":null,"attributes":[{"value":"/ A menu displayed as a pop-over.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":250941,"byte_end":250976,"line_start":155,"line_end":155,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1642},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":251519,"byte_end":251522,"line_start":173,"line_end":173,"column_start":12,"column_end":15},"name":"new","qualname":"<MenuItem<T>>::new","value":"pub fn new<impl Into<Command>: Into<Command>>(LocalizedString<T>,\nimpl Into<Command>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `MenuItem`.\n","sig":null,"attributes":[{"value":"/ Create a new `MenuItem`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":251479,"byte_end":251507,"line_start":172,"line_end":172,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1644},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":252337,"byte_end":252343,"line_start":198,"line_end":198,"column_start":12,"column_end":18},"name":"hotkey","qualname":"<MenuItem<T>>::hotkey","value":"pub fn hotkey<impl Into<Option<RawMods>>: Into<Option<RawMods>>,\nimpl IntoKey: IntoKey>(Self, impl Into<Option<RawMods>>, impl IntoKey) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A builder method that adds a hotkey for this item.","sig":null,"attributes":[{"value":"/ A builder method that adds a hotkey for this item.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":251845,"byte_end":251899,"line_start":185,"line_end":185,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":251904,"byte_end":251907,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":251912,"byte_end":251925,"line_start":187,"line_end":187,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":251930,"byte_end":251933,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":251938,"byte_end":251945,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ # use druid::{LocalizedString, MenuDesc, MenuItem, Selector, SysMods};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":251950,"byte_end":252024,"line_start":190,"line_end":190,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":252029,"byte_end":252032,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let item = MenuItem::new(LocalizedString::new(\"My Menu Item\"), Selector::new(\"My Selector\"))","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":252037,"byte_end":252133,"line_start":192,"line_end":192,"column_start":5,"column_end":101}},{"value":"/     .hotkey(SysMods::Cmd, \"m\");","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":252138,"byte_end":252173,"line_start":193,"line_end":193,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":252178,"byte_end":252181,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # // hide the type param in or example code by letting it be inferred here","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":252186,"byte_end":252264,"line_start":195,"line_end":195,"column_start":5,"column_end":83}},{"value":"/ # MenuDesc::<u32>::empty().append(item);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":252269,"byte_end":252313,"line_start":196,"line_end":196,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":252318,"byte_end":252325,"line_start":197,"line_end":197,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1647},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":252532,"byte_end":252540,"line_start":204,"line_end":204,"column_start":12,"column_end":20},"name":"disabled","qualname":"<MenuItem<T>>::disabled","value":"pub fn disabled(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Disable this menu item.\n","sig":null,"attributes":[{"value":"/ Disable this menu item.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":252493,"byte_end":252520,"line_start":203,"line_end":203,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1648},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":252688,"byte_end":252699,"line_start":210,"line_end":210,"column_start":12,"column_end":23},"name":"disabled_if","qualname":"<MenuItem<T>>::disabled_if","value":"pub fn disabled_if<impl FnMut() -> bool: FnMut() ->\nbool>(Self, impl FnMut() -> bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Disable this menu item if the provided predicate is true.\n","sig":null,"attributes":[{"value":"/ Disable this menu item if the provided predicate is true.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":252615,"byte_end":252676,"line_start":209,"line_end":209,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1650},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":252937,"byte_end":252945,"line_start":219,"line_end":219,"column_start":12,"column_end":20},"name":"selected","qualname":"<MenuItem<T>>::selected","value":"pub fn selected(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Mark this menu item as selected. This will usually be indicated by\n a checkmark.\n","sig":null,"attributes":[{"value":"/ Mark this menu item as selected. This will usually be indicated by","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":252834,"byte_end":252904,"line_start":217,"line_end":217,"column_start":5,"column_end":75}},{"value":"/ a checkmark.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":252909,"byte_end":252925,"line_start":218,"line_end":218,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1651},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":253098,"byte_end":253109,"line_start":225,"line_end":225,"column_start":12,"column_end":23},"name":"selected_if","qualname":"<MenuItem<T>>::selected_if","value":"pub fn selected_if<impl FnMut() -> bool: FnMut() ->\nbool>(Self, impl FnMut() -> bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Mark this item as selected, if the provided predicate is true.\n","sig":null,"attributes":[{"value":"/ Mark this item as selected, if the provided predicate is true.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":253020,"byte_end":253086,"line_start":224,"line_end":224,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1655},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":253315,"byte_end":253320,"line_start":235,"line_end":235,"column_start":12,"column_end":17},"name":"empty","qualname":"<MenuDesc<T>>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new, empty menu.\n","sig":null,"attributes":[{"value":"/ Create a new, empty menu.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":253274,"byte_end":253303,"line_start":234,"line_end":234,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1656},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":253443,"byte_end":253446,"line_start":240,"line_end":240,"column_start":12,"column_end":15},"name":"new","qualname":"<MenuDesc<T>>::new","value":"pub fn new(LocalizedString<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new menu with the given title.\n","sig":null,"attributes":[{"value":"/ Create a new menu with the given title.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":253388,"byte_end":253431,"line_start":239,"line_end":239,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1657},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":253793,"byte_end":253809,"line_start":251,"line_end":251,"column_start":12,"column_end":28},"name":"platform_default","qualname":"<MenuDesc<T>>::platform_default","value":"pub fn platform_default() -> Option<MenuDesc<T>>","parent":null,"children":[],"decl_id":null,"docs":" If this platform always expects windows to have a menu by default,\n returns a menu. Otherwise returns `None`.\n","sig":null,"attributes":[{"value":"/ If this platform always expects windows to have a menu by default,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":253630,"byte_end":253700,"line_start":248,"line_end":248,"column_start":5,"column_end":75}},{"value":"/ returns a menu. Otherwise returns `None`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":253705,"byte_end":253750,"line_start":249,"line_end":249,"column_start":5,"column_end":50}},{"value":"allow(unreachable_code)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":253755,"byte_end":253781,"line_start":250,"line_end":250,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1658},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":255000,"byte_end":255011,"line_start":284,"line_end":284,"column_start":12,"column_end":23},"name":"append_iter","qualname":"<MenuDesc<T>>::append_iter","value":"pub fn append_iter<I: Iterator<Item = MenuItem<T>>,\nimpl FnOnce() -> I: FnOnce() -> I>(Self, impl FnOnce() -> I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Given a function that produces an iterator, appends that iterator's\n items to this menu.","sig":null,"attributes":[{"value":"/ Given a function that produces an iterator, appends that iterator's","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":254211,"byte_end":254282,"line_start":262,"line_end":262,"column_start":5,"column_end":76}},{"value":"/ items to this menu.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":254287,"byte_end":254310,"line_start":263,"line_end":263,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":254315,"byte_end":254318,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":254323,"byte_end":254337,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":254342,"byte_end":254345,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":254350,"byte_end":254357,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ use druid::{Command, LocalizedString, MenuDesc, MenuItem, Selector, Target};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":254362,"byte_end":254442,"line_start":268,"line_end":268,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":254447,"byte_end":254450,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ let num_items: usize = 4;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":254455,"byte_end":254484,"line_start":270,"line_end":270,"column_start":5,"column_end":34}},{"value":"/ const MENU_COUNT_ACTION: Selector<usize> = Selector::new(\"menu-count-action\");","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":254489,"byte_end":254571,"line_start":271,"line_end":271,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":254576,"byte_end":254579,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ let my_menu: MenuDesc<u32> = MenuDesc::empty()","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":254584,"byte_end":254634,"line_start":273,"line_end":273,"column_start":5,"column_end":55}},{"value":"/     .append_iter(|| (0..num_items).map(|i| {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":254639,"byte_end":254687,"line_start":274,"line_end":274,"column_start":5,"column_end":53}},{"value":"/         MenuItem::new(","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":254692,"byte_end":254718,"line_start":275,"line_end":275,"column_start":5,"column_end":31}},{"value":"/             LocalizedString::new(\"hello-counter\").with_arg(\"count\", move |_, _| i.into()),","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":254723,"byte_end":254817,"line_start":276,"line_end":276,"column_start":5,"column_end":99}},{"value":"/             Command::new(MENU_COUNT_ACTION, i, Target::Auto),","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":254822,"byte_end":254887,"line_start":277,"line_end":277,"column_start":5,"column_end":70}},{"value":"/        )","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":254892,"byte_end":254904,"line_start":278,"line_end":278,"column_start":5,"column_end":17}},{"value":"/     })","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":254909,"byte_end":254919,"line_start":279,"line_end":279,"column_start":5,"column_end":15}},{"value":"/ );","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":254924,"byte_end":254930,"line_start":280,"line_end":280,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":254935,"byte_end":254938,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(my_menu.len(), 4);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":254943,"byte_end":254976,"line_start":282,"line_end":282,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":254981,"byte_end":254988,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1661},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":255234,"byte_end":255240,"line_start":292,"line_end":292,"column_start":12,"column_end":18},"name":"append","qualname":"<MenuDesc<T>>::append","value":"pub fn append<impl Into<MenuEntry<T>>: Into<MenuEntry<T>>>(Self,\nimpl Into<MenuEntry<T>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Append an item to this menu.\n","sig":null,"attributes":[{"value":"/ Append an item to this menu.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":255190,"byte_end":255222,"line_start":291,"line_end":291,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1663},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":255426,"byte_end":255435,"line_start":298,"line_end":298,"column_start":12,"column_end":21},"name":"append_if","qualname":"<MenuDesc<T>>::append_if","value":"pub fn append_if<impl Into<MenuEntry<T>>: Into<MenuEntry<T>>,\nimpl FnMut() -> bool: FnMut() ->\nbool>(Self, impl Into<MenuEntry<T>>, impl FnMut() -> bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Append an item to this menu if the predicate is matched.\n","sig":null,"attributes":[{"value":"/ Append an item to this menu if the predicate is matched.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":255354,"byte_end":255414,"line_start":297,"line_end":297,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1666},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":255644,"byte_end":255660,"line_start":306,"line_end":306,"column_start":12,"column_end":28},"name":"append_separator","qualname":"<MenuDesc<T>>::append_separator","value":"pub fn append_separator(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Append a separator.\n","sig":null,"attributes":[{"value":"/ Append a separator.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":255609,"byte_end":255632,"line_start":305,"line_end":305,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1667},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":255800,"byte_end":255803,"line_start":312,"line_end":312,"column_start":12,"column_end":15},"name":"len","qualname":"<MenuDesc<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of items in the menu.\n","sig":null,"attributes":[{"value":"/ The number of items in the menu.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":255752,"byte_end":255788,"line_start":311,"line_end":311,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1668},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":255919,"byte_end":255927,"line_start":317,"line_end":317,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<MenuDesc<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the menu contains no items.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the menu contains no items.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":255858,"byte_end":255907,"line_start":316,"line_end":316,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":258604,"byte_end":258607,"line_start":392,"line_end":392,"column_start":12,"column_end":15},"name":"new","qualname":"<ContextMenu<T>>::new","value":"pub fn new(MenuDesc<T>, Point) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ContextMenu`.\n","sig":null,"attributes":[{"value":"/ Create a new `ContextMenu`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":258561,"byte_end":258592,"line_start":391,"line_end":391,"column_start":5,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":1700},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":260589,"byte_end":260592,"line_start":456,"line_end":456,"column_start":9,"column_end":12},"name":"sys","qualname":"::menu::sys","value":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","parent":null,"children":[{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1714},{"krate":0,"index":1743}],"decl_id":null,"docs":" Pre-configured, platform appropriate menus and menu items.\n","sig":null,"attributes":[{"value":"/ Pre-configured, platform appropriate menus and menu items.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":260518,"byte_end":260580,"line_start":455,"line_end":455,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":1702},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":260674,"byte_end":260680,"line_start":460,"line_end":460,"column_start":13,"column_end":19},"name":"common","qualname":"::menu::sys::common","value":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","parent":null,"children":[{"krate":0,"index":1703},{"krate":0,"index":1704},{"krate":0,"index":1706},{"krate":0,"index":1708},{"krate":0,"index":1710},{"krate":0,"index":1712}],"decl_id":null,"docs":" Menu items that exist on all platforms.\n","sig":null,"attributes":[{"value":"/ Menu items that exist on all platforms.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":260618,"byte_end":260661,"line_start":459,"line_end":459,"column_start":5,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":1704},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":260739,"byte_end":260742,"line_start":463,"line_end":463,"column_start":16,"column_end":19},"name":"cut","qualname":"::menu::sys::common::cut","value":"pub fn cut<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" 'Cut'.\n","sig":null,"attributes":[{"value":"/ 'Cut'.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":260713,"byte_end":260723,"line_start":462,"line_end":462,"column_start":9,"column_end":19}}]},{"kind":"Function","id":{"krate":0,"index":1706},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":260956,"byte_end":260960,"line_start":469,"line_end":469,"column_start":16,"column_end":20},"name":"copy","qualname":"::menu::sys::common::copy","value":"pub fn copy<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Copy' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Copy' menu item.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":260915,"byte_end":260940,"line_start":468,"line_end":468,"column_start":9,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":1708},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":261177,"byte_end":261182,"line_start":475,"line_end":475,"column_start":16,"column_end":21},"name":"paste","qualname":"::menu::sys::common::paste","value":"pub fn paste<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Paste' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Paste' menu item.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":261135,"byte_end":261161,"line_start":474,"line_end":474,"column_start":9,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":1710},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":261400,"byte_end":261404,"line_start":481,"line_end":481,"column_start":16,"column_end":20},"name":"undo","qualname":"::menu::sys::common::undo","value":"pub fn undo<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Undo' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Undo' menu item.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":261359,"byte_end":261384,"line_start":480,"line_end":480,"column_start":9,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":1712},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":261620,"byte_end":261624,"line_start":487,"line_end":487,"column_start":16,"column_end":20},"name":"redo","qualname":"::menu::sys::common::redo","value":"pub fn redo<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Redo' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Redo' menu item.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":261579,"byte_end":261604,"line_start":486,"line_end":486,"column_start":9,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":1714},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":262040,"byte_end":262043,"line_start":502,"line_end":502,"column_start":13,"column_end":16},"name":"win","qualname":"::menu::sys::win","value":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","parent":null,"children":[{"krate":0,"index":1715},{"krate":0,"index":1716}],"decl_id":null,"docs":" Windows.\n","sig":null,"attributes":[{"value":"/ Windows.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":262015,"byte_end":262027,"line_start":501,"line_end":501,"column_start":5,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":1716},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":262325,"byte_end":262329,"line_start":510,"line_end":510,"column_start":17,"column_end":21},"name":"file","qualname":"::menu::sys::win::file","value":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","parent":null,"children":[{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1721},{"krate":0,"index":1723},{"krate":0,"index":1725},{"krate":0,"index":1727},{"krate":0,"index":1729},{"krate":0,"index":1731},{"krate":0,"index":1733},{"krate":0,"index":1735},{"krate":0,"index":1737},{"krate":0,"index":1739},{"krate":0,"index":1741}],"decl_id":null,"docs":" The 'File' menu.","sig":null,"attributes":[{"value":"/ The 'File' menu.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":262077,"byte_end":262097,"line_start":505,"line_end":505,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":262106,"byte_end":262109,"line_start":506,"line_end":506,"column_start":9,"column_end":12}},{"value":"/ These items are taken from [the win32 documentation][].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":262118,"byte_end":262177,"line_start":507,"line_end":507,"column_start":9,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":262186,"byte_end":262189,"line_start":508,"line_end":508,"column_start":9,"column_end":12}},{"value":"/ [the win32 documentation]: https://docs.microsoft.com/en-us/windows/win32/uxguide/cmd-menus#standard-menus","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":262198,"byte_end":262308,"line_start":509,"line_end":509,"column_start":9,"column_end":119}}]},{"kind":"Function","id":{"krate":0,"index":1721},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":262663,"byte_end":262670,"line_start":519,"line_end":519,"column_start":20,"column_end":27},"name":"default","qualname":"::menu::sys::win::file::default","value":"pub fn default<T: Data>() -> MenuDesc<T>","parent":null,"children":[],"decl_id":null,"docs":" A default file menu.","sig":null,"attributes":[{"value":"/ A default file menu.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":262413,"byte_end":262437,"line_start":514,"line_end":514,"column_start":13,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":262450,"byte_end":262453,"line_start":515,"line_end":515,"column_start":13,"column_end":16}},{"value":"/ This will not be suitable for many applications; you should","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":262466,"byte_end":262529,"line_start":516,"line_end":516,"column_start":13,"column_end":76}},{"value":"/ build the menu you need manually, using the items defined here","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":262542,"byte_end":262608,"line_start":517,"line_end":517,"column_start":13,"column_end":79}},{"value":"/ where appropriate.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":262621,"byte_end":262643,"line_start":518,"line_end":518,"column_start":13,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":1723},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":263256,"byte_end":263259,"line_start":534,"line_end":534,"column_start":20,"column_end":23},"name":"new","qualname":"::menu::sys::win::file::new","value":"pub fn new<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'New' menu item.\n","sig":null,"attributes":[{"value":"/ The 'New' menu item.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":263212,"byte_end":263236,"line_start":533,"line_end":533,"column_start":13,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":1725},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":263561,"byte_end":263565,"line_start":543,"line_end":543,"column_start":20,"column_end":24},"name":"open","qualname":"::menu::sys::win::file::open","value":"pub fn open<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Open...' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Open...' menu item.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":263513,"byte_end":263541,"line_start":542,"line_end":542,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1727},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":263908,"byte_end":263913,"line_start":552,"line_end":552,"column_start":20,"column_end":25},"name":"close","qualname":"::menu::sys::win::file::close","value":"pub fn close<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Close' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Close' menu item.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":263862,"byte_end":263888,"line_start":551,"line_end":551,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1729},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":264175,"byte_end":264179,"line_start":560,"line_end":560,"column_start":20,"column_end":24},"name":"save","qualname":"::menu::sys::win::file::save","value":"pub fn save<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Save' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Save' menu item.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":264130,"byte_end":264155,"line_start":559,"line_end":559,"column_start":13,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":1731},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":264581,"byte_end":264594,"line_start":571,"line_end":571,"column_start":20,"column_end":33},"name":"save_ellipsis","qualname":"::menu::sys::win::file::save_ellipsis","value":"pub fn save_ellipsis<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Save...' menu item.","sig":null,"attributes":[{"value":"/ The 'Save...' menu item.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":264435,"byte_end":264463,"line_start":568,"line_end":568,"column_start":13,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":264476,"byte_end":264479,"line_start":569,"line_end":569,"column_start":13,"column_end":16}},{"value":"/ This is used if we need to show a dialog to select save location.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":264492,"byte_end":264561,"line_start":570,"line_end":570,"column_start":13,"column_end":82}}]},{"kind":"Function","id":{"krate":0,"index":1733},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":264951,"byte_end":264958,"line_start":580,"line_end":580,"column_start":20,"column_end":27},"name":"save_as","qualname":"::menu::sys::win::file::save_as","value":"pub fn save_as<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Save as...' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Save as...' menu item.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":264900,"byte_end":264931,"line_start":579,"line_end":579,"column_start":13,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":1735},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":265312,"byte_end":265317,"line_start":589,"line_end":589,"column_start":20,"column_end":25},"name":"print","qualname":"::menu::sys::win::file::print","value":"pub fn print<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Print...' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Print...' menu item.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":265263,"byte_end":265292,"line_start":588,"line_end":588,"column_start":13,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":1737},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":265624,"byte_end":265637,"line_start":598,"line_end":598,"column_start":20,"column_end":33},"name":"print_preview","qualname":"::menu::sys::win::file::print_preview","value":"pub fn print_preview<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Print Preview' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Print Preview' menu item.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":265570,"byte_end":265604,"line_start":597,"line_end":597,"column_start":13,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":1739},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":265917,"byte_end":265927,"line_start":606,"line_end":606,"column_start":20,"column_end":30},"name":"page_setup","qualname":"::menu::sys::win::file::page_setup","value":"pub fn page_setup<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Page Setup...' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Page Setup...' menu item.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":265863,"byte_end":265897,"line_start":605,"line_end":605,"column_start":13,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":1741},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":266193,"byte_end":266197,"line_start":614,"line_end":614,"column_start":20,"column_end":24},"name":"exit","qualname":"::menu::sys::win::file::exit","value":"pub fn exit<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Exit' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Exit' menu item.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":266148,"byte_end":266173,"line_start":613,"line_end":613,"column_start":13,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":1743},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":266437,"byte_end":266440,"line_start":624,"line_end":624,"column_start":13,"column_end":16},"name":"mac","qualname":"::menu::sys::mac","value":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","parent":null,"children":[{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1747},{"krate":0,"index":1763}],"decl_id":null,"docs":" macOS.\n","sig":null,"attributes":[{"value":"/ macOS.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":266414,"byte_end":266424,"line_start":623,"line_end":623,"column_start":5,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1745},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":266517,"byte_end":266525,"line_start":628,"line_end":628,"column_start":16,"column_end":24},"name":"menu_bar","qualname":"::menu::sys::mac::menu_bar","value":"pub fn menu_bar<T: Data>() -> MenuDesc<T>","parent":null,"children":[],"decl_id":null,"docs":" A basic macOS menu bar.\n","sig":null,"attributes":[{"value":"/ A basic macOS menu bar.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":266474,"byte_end":266501,"line_start":627,"line_end":627,"column_start":9,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":1747},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":266755,"byte_end":266766,"line_start":635,"line_end":635,"column_start":17,"column_end":28},"name":"application","qualname":"::menu::sys::mac::application","value":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","parent":null,"children":[{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1751},{"krate":0,"index":1753},{"krate":0,"index":1755},{"krate":0,"index":1757},{"krate":0,"index":1759},{"krate":0,"index":1761}],"decl_id":null,"docs":" The application menu\n","sig":null,"attributes":[{"value":"/ The application menu","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":266714,"byte_end":266738,"line_start":634,"line_end":634,"column_start":9,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":1749},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":266861,"byte_end":266868,"line_start":639,"line_end":639,"column_start":20,"column_end":27},"name":"default","qualname":"::menu::sys::mac::application::default","value":"pub fn default<T: Data>() -> MenuDesc<T>","parent":null,"children":[],"decl_id":null,"docs":" The default Application menu.\n","sig":null,"attributes":[{"value":"/ The default Application menu.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":266808,"byte_end":266841,"line_start":638,"line_end":638,"column_start":13,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":1751},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":267524,"byte_end":267529,"line_start":654,"line_end":654,"column_start":20,"column_end":25},"name":"about","qualname":"::menu::sys::mac::application::about","value":"pub fn about<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'About App' menu item.\n","sig":null,"attributes":[{"value":"/ The 'About App' menu item.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":267474,"byte_end":267504,"line_start":653,"line_end":653,"column_start":13,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":1753},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":267792,"byte_end":267803,"line_start":662,"line_end":662,"column_start":20,"column_end":31},"name":"preferences","qualname":"::menu::sys::mac::application::preferences","value":"pub fn preferences<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The preferences menu item.\n","sig":null,"attributes":[{"value":"/ The preferences menu item.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":267742,"byte_end":267772,"line_start":661,"line_end":661,"column_start":13,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":1755},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":268120,"byte_end":268124,"line_start":671,"line_end":671,"column_start":20,"column_end":24},"name":"hide","qualname":"::menu::sys::mac::application::hide","value":"pub fn hide<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Hide' builtin menu item.\n","sig":null,"attributes":[{"value":"/ The 'Hide' builtin menu item.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":268067,"byte_end":268100,"line_start":670,"line_end":670,"column_start":13,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":1757},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":268445,"byte_end":268456,"line_start":680,"line_end":680,"column_start":20,"column_end":31},"name":"hide_others","qualname":"::menu::sys::mac::application::hide_others","value":"pub fn hide_others<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Hide Others' builtin menu item.\n","sig":null,"attributes":[{"value":"/ The 'Hide Others' builtin menu item.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":268385,"byte_end":268425,"line_start":679,"line_end":679,"column_start":13,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":1759},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":268813,"byte_end":268821,"line_start":690,"line_end":690,"column_start":20,"column_end":28},"name":"show_all","qualname":"::menu::sys::mac::application::show_all","value":"pub fn show_all<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'show all' builtin menu item\n","sig":null,"attributes":[{"value":"/ The 'show all' builtin menu item","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":268718,"byte_end":268754,"line_start":688,"line_end":688,"column_start":13,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":1761},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":269076,"byte_end":269080,"line_start":698,"line_end":698,"column_start":20,"column_end":24},"name":"quit","qualname":"::menu::sys::mac::application::quit","value":"pub fn quit<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Quit' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Quit' menu item.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":269031,"byte_end":269056,"line_start":697,"line_end":697,"column_start":13,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":1763},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":269373,"byte_end":269377,"line_start":707,"line_end":707,"column_start":17,"column_end":21},"name":"file","qualname":"::menu::sys::mac::file","value":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","parent":null,"children":[{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1768},{"krate":0,"index":1770},{"krate":0,"index":1772},{"krate":0,"index":1774},{"krate":0,"index":1776},{"krate":0,"index":1778},{"krate":0,"index":1780},{"krate":0,"index":1782},{"krate":0,"index":1784}],"decl_id":null,"docs":" The file menu.\n","sig":null,"attributes":[{"value":"/ The file menu.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":269338,"byte_end":269356,"line_start":706,"line_end":706,"column_start":9,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":1768},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":269711,"byte_end":269718,"line_start":716,"line_end":716,"column_start":20,"column_end":27},"name":"default","qualname":"::menu::sys::mac::file::default","value":"pub fn default<T: Data>() -> MenuDesc<T>","parent":null,"children":[],"decl_id":null,"docs":" A default file menu.","sig":null,"attributes":[{"value":"/ A default file menu.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":269461,"byte_end":269485,"line_start":711,"line_end":711,"column_start":13,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":269498,"byte_end":269501,"line_start":712,"line_end":712,"column_start":13,"column_end":16}},{"value":"/ This will not be suitable for many applications; you should","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":269514,"byte_end":269577,"line_start":713,"line_end":713,"column_start":13,"column_end":76}},{"value":"/ build the menu you need manually, using the items defined here","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":269590,"byte_end":269656,"line_start":714,"line_end":714,"column_start":13,"column_end":79}},{"value":"/ where appropriate.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":269669,"byte_end":269691,"line_start":715,"line_end":715,"column_start":13,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":1770},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":270704,"byte_end":270712,"line_start":737,"line_end":737,"column_start":20,"column_end":28},"name":"new_file","qualname":"::menu::sys::mac::file::new_file","value":"pub fn new_file<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'New Window' item.","sig":null,"attributes":[{"value":"/ The 'New Window' item.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":270323,"byte_end":270349,"line_start":731,"line_end":731,"column_start":13,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":270362,"byte_end":270365,"line_start":732,"line_end":732,"column_start":13,"column_end":16}},{"value":"/ Note: depending on context, apps might show 'New', 'New Window',","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":270378,"byte_end":270446,"line_start":733,"line_end":733,"column_start":13,"column_end":81}},{"value":"/ 'New File', or 'New...' (where the last indicates that the menu","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":270459,"byte_end":270526,"line_start":734,"line_end":734,"column_start":13,"column_end":80}},{"value":"/ item will open a prompt). You may want to create a custom","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":270539,"byte_end":270600,"line_start":735,"line_end":735,"column_start":13,"column_end":74}},{"value":"/ item to capture the intent of your menu, instead of using this one.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":270613,"byte_end":270684,"line_start":736,"line_end":736,"column_start":13,"column_end":84}}]},{"kind":"Function","id":{"krate":0,"index":1772},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":271052,"byte_end":271061,"line_start":746,"line_end":746,"column_start":20,"column_end":29},"name":"open_file","qualname":"::menu::sys::mac::file::open_file","value":"pub fn open_file<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Open...' menu item. Will display the system file-chooser.\n","sig":null,"attributes":[{"value":"/ The 'Open...' menu item. Will display the system file-chooser.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":270966,"byte_end":271032,"line_start":745,"line_end":745,"column_start":13,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":1774},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":271404,"byte_end":271409,"line_start":755,"line_end":755,"column_start":20,"column_end":25},"name":"close","qualname":"::menu::sys::mac::file::close","value":"pub fn close<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Close' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Close' menu item.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":271358,"byte_end":271384,"line_start":754,"line_end":754,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1776},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":271714,"byte_end":271718,"line_start":764,"line_end":764,"column_start":20,"column_end":24},"name":"save","qualname":"::menu::sys::mac::file::save","value":"pub fn save<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Save' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Save' menu item.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":271669,"byte_end":271694,"line_start":763,"line_end":763,"column_start":13,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":1778},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":272120,"byte_end":272133,"line_start":775,"line_end":775,"column_start":20,"column_end":33},"name":"save_ellipsis","qualname":"::menu::sys::mac::file::save_ellipsis","value":"pub fn save_ellipsis<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Save...' menu item.","sig":null,"attributes":[{"value":"/ The 'Save...' menu item.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":271974,"byte_end":272002,"line_start":772,"line_end":772,"column_start":13,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":272015,"byte_end":272018,"line_start":773,"line_end":773,"column_start":13,"column_end":16}},{"value":"/ This is used if we need to show a dialog to select save location.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":272031,"byte_end":272100,"line_start":774,"line_end":774,"column_start":13,"column_end":82}}]},{"kind":"Function","id":{"krate":0,"index":1780},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":272479,"byte_end":272486,"line_start":784,"line_end":784,"column_start":20,"column_end":27},"name":"save_as","qualname":"::menu::sys::mac::file::save_as","value":"pub fn save_as<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Save as...'\n","sig":null,"attributes":[{"value":"/ The 'Save as...'","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":272439,"byte_end":272459,"line_start":783,"line_end":783,"column_start":13,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":1782},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":272845,"byte_end":272855,"line_start":793,"line_end":793,"column_start":20,"column_end":30},"name":"page_setup","qualname":"::menu::sys::mac::file::page_setup","value":"pub fn page_setup<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Page Setup...' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Page Setup...' menu item.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":272791,"byte_end":272825,"line_start":792,"line_end":792,"column_start":13,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":1784},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":273173,"byte_end":273178,"line_start":802,"line_end":802,"column_start":20,"column_end":25},"name":"print","qualname":"::menu::sys::mac::file::print","value":"pub fn print<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Print...' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Print...' menu item.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":273124,"byte_end":273153,"line_start":801,"line_end":801,"column_start":13,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":6737},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":274962,"byte_end":274972,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"MouseEvent","qualname":"::mouse::MouseEvent","value":"MouseEvent { pos, window_pos, buttons, mods, count, focus, button, wheel_delta }","parent":null,"children":[{"krate":0,"index":6738},{"krate":0,"index":6739},{"krate":0,"index":6740},{"krate":0,"index":6741},{"krate":0,"index":6742},{"krate":0,"index":6743},{"krate":0,"index":6744},{"krate":0,"index":6745}],"decl_id":null,"docs":" The state of the mouse for a click, mouse-up, move, or wheel event.","sig":null,"attributes":[{"value":"/ The state of the mouse for a click, mouse-up, move, or wheel event.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":274153,"byte_end":274224,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":274225,"byte_end":274228,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In `druid`, unlike in `druid_shell`, we treat the widget's coordinate","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":274229,"byte_end":274302,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/ space and the window's coordinate space separately.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":274303,"byte_end":274358,"line_start":23,"line_end":23,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":274359,"byte_end":274362,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Every mouse event can have a new position. There is no guarantee of","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":274363,"byte_end":274434,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ receiving an [`Event::MouseMove`] before another mouse event.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":274435,"byte_end":274500,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":274501,"byte_end":274504,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ When comparing to the position that was reported by [`Event::MouseMove`],","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":274505,"byte_end":274582,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ the position in relation to the window might have changed because","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":274583,"byte_end":274652,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"/ the window moved or the platform just didn't inform us of the move.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":274653,"byte_end":274724,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ The position may also have changed in relation to the receiver,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":274725,"byte_end":274792,"line_start":31,"line_end":31,"column_start":1,"column_end":68}},{"value":"/ because the receiver's location changed without the mouse moving.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":274793,"byte_end":274862,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":274863,"byte_end":274866,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`Event::MouseMove`]: enum.Event.html#variant.MouseMove","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":274867,"byte_end":274926,"line_start":34,"line_end":34,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":6738},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":275058,"byte_end":275061,"line_start":38,"line_end":38,"column_start":9,"column_end":12},"name":"pos","qualname":"::mouse::MouseEvent::pos","value":"druid_shell::kurbo::Point","parent":{"krate":0,"index":6737},"children":[],"decl_id":null,"docs":" The position of the mouse in the coordinate space of the receiver.\n","sig":null,"attributes":[{"value":"/ The position of the mouse in the coordinate space of the receiver.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":274979,"byte_end":275049,"line_start":37,"line_end":37,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":6739},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":275151,"byte_end":275161,"line_start":40,"line_end":40,"column_start":9,"column_end":19},"name":"window_pos","qualname":"::mouse::MouseEvent::window_pos","value":"druid_shell::kurbo::Point","parent":{"krate":0,"index":6737},"children":[],"decl_id":null,"docs":" The position of the mouse in the coordinate space of the window.\n","sig":null,"attributes":[{"value":"/ The position of the mouse in the coordinate space of the window.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":275074,"byte_end":275142,"line_start":39,"line_end":39,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":6740},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":275409,"byte_end":275416,"line_start":44,"line_end":44,"column_start":9,"column_end":16},"name":"buttons","qualname":"::mouse::MouseEvent::buttons","value":"druid_shell::MouseButtons","parent":{"krate":0,"index":6737},"children":[],"decl_id":null,"docs":" Mouse buttons being held down during a move or after a click event.\n Thus it will contain the `button` that triggered a mouse-down event,\n and it will not contain the `button` that triggered a mouse-up event.\n","sig":null,"attributes":[{"value":"/ Mouse buttons being held down during a move or after a click event.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":275174,"byte_end":275245,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/ Thus it will contain the `button` that triggered a mouse-down event,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":275250,"byte_end":275322,"line_start":42,"line_end":42,"column_start":5,"column_end":77}},{"value":"/ and it will not contain the `button` that triggered a mouse-up event.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":275327,"byte_end":275400,"line_start":43,"line_end":43,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":6741},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":275493,"byte_end":275497,"line_start":46,"line_end":46,"column_start":9,"column_end":13},"name":"mods","qualname":"::mouse::MouseEvent::mods","value":"druid_shell::Modifiers","parent":{"krate":0,"index":6737},"children":[],"decl_id":null,"docs":" Keyboard modifiers at the time of the event.\n","sig":null,"attributes":[{"value":"/ Keyboard modifiers at the time of the event.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":275436,"byte_end":275484,"line_start":45,"line_end":45,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":6742},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":275651,"byte_end":275656,"line_start":49,"line_end":49,"column_start":9,"column_end":14},"name":"count","qualname":"::mouse::MouseEvent::count","value":"u8","parent":{"krate":0,"index":6737},"children":[],"decl_id":null,"docs":" The number of mouse clicks associated with this event. This will always\n be `0` for a mouse-up and mouse-move events.\n","sig":null,"attributes":[{"value":"/ The number of mouse clicks associated with this event. This will always","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":275514,"byte_end":275589,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ be `0` for a mouse-up and mouse-move events.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":275594,"byte_end":275642,"line_start":48,"line_end":48,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":6743},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":276243,"byte_end":276248,"line_start":58,"line_end":58,"column_start":9,"column_end":14},"name":"focus","qualname":"::mouse::MouseEvent::focus","value":"bool","parent":{"krate":0,"index":6737},"children":[],"decl_id":null,"docs":" Focus is `true` on macOS when the mouse-down event (or its companion mouse-up event)\n with `MouseButton::Left` was the event that caused the window to gain focus.","sig":null,"attributes":[{"value":"/ Focus is `true` on macOS when the mouse-down event (or its companion mouse-up event)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":275666,"byte_end":275754,"line_start":50,"line_end":50,"column_start":5,"column_end":93}},{"value":"/ with `MouseButton::Left` was the event that caused the window to gain focus.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":275759,"byte_end":275839,"line_start":51,"line_end":51,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":275844,"byte_end":275847,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This is primarily used in relation to text selection.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":275852,"byte_end":275909,"line_start":53,"line_end":53,"column_start":5,"column_end":62}},{"value":"/ If there is some text selected in some text widget and it receives a click","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":275914,"byte_end":275992,"line_start":54,"line_end":54,"column_start":5,"column_end":83}},{"value":"/ with `focus` set to `true` then the widget should gain focus (i.e. start blinking a cursor)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":275997,"byte_end":276092,"line_start":55,"line_end":55,"column_start":5,"column_end":100}},{"value":"/ but it should not change the text selection. Text selection should only be changed","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":276097,"byte_end":276183,"line_start":56,"line_end":56,"column_start":5,"column_end":91}},{"value":"/ when the click has `focus` set to `false`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":276188,"byte_end":276234,"line_start":57,"line_end":57,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":6744},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":276472,"byte_end":276478,"line_start":62,"line_end":62,"column_start":9,"column_end":15},"name":"button","qualname":"::mouse::MouseEvent::button","value":"druid_shell::MouseButton","parent":{"krate":0,"index":6737},"children":[],"decl_id":null,"docs":" The button that was pressed down in the case of mouse-down,\n or the button that was released in the case of mouse-up.\n This will always be `MouseButton::None` in the case of mouse-move.\n","sig":null,"attributes":[{"value":"/ The button that was pressed down in the case of mouse-down,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":276260,"byte_end":276323,"line_start":59,"line_end":59,"column_start":5,"column_end":68}},{"value":"/ or the button that was released in the case of mouse-up.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":276328,"byte_end":276388,"line_start":60,"line_end":60,"column_start":5,"column_end":65}},{"value":"/ This will always be `MouseButton::None` in the case of mouse-move.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":276393,"byte_end":276463,"line_start":61,"line_end":61,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":6745},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":276879,"byte_end":276890,"line_start":71,"line_end":71,"column_start":9,"column_end":20},"name":"wheel_delta","qualname":"::mouse::MouseEvent::wheel_delta","value":"druid_shell::kurbo::Vec2","parent":{"krate":0,"index":6737},"children":[],"decl_id":null,"docs":" The wheel movement.","sig":null,"attributes":[{"value":"/ The wheel movement.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":276497,"byte_end":276520,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":276525,"byte_end":276528,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The polarity is the amount to be added to the scroll position,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":276533,"byte_end":276599,"line_start":65,"line_end":65,"column_start":5,"column_end":71}},{"value":"/ in other words the opposite of the direction the content should","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":276604,"byte_end":276671,"line_start":66,"line_end":66,"column_start":5,"column_end":72}},{"value":"/ move on scrolling. This polarity is consistent with the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":276676,"byte_end":276735,"line_start":67,"line_end":67,"column_start":5,"column_end":64}},{"value":"/ deltaX and deltaY values in a web [WheelEvent].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":276740,"byte_end":276791,"line_start":68,"line_end":68,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":276796,"byte_end":276799,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ [WheelEvent]: https://w3c.github.io/uievents/#event-type-wheel","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":276804,"byte_end":276870,"line_start":70,"line_end":70,"column_start":5,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":1814},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"scroll_component","qualname":"::scroll_component","value":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","parent":null,"children":[{"krate":0,"index":1815},{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1822},{"krate":0,"index":1825},{"krate":0,"index":1828},{"krate":0,"index":1831},{"krate":0,"index":1834},{"krate":0,"index":1835},{"krate":0,"index":1838},{"krate":0,"index":1841},{"krate":0,"index":1844},{"krate":0,"index":1847},{"krate":0,"index":1850},{"krate":0,"index":1853},{"krate":0,"index":1856},{"krate":0,"index":1859},{"krate":0,"index":6750},{"krate":0,"index":6757},{"krate":0,"index":6759},{"krate":0,"index":6760},{"krate":0,"index":1860},{"krate":0,"index":6762},{"krate":0,"index":6771},{"krate":0,"index":6773},{"krate":0,"index":6774},{"krate":0,"index":6776},{"krate":0,"index":6781},{"krate":0,"index":6783},{"krate":0,"index":6784},{"krate":0,"index":1862},{"krate":0,"index":1864}],"decl_id":null,"docs":" A component for embedding in another widget to provide consistent and\n extendable scrolling behavior\n","sig":null,"attributes":[{"value":"/ A component for embedding in another widget to provide consistent and","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":278108,"byte_end":278181,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"/ extendable scrolling behavior","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":278182,"byte_end":278215,"line_start":16,"line_end":16,"column_start":1,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":1859},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":278556,"byte_end":278574,"line_start":28,"line_end":28,"column_start":11,"column_end":29},"name":"SCROLLBAR_MIN_SIZE","qualname":"::scroll_component::SCROLLBAR_MIN_SIZE","value":"f64","parent":null,"children":[],"decl_id":null,"docs":" Minimum length for any scrollbar to be when measured on that\n scrollbar's primary axis.\n","sig":null,"attributes":[{"value":"/ Minimum length for any scrollbar to be when measured on that","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":278451,"byte_end":278515,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ scrollbar's primary axis.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":278516,"byte_end":278545,"line_start":27,"line_end":27,"column_start":1,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6751},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":278794,"byte_end":278798,"line_start":35,"line_end":35,"column_start":5,"column_end":9},"name":"None","qualname":"::scroll_component::BarHoveredState::None","value":"BarHoveredState::None","parent":{"krate":0,"index":6750},"children":[],"decl_id":null,"docs":" Neither scrollbar is being hovered by the mouse.\n","sig":null,"attributes":[{"value":"/ Neither scrollbar is being hovered by the mouse.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":278737,"byte_end":278789,"line_start":34,"line_end":34,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6753},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":278866,"byte_end":278874,"line_start":37,"line_end":37,"column_start":5,"column_end":13},"name":"Vertical","qualname":"::scroll_component::BarHoveredState::Vertical","value":"BarHoveredState::Vertical","parent":{"krate":0,"index":6750},"children":[],"decl_id":null,"docs":" The vertical scrollbar is being hovered by the mouse.\n","sig":null,"attributes":[{"value":"/ The vertical scrollbar is being hovered by the mouse.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":278804,"byte_end":278861,"line_start":36,"line_end":36,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6755},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":278944,"byte_end":278954,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"name":"Horizontal","qualname":"::scroll_component::BarHoveredState::Horizontal","value":"BarHoveredState::Horizontal","parent":{"krate":0,"index":6750},"children":[],"decl_id":null,"docs":" The horizontal scrollbar is being hovered by the mouse.\n","sig":null,"attributes":[{"value":"/ The horizontal scrollbar is being hovered by the mouse.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":278880,"byte_end":278939,"line_start":38,"line_end":38,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":6750},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":278715,"byte_end":278730,"line_start":33,"line_end":33,"column_start":10,"column_end":25},"name":"BarHoveredState","qualname":"::scroll_component::BarHoveredState","value":"pub enum BarHoveredState { None, Vertical, Horizontal, }","parent":null,"children":[{"krate":0,"index":6751},{"krate":0,"index":6753},{"krate":0,"index":6755}],"decl_id":null,"docs":" Denotes which scrollbar, if any, is currently being hovered over\n by the mouse.\n","sig":null,"attributes":[{"value":"/ Denotes which scrollbar, if any, is currently being hovered over","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":278589,"byte_end":278657,"line_start":30,"line_end":30,"column_start":1,"column_end":69}},{"value":"/ by the mouse.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":278658,"byte_end":278675,"line_start":31,"line_end":31,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1861},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":279070,"byte_end":279080,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"is_hovered","qualname":"<BarHoveredState>::is_hovered","value":"pub fn is_hovered(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines if any scrollbar is currently being hovered by the mouse.\n","sig":null,"attributes":[{"value":"/ Determines if any scrollbar is currently being hovered by the mouse.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":278986,"byte_end":279058,"line_start":43,"line_end":43,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6763},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":279387,"byte_end":279391,"line_start":56,"line_end":56,"column_start":5,"column_end":9},"name":"None","qualname":"::scroll_component::BarHeldState::None","value":"BarHeldState::None","parent":{"krate":0,"index":6762},"children":[],"decl_id":null,"docs":" Neither scrollbar is being dragged.\n","sig":null,"attributes":[{"value":"/ Neither scrollbar is being dragged.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":279343,"byte_end":279382,"line_start":55,"line_end":55,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6765},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":279517,"byte_end":279525,"line_start":59,"line_end":59,"column_start":5,"column_end":13},"name":"Vertical","qualname":"::scroll_component::BarHeldState::Vertical","value":"BarHeldState::Vertical(f64)","parent":{"krate":0,"index":6762},"children":[],"decl_id":null,"docs":" Vertical scrollbar is being dragged. Contains an `f64` with\n the initial y-offset of the dragging input.\n","sig":null,"attributes":[{"value":"/ Vertical scrollbar is being dragged. Contains an `f64` with","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":279397,"byte_end":279460,"line_start":57,"line_end":57,"column_start":5,"column_end":68}},{"value":"/ the initial y-offset of the dragging input.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":279465,"byte_end":279512,"line_start":58,"line_end":58,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6768},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":279658,"byte_end":279668,"line_start":62,"line_end":62,"column_start":5,"column_end":15},"name":"Horizontal","qualname":"::scroll_component::BarHeldState::Horizontal","value":"BarHeldState::Horizontal(f64)","parent":{"krate":0,"index":6762},"children":[],"decl_id":null,"docs":" Horizontal scrollbar is being dragged. Contains an `f64` with\n the initial x-offset of the dragging input.\n","sig":null,"attributes":[{"value":"/ Horizontal scrollbar is being dragged. Contains an `f64` with","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":279536,"byte_end":279601,"line_start":60,"line_end":60,"column_start":5,"column_end":70}},{"value":"/ the initial x-offset of the dragging input.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":279606,"byte_end":279653,"line_start":61,"line_end":61,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":6762},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":279324,"byte_end":279336,"line_start":54,"line_end":54,"column_start":10,"column_end":22},"name":"BarHeldState","qualname":"::scroll_component::BarHeldState","value":"pub enum BarHeldState { None, Vertical(f64), Horizontal(f64), }","parent":null,"children":[{"krate":0,"index":6763},{"krate":0,"index":6765},{"krate":0,"index":6768}],"decl_id":null,"docs":" Denotes which scrollbar, if any, is currently being dragged.\n","sig":null,"attributes":[{"value":"/ Denotes which scrollbar, if any, is currently being dragged.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":279220,"byte_end":279284,"line_start":52,"line_end":52,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":6776},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":281331,"byte_end":281346,"line_start":96,"line_end":96,"column_start":12,"column_end":27},"name":"ScrollComponent","qualname":"::scroll_component::ScrollComponent","value":"ScrollComponent { opacity, timer_id, hovered, held }","parent":null,"children":[{"krate":0,"index":6777},{"krate":0,"index":6778},{"krate":0,"index":6779},{"krate":0,"index":6780}],"decl_id":null,"docs":" Embeddable component exposing reusable scroll handling logic.","sig":null,"attributes":[{"value":"/ Embeddable component exposing reusable scroll handling logic.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":279678,"byte_end":279743,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":279744,"byte_end":279747,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ In most situations composing [`Scroll`] is a better idea","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":279748,"byte_end":279808,"line_start":67,"line_end":67,"column_start":1,"column_end":61}},{"value":"/ for general UI construction. However some cases are not covered by","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":279809,"byte_end":279879,"line_start":68,"line_end":68,"column_start":1,"column_end":71}},{"value":"/ composing those widgets, such as when a widget needs fine grained","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":279880,"byte_end":279949,"line_start":69,"line_end":69,"column_start":1,"column_end":70}},{"value":"/ control over its scrolling state or doesn't make sense to exist alone","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":279950,"byte_end":280023,"line_start":70,"line_end":70,"column_start":1,"column_end":74}},{"value":"/ without scrolling behavior.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":280024,"byte_end":280055,"line_start":71,"line_end":71,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":280056,"byte_end":280059,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ `ScrollComponent` contains the input-handling and scrollbar-positioning logic used by","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":280060,"byte_end":280149,"line_start":73,"line_end":73,"column_start":1,"column_end":90}},{"value":"/ [`Scroll`].  It can be used to add this logic to a custom widget when the need arises.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":280150,"byte_end":280240,"line_start":74,"line_end":74,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":280241,"byte_end":280244,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ It can be used like this:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":280245,"byte_end":280274,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/ - Store an instance of `ScrollComponent` in your widget's struct, and wrap the child widget to","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":280275,"byte_end":280373,"line_start":77,"line_end":77,"column_start":1,"column_end":99}},{"value":"/   be scrolled in a [`ClipBox`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":280374,"byte_end":280409,"line_start":78,"line_end":78,"column_start":1,"column_end":36}},{"value":"/ - Call [`event`] and [`lifecycle`] with all event and lifecycle events before propagating them","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":280410,"byte_end":280508,"line_start":79,"line_end":79,"column_start":1,"column_end":99}},{"value":"/   to children.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":280509,"byte_end":280527,"line_start":80,"line_end":80,"column_start":1,"column_end":19}},{"value":"/ - Call [`handle_scroll`] with all events after handling / propagating them.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":280528,"byte_end":280607,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ - Call [`draw_bars`] to draw the scrollbars.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":280608,"byte_end":280656,"line_start":82,"line_end":82,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":280657,"byte_end":280660,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Taking a look at the [`Scroll`] source code can be helpful. You can also do scrolling","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":280661,"byte_end":280750,"line_start":84,"line_end":84,"column_start":1,"column_end":90}},{"value":"/ without wrapping a child in a [`ClipBox`], but you will need to do certain event and","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":280751,"byte_end":280839,"line_start":85,"line_end":85,"column_start":1,"column_end":89}},{"value":"/ paint transformations yourself; see the [`ClipBox`] source code for an example.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":280840,"byte_end":280923,"line_start":86,"line_end":86,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":280924,"byte_end":280927,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [`Scroll`]: ../widget/struct.Scroll.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":280928,"byte_end":280972,"line_start":88,"line_end":88,"column_start":1,"column_end":45}},{"value":"/ [`List`]: ../widget/struct.List.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":280973,"byte_end":281013,"line_start":89,"line_end":89,"column_start":1,"column_end":41}},{"value":"/ [`ClipBox`]: ../widget/struct.ClipBox.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":281014,"byte_end":281060,"line_start":90,"line_end":90,"column_start":1,"column_end":47}},{"value":"/ [`event`]: struct.ScrollComponent.html#method.event","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":281061,"byte_end":281116,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/ [`handle_scroll`]: struct.ScrollComponent.html#method.handle_scroll","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":281117,"byte_end":281188,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ [`draw_bars`]: #method.draw_bars","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":281189,"byte_end":281225,"line_start":93,"line_end":93,"column_start":1,"column_end":37}},{"value":"/ [`lifecycle`]: struct.ScrollComponent.html#method.lifecycle","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":281226,"byte_end":281289,"line_start":94,"line_end":94,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":6777},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":281401,"byte_end":281408,"line_start":98,"line_end":98,"column_start":9,"column_end":16},"name":"opacity","qualname":"::scroll_component::ScrollComponent::opacity","value":"f64","parent":{"krate":0,"index":6776},"children":[],"decl_id":null,"docs":" Current opacity for both scrollbars\n","sig":null,"attributes":[{"value":"/ Current opacity for both scrollbars","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":281353,"byte_end":281392,"line_start":97,"line_end":97,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":6778},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":281483,"byte_end":281491,"line_start":100,"line_end":100,"column_start":9,"column_end":17},"name":"timer_id","qualname":"::scroll_component::ScrollComponent::timer_id","value":"druid_shell::TimerToken","parent":{"krate":0,"index":6776},"children":[],"decl_id":null,"docs":" ID for the timer which schedules scrollbar fade out\n","sig":null,"attributes":[{"value":"/ ID for the timer which schedules scrollbar fade out","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":281419,"byte_end":281474,"line_start":99,"line_end":99,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":6779},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":281578,"byte_end":281585,"line_start":102,"line_end":102,"column_start":9,"column_end":16},"name":"hovered","qualname":"::scroll_component::ScrollComponent::hovered","value":"scroll_component::BarHoveredState","parent":{"krate":0,"index":6776},"children":[],"decl_id":null,"docs":" Which if any scrollbar is currently hovered by the mouse\n","sig":null,"attributes":[{"value":"/ Which if any scrollbar is currently hovered by the mouse","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":281509,"byte_end":281569,"line_start":101,"line_end":101,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":6780},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":281683,"byte_end":281687,"line_start":104,"line_end":104,"column_start":9,"column_end":13},"name":"held","qualname":"::scroll_component::ScrollComponent::held","value":"scroll_component::BarHeldState","parent":{"krate":0,"index":6776},"children":[],"decl_id":null,"docs":" Which if any scrollbar is currently being dragged by the mouse\n","sig":null,"attributes":[{"value":"/ Which if any scrollbar is currently being dragged by the mouse","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":281608,"byte_end":281674,"line_start":103,"line_end":103,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1865},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":282070,"byte_end":282073,"line_start":120,"line_end":120,"column_start":12,"column_end":15},"name":"new","qualname":"<ScrollComponent>::new","value":"pub fn new() -> ScrollComponent","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new [`ScrollComponent`](struct.ScrollComponent.html) for use.\n","sig":null,"attributes":[{"value":"/ Constructs a new [`ScrollComponent`](struct.ScrollComponent.html) for use.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":281980,"byte_end":282058,"line_start":119,"line_end":119,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1866},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":282212,"byte_end":282225,"line_start":125,"line_end":125,"column_start":12,"column_end":25},"name":"are_bars_held","qualname":"<ScrollComponent>::are_bars_held","value":"pub fn are_bars_held(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" true if either scrollbar is currently held down/being dragged\n","sig":null,"attributes":[{"value":"/ true if either scrollbar is currently held down/being dragged","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":282135,"byte_end":282200,"line_start":124,"line_end":124,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1867},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":282375,"byte_end":282395,"line_start":130,"line_end":130,"column_start":12,"column_end":32},"name":"reset_scrollbar_fade","qualname":"<ScrollComponent>::reset_scrollbar_fade","value":"pub fn reset_scrollbar_fade<F>(&mut Self, F, &Env) where F: FnOnce(Duration)\n-> TimerToken","parent":null,"children":[],"decl_id":null,"docs":" Makes the scrollbars visible, and resets the fade timer.\n","sig":null,"attributes":[{"value":"/ Makes the scrollbars visible, and resets the fade timer.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":282303,"byte_end":282363,"line_start":129,"line_end":129,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1869},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":282869,"byte_end":282893,"line_start":142,"line_end":142,"column_start":12,"column_end":36},"name":"calc_vertical_bar_bounds","qualname":"<ScrollComponent>::calc_vertical_bar_bounds","value":"pub fn calc_vertical_bar_bounds(&Self, &Viewport, &Env) -> Option<Rect>","parent":null,"children":[],"decl_id":null,"docs":" Calculates the paint rect of the vertical scrollbar, or `None` if the vertical scrollbar is\n not visible.\n","sig":null,"attributes":[{"value":"/ Calculates the paint rect of the vertical scrollbar, or `None` if the vertical scrollbar is","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":282741,"byte_end":282836,"line_start":140,"line_end":140,"column_start":5,"column_end":100}},{"value":"/ not visible.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":282841,"byte_end":282857,"line_start":141,"line_end":141,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1870},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":284272,"byte_end":284298,"line_start":177,"line_end":177,"column_start":12,"column_end":38},"name":"calc_horizontal_bar_bounds","qualname":"<ScrollComponent>::calc_horizontal_bar_bounds","value":"pub fn calc_horizontal_bar_bounds(&Self, &Viewport, &Env) -> Option<Rect>","parent":null,"children":[],"decl_id":null,"docs":" Calculates the paint rect of the horizontal scrollbar, or `None` if the horizontal\n scrollbar is not visible.\n","sig":null,"attributes":[{"value":"/ Calculates the paint rect of the horizontal scrollbar, or `None` if the horizontal","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":284140,"byte_end":284226,"line_start":175,"line_end":175,"column_start":5,"column_end":91}},{"value":"/ scrollbar is not visible.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":284231,"byte_end":284260,"line_start":176,"line_end":176,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1871},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":285577,"byte_end":285586,"line_start":211,"line_end":211,"column_start":12,"column_end":21},"name":"draw_bars","qualname":"<ScrollComponent>::draw_bars","value":"pub fn draw_bars(&Self, &mut PaintCtx, &Viewport, &Env)","parent":null,"children":[],"decl_id":null,"docs":" Draw scroll bars.\n","sig":null,"attributes":[{"value":"/ Draw scroll bars.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":285544,"byte_end":285565,"line_start":210,"line_end":210,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":287049,"byte_end":287072,"line_start":250,"line_end":250,"column_start":12,"column_end":35},"name":"point_hits_vertical_bar","qualname":"<ScrollComponent>::point_hits_vertical_bar","value":"pub fn point_hits_vertical_bar(&Self, &Viewport, Point, &Env) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if the specified point overlaps the vertical scrollbar","sig":null,"attributes":[{"value":"/ Tests if the specified point overlaps the vertical scrollbar","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":286902,"byte_end":286966,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":286971,"byte_end":286974,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Returns false if the vertical scrollbar is not visible","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":286979,"byte_end":287037,"line_start":249,"line_end":249,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1873},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":287663,"byte_end":287688,"line_start":266,"line_end":266,"column_start":12,"column_end":37},"name":"point_hits_horizontal_bar","qualname":"<ScrollComponent>::point_hits_horizontal_bar","value":"pub fn point_hits_horizontal_bar(&Self, &Viewport, Point, &Env) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if the specified point overlaps the horizontal scrollbar","sig":null,"attributes":[{"value":"/ Tests if the specified point overlaps the horizontal scrollbar","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":287512,"byte_end":287578,"line_start":263,"line_end":263,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":287583,"byte_end":287586,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ Returns false if the horizontal scrollbar is not visible","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":287591,"byte_end":287651,"line_start":265,"line_end":265,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1874},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":288277,"byte_end":288282,"line_start":282,"line_end":282,"column_start":12,"column_end":17},"name":"event","qualname":"<ScrollComponent>::event","value":"pub fn event(&mut Self, &mut Viewport, &mut EventCtx, &Event, &Env)","parent":null,"children":[],"decl_id":null,"docs":" Checks if the event applies to the scroll behavior, uses it, and marks it handled","sig":null,"attributes":[{"value":"/ Checks if the event applies to the scroll behavior, uses it, and marks it handled","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":288131,"byte_end":288216,"line_start":279,"line_end":279,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":288221,"byte_end":288224,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Make sure to call on every event","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":288229,"byte_end":288265,"line_start":281,"line_end":281,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1877},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":294857,"byte_end":294870,"line_start":422,"line_end":422,"column_start":12,"column_end":25},"name":"handle_scroll","qualname":"<ScrollComponent>::handle_scroll","value":"pub fn handle_scroll(&mut Self, &mut Viewport, &mut EventCtx, &Event, &Env)","parent":null,"children":[],"decl_id":null,"docs":" Applies mousewheel scrolling if the event has not already been handled\n","sig":null,"attributes":[{"value":"/ Applies mousewheel scrolling if the event has not already been handled","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":294771,"byte_end":294845,"line_start":421,"line_end":421,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1879},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":295474,"byte_end":295483,"line_start":443,"line_end":443,"column_start":12,"column_end":21},"name":"lifecycle","qualname":"<ScrollComponent>::lifecycle","value":"pub fn lifecycle(&mut Self, &mut LifeCycleCtx, &LifeCycle, &Env)","parent":null,"children":[],"decl_id":null,"docs":" Perform any necessary action prompted by a lifecycle event","sig":null,"attributes":[{"value":"/ Perform any necessary action prompted by a lifecycle event","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":295341,"byte_end":295403,"line_start":440,"line_end":440,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":295408,"byte_end":295411,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Make sure to call on every lifecycle event","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":295416,"byte_end":295462,"line_start":442,"line_end":442,"column_start":5,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":1881},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"text","qualname":"::text","value":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\mod.rs","parent":null,"children":[{"krate":0,"index":1882},{"krate":0,"index":1950},{"krate":0,"index":1966},{"krate":0,"index":2061},{"krate":0,"index":2156},{"krate":0,"index":2177},{"krate":0,"index":2234},{"krate":0,"index":2341},{"krate":0,"index":2365},{"krate":0,"index":2389},{"krate":0,"index":2441},{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2472},{"krate":0,"index":2475},{"krate":0,"index":2478},{"krate":0,"index":2479},{"krate":0,"index":2482},{"krate":0,"index":2485},{"krate":0,"index":2488},{"krate":0,"index":2491},{"krate":0,"index":2492},{"krate":0,"index":2495},{"krate":0,"index":2498},{"krate":0,"index":2499},{"krate":0,"index":2502},{"krate":0,"index":2505},{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2510},{"krate":0,"index":2512},{"krate":0,"index":2515},{"krate":0,"index":2518},{"krate":0,"index":2521},{"krate":0,"index":2524},{"krate":0,"index":2525},{"krate":0,"index":2528},{"krate":0,"index":2531}],"decl_id":null,"docs":" Text editing utilities.\n","sig":null,"attributes":[{"value":"/ Text editing utilities.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\mod.rs","byte_start":296342,"byte_end":296369,"line_start":15,"line_end":15,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6786},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":297961,"byte_end":297975,"line_start":24,"line_end":24,"column_start":12,"column_end":26},"name":"AttributeSpans","qualname":"::text::attribute::AttributeSpans","value":"AttributeSpans {  }","parent":null,"children":[{"krate":0,"index":6787},{"krate":0,"index":6788},{"krate":0,"index":6789},{"krate":0,"index":6790},{"krate":0,"index":6791},{"krate":0,"index":6792},{"krate":0,"index":6793}],"decl_id":null,"docs":" A collection of spans of attributes of various kinds.\n","sig":null,"attributes":[{"value":"/ A collection of spans of attributes of various kinds.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":297859,"byte_end":297916,"line_start":22,"line_end":22,"column_start":1,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6826},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299604,"byte_end":299614,"line_start":79,"line_end":79,"column_start":5,"column_end":15},"name":"FontFamily","qualname":"::text::attribute::Attribute::FontFamily","value":"Attribute::FontFamily(FontFamily)","parent":{"krate":0,"index":6825},"children":[],"decl_id":null,"docs":" The font family.\n","sig":null,"attributes":[{"value":"/ The font family.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299579,"byte_end":299599,"line_start":78,"line_end":78,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6829},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299666,"byte_end":299674,"line_start":81,"line_end":81,"column_start":5,"column_end":13},"name":"FontSize","qualname":"::text::attribute::Attribute::FontSize","value":"Attribute::FontSize(KeyOrValue<f64>)","parent":{"krate":0,"index":6825},"children":[],"decl_id":null,"docs":" The font size, in points.\n","sig":null,"attributes":[{"value":"/ The font size, in points.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299632,"byte_end":299661,"line_start":80,"line_end":80,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6832},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299749,"byte_end":299755,"line_start":83,"line_end":83,"column_start":5,"column_end":11},"name":"Weight","qualname":"::text::attribute::Attribute::Weight","value":"Attribute::Weight(FontWeight)","parent":{"krate":0,"index":6825},"children":[],"decl_id":null,"docs":" The [`FontWeight`](struct.FontWeight.html).\n","sig":null,"attributes":[{"value":"/ The [`FontWeight`](struct.FontWeight.html).","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299697,"byte_end":299744,"line_start":82,"line_end":82,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6835},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299815,"byte_end":299824,"line_start":85,"line_end":85,"column_start":5,"column_end":14},"name":"TextColor","qualname":"::text::attribute::Attribute::TextColor","value":"Attribute::TextColor(KeyOrValue<Color>)","parent":{"krate":0,"index":6825},"children":[],"decl_id":null,"docs":" The foreground color of the text.\n","sig":null,"attributes":[{"value":"/ The foreground color of the text.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299773,"byte_end":299810,"line_start":84,"line_end":84,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6838},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299953,"byte_end":299958,"line_start":89,"line_end":89,"column_start":5,"column_end":10},"name":"Style","qualname":"::text::attribute::Attribute::Style","value":"Attribute::Style(FontStyle)","parent":{"krate":0,"index":6825},"children":[],"decl_id":null,"docs":" The [`FontStyle`]; either regular or italic.","sig":null,"attributes":[{"value":"/ The [`FontStyle`]; either regular or italic.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299849,"byte_end":299897,"line_start":86,"line_end":86,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299902,"byte_end":299905,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ [`FontStyle`]: enum.FontStyle.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299910,"byte_end":299948,"line_start":88,"line_end":88,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6841},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299994,"byte_end":300003,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"Underline","qualname":"::text::attribute::Attribute::Underline","value":"Attribute::Underline(bool)","parent":{"krate":0,"index":6825},"children":[],"decl_id":null,"docs":" Underline.\n","sig":null,"attributes":[{"value":"/ Underline.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299975,"byte_end":299989,"line_start":90,"line_end":90,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6844},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":300073,"byte_end":300083,"line_start":93,"line_end":93,"column_start":5,"column_end":15},"name":"Descriptor","qualname":"::text::attribute::Attribute::Descriptor","value":"Attribute::Descriptor(KeyOrValue<FontDescriptor>)","parent":{"krate":0,"index":6825},"children":[],"decl_id":null,"docs":" A [`FontDescriptor`](struct.FontDescriptor.html).\n","sig":null,"attributes":[{"value":"/ A [`FontDescriptor`](struct.FontDescriptor.html).","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":300015,"byte_end":300068,"line_start":92,"line_end":92,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":6825},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299563,"byte_end":299572,"line_start":77,"line_end":77,"column_start":10,"column_end":19},"name":"Attribute","qualname":"::text::attribute::Attribute","value":"pub enum Attribute {\n    FontFamily(FontFamily),\n    FontSize(KeyOrValue<f64>),\n    Weight(FontWeight),\n    TextColor(KeyOrValue<Color>),\n    Style(FontStyle),\n    Underline(bool),\n    Descriptor(KeyOrValue<FontDescriptor>),\n}","parent":null,"children":[{"krate":0,"index":6826},{"krate":0,"index":6829},{"krate":0,"index":6832},{"krate":0,"index":6835},{"krate":0,"index":6838},{"krate":0,"index":6841},{"krate":0,"index":6844}],"decl_id":null,"docs":" Attributes that can be applied to text.","sig":null,"attributes":[{"value":"/ Attributes that can be applied to text.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":298672,"byte_end":298715,"line_start":52,"line_end":52,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":298716,"byte_end":298719,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ Where possible, attributes are [`KeyOrValue`] types; this means you","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":298720,"byte_end":298791,"line_start":54,"line_end":54,"column_start":1,"column_end":72}},{"value":"/ can use items defined in the [`theme`] *or* concrete types, where appropriate.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":298792,"byte_end":298874,"line_start":55,"line_end":55,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":298875,"byte_end":298878,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The easiest way to construct these attributes is via the various constructor","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":298879,"byte_end":298959,"line_start":57,"line_end":57,"column_start":1,"column_end":81}},{"value":"/ methods, such as [`Attribute::size`] or [`Attribute::text_color`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":298960,"byte_end":299030,"line_start":58,"line_end":58,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299031,"byte_end":299034,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299035,"byte_end":299049,"line_start":60,"line_end":60,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299050,"byte_end":299053,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299054,"byte_end":299061,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ use druid::text::Attribute;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299062,"byte_end":299093,"line_start":63,"line_end":63,"column_start":1,"column_end":32}},{"value":"/ use druid::{theme, Color};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299094,"byte_end":299124,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299125,"byte_end":299128,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ let font = Attribute::font_descriptor(theme::UI_FONT);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299129,"byte_end":299187,"line_start":66,"line_end":66,"column_start":1,"column_end":59}},{"value":"/ let font_size = Attribute::size(32.0);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299188,"byte_end":299230,"line_start":67,"line_end":67,"column_start":1,"column_end":43}},{"value":"/ let explicit_color = Attribute::text_color(Color::BLACK);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299231,"byte_end":299292,"line_start":68,"line_end":68,"column_start":1,"column_end":62}},{"value":"/ let theme_color = Attribute::text_color(theme::SELECTION_COLOR);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299293,"byte_end":299361,"line_start":69,"line_end":69,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299362,"byte_end":299369,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299370,"byte_end":299373,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ [`KeyOrValue`]: ../enum.KeyOrValue.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299374,"byte_end":299417,"line_start":72,"line_end":72,"column_start":1,"column_end":44}},{"value":"/ [`theme`]: ../theme","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299418,"byte_end":299441,"line_start":73,"line_end":73,"column_start":1,"column_end":24}},{"value":"/ [`Attribute::size`]: #method.size","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299442,"byte_end":299479,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/ [`Attribute::text_color`]: #method.text_color","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":299480,"byte_end":299529,"line_start":75,"line_end":75,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1913},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":300210,"byte_end":300213,"line_start":98,"line_end":98,"column_start":12,"column_end":15},"name":"add","qualname":"<AttributeSpans>::add","value":"pub fn add(&mut Self, Range<usize>, Attribute)","parent":null,"children":[],"decl_id":null,"docs":" Add a new [`Attribute`] over the provided [`Range`].\n","sig":null,"attributes":[{"value":"/ Add a new [`Attribute`] over the provided [`Range`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":300142,"byte_end":300198,"line_start":97,"line_end":97,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1937},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":307040,"byte_end":307044,"line_start":278,"line_end":278,"column_start":12,"column_end":16},"name":"size","qualname":"<Attribute>::size","value":"pub fn size<impl Into<KeyOrValue<f64>>: Into<KeyOrValue<f64>>>(impl Into<KeyOrValue<f64>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new font size attribute.\n","sig":null,"attributes":[{"value":"/ Create a new font size attribute.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":306991,"byte_end":307028,"line_start":277,"line_end":277,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1939},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":307196,"byte_end":307206,"line_start":283,"line_end":283,"column_start":12,"column_end":22},"name":"text_color","qualname":"<Attribute>::text_color","value":"pub fn text_color<impl Into<KeyOrValue<Color>>: Into<KeyOrValue<Color>>>(impl Into<KeyOrValue<Color>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new forground color attribute.\n","sig":null,"attributes":[{"value":"/ Create a new forground color attribute.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":307141,"byte_end":307184,"line_start":282,"line_end":282,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1941},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":307359,"byte_end":307370,"line_start":288,"line_end":288,"column_start":12,"column_end":23},"name":"font_family","qualname":"<Attribute>::font_family","value":"pub fn font_family(FontFamily) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new font family attribute.\n","sig":null,"attributes":[{"value":"/ Create a new font family attribute.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":307308,"byte_end":307347,"line_start":287,"line_end":287,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1942},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":307502,"byte_end":307508,"line_start":293,"line_end":293,"column_start":12,"column_end":18},"name":"weight","qualname":"<Attribute>::weight","value":"pub fn weight(FontWeight) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `FontWeight` attribute.\n","sig":null,"attributes":[{"value":"/ Create a new `FontWeight` attribute.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":307450,"byte_end":307490,"line_start":292,"line_end":292,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1943},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":307635,"byte_end":307640,"line_start":298,"line_end":298,"column_start":12,"column_end":17},"name":"style","qualname":"<Attribute>::style","value":"pub fn style(FontStyle) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `FontStyle` attribute.\n","sig":null,"attributes":[{"value":"/ Create a new `FontStyle` attribute.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":307584,"byte_end":307623,"line_start":297,"line_end":297,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1944},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":307761,"byte_end":307770,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"name":"underline","qualname":"<Attribute>::underline","value":"pub fn underline(bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new underline attribute.\n","sig":null,"attributes":[{"value":"/ Create a new underline attribute.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":307712,"byte_end":307749,"line_start":302,"line_end":302,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1945},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":307905,"byte_end":307920,"line_start":308,"line_end":308,"column_start":12,"column_end":27},"name":"font_descriptor","qualname":"<Attribute>::font_descriptor","value":"pub fn font_descriptor<impl Into<KeyOrValue<FontDescriptor>>: Into<KeyOrValue<FontDescriptor>>>(impl Into<KeyOrValue<FontDescriptor>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `FontDescriptor` attribute.\n","sig":null,"attributes":[{"value":"/ Create a new `FontDescriptor` attribute.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":307849,"byte_end":307893,"line_start":307,"line_end":307,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":1950},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\backspace.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"backspace","qualname":"::text::backspace","value":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\backspace.rs","parent":null,"children":[{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1955},{"krate":0,"index":1958},{"krate":0,"index":1961},{"krate":0,"index":1962},{"krate":0,"index":1964}],"decl_id":null,"docs":" Calc start of a backspace delete interval\n","sig":null,"attributes":[{"value":"/ Calc start of a backspace delete interval","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\backspace.rs","byte_start":310093,"byte_end":310138,"line_start":15,"line_end":15,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":1964},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\backspace.rs","byte_start":316661,"byte_end":316688,"line_start":197,"line_end":197,"column_start":8,"column_end":35},"name":"offset_for_delete_backwards","qualname":"::text::backspace::offset_for_delete_backwards","value":"pub fn offset_for_delete_backwards<impl EditableText: EditableText>(&Selection,\n&impl EditableText) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Calculate resulting offset for a backwards delete.\n","sig":null,"attributes":[{"value":"/ Calculate resulting offset for a backwards delete.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\backspace.rs","byte_start":316554,"byte_end":316608,"line_start":195,"line_end":195,"column_start":1,"column_end":55}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\backspace.rs","byte_start":316609,"byte_end":316653,"line_start":196,"line_end":196,"column_start":1,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":1987},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":317696,"byte_end":317708,"line_start":24,"line_end":24,"column_start":11,"column_end":23},"name":"EditableText","qualname":"::text::editable_text::EditableText","value":"EditableText: Sized","parent":null,"children":[{"krate":0,"index":1988},{"krate":0,"index":1989},{"krate":0,"index":1991},{"krate":0,"index":1992},{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999},{"krate":0,"index":2000},{"krate":0,"index":2001},{"krate":0,"index":2002}],"decl_id":null,"docs":" An EditableText trait.\n","sig":null,"attributes":[{"value":"/ An EditableText trait.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":317659,"byte_end":317685,"line_start":23,"line_end":23,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1988},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":317971,"byte_end":317977,"line_start":31,"line_end":31,"column_start":8,"column_end":14},"name":"cursor","qualname":"::text::editable_text::EditableText::cursor","value":"pub fn cursor(&Self, usize) -> Option<StringCursor>","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Create a cursor with a reference to the text and a offset position.","sig":null,"attributes":[{"value":"/ Create a cursor with a reference to the text and a offset position.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":317819,"byte_end":317890,"line_start":28,"line_end":28,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":317895,"byte_end":317898,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Returns None if the position isn't a codepoint boundary.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":317903,"byte_end":317963,"line_start":30,"line_end":30,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1989},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":318161,"byte_end":318165,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"edit","qualname":"::text::editable_text::EditableText::edit","value":"pub fn edit<impl Into<String>: Into<String>>(&mut Self, Range<usize>,\nimpl Into<String>)","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Replace range with new text.\n Can panic if supplied an invalid range.\n","sig":null,"attributes":[{"value":"/ Replace range with new text.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":318032,"byte_end":318064,"line_start":33,"line_end":33,"column_start":5,"column_end":37}},{"value":"/ Can panic if supplied an invalid range.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":318069,"byte_end":318112,"line_start":34,"line_end":34,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1991},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":318267,"byte_end":318272,"line_start":39,"line_end":39,"column_start":8,"column_end":13},"name":"slice","qualname":"::text::editable_text::EditableText::slice","value":"pub fn slice(&Self, Range<usize>) -> Option<Cow<, str>>","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Get slice of text at range.\n","sig":null,"attributes":[{"value":"/ Get slice of text at range.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":318228,"byte_end":318259,"line_start":38,"line_end":38,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1992},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":318369,"byte_end":318372,"line_start":42,"line_end":42,"column_start":8,"column_end":11},"name":"len","qualname":"::text::editable_text::EditableText::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Get length of text (in bytes).\n","sig":null,"attributes":[{"value":"/ Get length of text (in bytes).","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":318327,"byte_end":318361,"line_start":41,"line_end":41,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1993},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":318472,"byte_end":318488,"line_start":45,"line_end":45,"column_start":8,"column_end":24},"name":"prev_word_offset","qualname":"::text::editable_text::EditableText::prev_word_offset","value":"pub fn prev_word_offset(&Self, usize) -> Option<usize>","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Get the previous word offset from the given offset, if it exists.\n","sig":null,"attributes":[{"value":"/ Get the previous word offset from the given offset, if it exists.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":318395,"byte_end":318464,"line_start":44,"line_end":44,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1994},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":318607,"byte_end":318623,"line_start":48,"line_end":48,"column_start":8,"column_end":24},"name":"next_word_offset","qualname":"::text::editable_text::EditableText::next_word_offset","value":"pub fn next_word_offset(&Self, usize) -> Option<usize>","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Get the next word offset from the given offset, if it exists.\n","sig":null,"attributes":[{"value":"/ Get the next word offset from the given offset, if it exists.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":318534,"byte_end":318599,"line_start":47,"line_end":47,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1995},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":318746,"byte_end":318766,"line_start":51,"line_end":51,"column_start":8,"column_end":28},"name":"prev_grapheme_offset","qualname":"::text::editable_text::EditableText::prev_grapheme_offset","value":"pub fn prev_grapheme_offset(&Self, usize) -> Option<usize>","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Get the next grapheme offset from the given offset, if it exists.\n","sig":null,"attributes":[{"value":"/ Get the next grapheme offset from the given offset, if it exists.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":318669,"byte_end":318738,"line_start":50,"line_end":50,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1996},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":318889,"byte_end":318909,"line_start":54,"line_end":54,"column_start":8,"column_end":28},"name":"next_grapheme_offset","qualname":"::text::editable_text::EditableText::next_grapheme_offset","value":"pub fn next_grapheme_offset(&Self, usize) -> Option<usize>","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Get the next grapheme offset from the given offset, if it exists.\n","sig":null,"attributes":[{"value":"/ Get the next grapheme offset from the given offset, if it exists.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":318812,"byte_end":318881,"line_start":53,"line_end":53,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1997},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":319037,"byte_end":319058,"line_start":57,"line_end":57,"column_start":8,"column_end":29},"name":"prev_codepoint_offset","qualname":"::text::editable_text::EditableText::prev_codepoint_offset","value":"pub fn prev_codepoint_offset(&Self, usize) -> Option<usize>","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Get the previous codepoint offset from the given offset, if it exists.\n","sig":null,"attributes":[{"value":"/ Get the previous codepoint offset from the given offset, if it exists.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":318955,"byte_end":319029,"line_start":56,"line_end":56,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1998},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":319182,"byte_end":319203,"line_start":60,"line_end":60,"column_start":8,"column_end":29},"name":"next_codepoint_offset","qualname":"::text::editable_text::EditableText::next_codepoint_offset","value":"pub fn next_codepoint_offset(&Self, usize) -> Option<usize>","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Get the next codepoint offset from the given offset, if it exists.\n","sig":null,"attributes":[{"value":"/ Get the next codepoint offset from the given offset, if it exists.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":319104,"byte_end":319174,"line_start":59,"line_end":59,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1999},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":319318,"byte_end":319338,"line_start":63,"line_end":63,"column_start":8,"column_end":28},"name":"preceding_line_break","qualname":"::text::editable_text::EditableText::preceding_line_break","value":"pub fn preceding_line_break(&Self, usize) -> usize","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Get the preceding line break offset from the given offset\n","sig":null,"attributes":[{"value":"/ Get the preceding line break offset from the given offset","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":319249,"byte_end":319310,"line_start":62,"line_end":62,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2000},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":319440,"byte_end":319455,"line_start":66,"line_end":66,"column_start":8,"column_end":23},"name":"next_line_break","qualname":"::text::editable_text::EditableText::next_line_break","value":"pub fn next_line_break(&Self, usize) -> usize","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Get the next line break offset from the given offset\n","sig":null,"attributes":[{"value":"/ Get the next line break offset from the given offset","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":319376,"byte_end":319432,"line_start":65,"line_end":65,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2001},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":319546,"byte_end":319554,"line_start":69,"line_end":69,"column_start":8,"column_end":16},"name":"is_empty","qualname":"::text::editable_text::EditableText::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Returns `true` if this text has 0 length.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this text has 0 length.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":319493,"byte_end":319538,"line_start":68,"line_end":68,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2002},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":319637,"byte_end":319645,"line_start":72,"line_end":72,"column_start":8,"column_end":16},"name":"from_str","qualname":"::text::editable_text::EditableText::from_str","value":"pub fn from_str(&str) -> Self","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Construct an instance of this type from a `&str`.\n","sig":null,"attributes":[{"value":"/ Construct an instance of this type from a `&str`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":319576,"byte_end":319629,"line_start":71,"line_end":71,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":2036},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":324611,"byte_end":324629,"line_start":242,"line_end":242,"column_start":11,"column_end":29},"name":"EditableTextCursor","qualname":"::text::editable_text::EditableTextCursor","value":"EditableTextCursor<EditableText>","parent":null,"children":[{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2040},{"krate":0,"index":2041},{"krate":0,"index":2042},{"krate":0,"index":2043},{"krate":0,"index":2044},{"krate":0,"index":2045},{"krate":0,"index":2046},{"krate":0,"index":2047}],"decl_id":null,"docs":" A cursor with convenience functions for moving through EditableText.\n","sig":null,"attributes":[{"value":"/ A cursor with convenience functions for moving through EditableText.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":324528,"byte_end":324600,"line_start":241,"line_end":241,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2038},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":324682,"byte_end":324685,"line_start":244,"line_end":244,"column_start":8,"column_end":11},"name":"set","qualname":"::text::editable_text::EditableTextCursor::set","value":"pub fn set(&mut Self, usize)","parent":{"krate":0,"index":2036},"children":[],"decl_id":null,"docs":" Set cursor position.\n","sig":null,"attributes":[{"value":"/ Set cursor position.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":324650,"byte_end":324674,"line_start":243,"line_end":243,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2039},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":324752,"byte_end":324755,"line_start":247,"line_end":247,"column_start":8,"column_end":11},"name":"pos","qualname":"::text::editable_text::EditableTextCursor::pos","value":"pub fn pos(&Self) -> usize","parent":{"krate":0,"index":2036},"children":[],"decl_id":null,"docs":" Get cursor position.\n","sig":null,"attributes":[{"value":"/ Get cursor position.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":324720,"byte_end":324744,"line_start":246,"line_end":246,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2040},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":324842,"byte_end":324853,"line_start":250,"line_end":250,"column_start":8,"column_end":19},"name":"is_boundary","qualname":"::text::editable_text::EditableTextCursor::is_boundary","value":"pub fn is_boundary(&Self) -> bool","parent":{"krate":0,"index":2036},"children":[],"decl_id":null,"docs":" Check if cursor position is at a codepoint boundary.\n","sig":null,"attributes":[{"value":"/ Check if cursor position is at a codepoint boundary.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":324778,"byte_end":324834,"line_start":249,"line_end":249,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2041},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":324996,"byte_end":325000,"line_start":254,"line_end":254,"column_start":8,"column_end":12},"name":"prev","qualname":"::text::editable_text::EditableTextCursor::prev","value":"pub fn prev(&mut Self) -> Option<usize>","parent":{"krate":0,"index":2036},"children":[],"decl_id":null,"docs":" Move cursor to previous codepoint boundary, if it exists.\n Returns previous codepoint as usize offset.\n","sig":null,"attributes":[{"value":"/ Move cursor to previous codepoint boundary, if it exists.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":324875,"byte_end":324936,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ Returns previous codepoint as usize offset.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":324941,"byte_end":324988,"line_start":253,"line_end":253,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2042},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":325151,"byte_end":325155,"line_start":258,"line_end":258,"column_start":8,"column_end":12},"name":"next","qualname":"::text::editable_text::EditableTextCursor::next","value":"pub fn next(&mut Self) -> Option<usize>","parent":{"krate":0,"index":2036},"children":[],"decl_id":null,"docs":" Move cursor to next codepoint boundary, if it exists.\n Returns current codepoint as usize offset.\n","sig":null,"attributes":[{"value":"/ Move cursor to next codepoint boundary, if it exists.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":325035,"byte_end":325092,"line_start":256,"line_end":256,"column_start":5,"column_end":62}},{"value":"/ Returns current codepoint as usize offset.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":325097,"byte_end":325143,"line_start":257,"line_end":257,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2043},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":325289,"byte_end":325308,"line_start":262,"line_end":262,"column_start":8,"column_end":27},"name":"peek_next_codepoint","qualname":"::text::editable_text::EditableTextCursor::peek_next_codepoint","value":"pub fn peek_next_codepoint(&Self) -> Option<char>","parent":{"krate":0,"index":2036},"children":[],"decl_id":null,"docs":" Get the next codepoint after the cursor position, without advancing\n the cursor.\n","sig":null,"attributes":[{"value":"/ Get the next codepoint after the cursor position, without advancing","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":325190,"byte_end":325261,"line_start":260,"line_end":260,"column_start":5,"column_end":76}},{"value":"/ the cursor.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":325266,"byte_end":325281,"line_start":261,"line_end":261,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2044},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":325416,"byte_end":325430,"line_start":265,"line_end":265,"column_start":8,"column_end":22},"name":"prev_codepoint","qualname":"::text::editable_text::EditableTextCursor::prev_codepoint","value":"pub fn prev_codepoint(&mut Self) -> Option<char>","parent":{"krate":0,"index":2036},"children":[],"decl_id":null,"docs":" Return codepoint preceding cursor offset and move cursor backward.\n","sig":null,"attributes":[{"value":"/ Return codepoint preceding cursor offset and move cursor backward.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":325338,"byte_end":325408,"line_start":264,"line_end":264,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2045},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":325534,"byte_end":325548,"line_start":268,"line_end":268,"column_start":8,"column_end":22},"name":"next_codepoint","qualname":"::text::editable_text::EditableTextCursor::next_codepoint","value":"pub fn next_codepoint(&mut Self) -> Option<char>","parent":{"krate":0,"index":2036},"children":[],"decl_id":null,"docs":" Return codepoint at cursor offset and move cursor forward.\n","sig":null,"attributes":[{"value":"/ Return codepoint at cursor offset and move cursor forward.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":325464,"byte_end":325526,"line_start":267,"line_end":267,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2046},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":325646,"byte_end":325656,"line_start":271,"line_end":271,"column_start":8,"column_end":18},"name":"at_or_next","qualname":"::text::editable_text::EditableTextCursor::at_or_next","value":"pub fn at_or_next(&mut Self) -> Option<usize>","parent":{"krate":0,"index":2036},"children":[],"decl_id":null,"docs":" Return current offset if it's a boundary, else next.\n","sig":null,"attributes":[{"value":"/ Return current offset if it's a boundary, else next.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":325582,"byte_end":325638,"line_start":270,"line_end":270,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2047},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":325759,"byte_end":325769,"line_start":274,"line_end":274,"column_start":8,"column_end":18},"name":"at_or_prev","qualname":"::text::editable_text::EditableTextCursor::at_or_prev","value":"pub fn at_or_prev(&mut Self) -> Option<usize>","parent":{"krate":0,"index":2036},"children":[],"decl_id":null,"docs":" Return current offset if it's a boundary, else previous.\n","sig":null,"attributes":[{"value":"/ Return current offset if it's a boundary, else previous.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":325691,"byte_end":325751,"line_start":273,"line_end":273,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":6883},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":325894,"byte_end":325906,"line_start":279,"line_end":279,"column_start":12,"column_end":24},"name":"StringCursor","qualname":"::text::editable_text::StringCursor","value":"StringCursor {  }","parent":null,"children":[{"krate":0,"index":6885},{"krate":0,"index":6886}],"decl_id":null,"docs":" A cursor type that implements EditableTextCursor for String\n","sig":null,"attributes":[{"value":"/ A cursor type that implements EditableTextCursor for String","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":325802,"byte_end":325865,"line_start":277,"line_end":277,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6890},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":335941,"byte_end":335947,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"Editor","qualname":"::text::editor::Editor","value":"Editor {  }","parent":null,"children":[{"krate":0,"index":6892},{"krate":0,"index":6893},{"krate":0,"index":6894},{"krate":0,"index":6895}],"decl_id":null,"docs":" A component for widgets that offer text editing.","sig":null,"attributes":[{"value":"/ A component for widgets that offer text editing.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":335638,"byte_end":335690,"line_start":25,"line_end":25,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":335691,"byte_end":335694,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ `Editor` manages an [`EditableText`] type, applying edits and maintaining","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":335695,"byte_end":335772,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ selection state.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":335773,"byte_end":335793,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":335794,"byte_end":335797,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` is the text data being edited.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":335798,"byte_end":335855,"line_start":30,"line_end":30,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":335856,"byte_end":335859,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ [`EditableText`]: trait.EditableText.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":335860,"byte_end":335905,"line_start":32,"line_end":32,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":336114,"byte_end":336117,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<Editor<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Editor`.\n","sig":null,"attributes":[{"value":"/ Create a new `Editor`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":336076,"byte_end":336102,"line_start":42,"line_end":42,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2121},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":336510,"byte_end":336523,"line_start":56,"line_end":56,"column_start":12,"column_end":25},"name":"set_multiline","qualname":"<Editor<T>>::set_multiline","value":"pub fn set_multiline(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Set whether the editor supports multi-line text. Default to false.","sig":null,"attributes":[{"value":"/ Set whether the editor supports multi-line text. Default to false.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":336321,"byte_end":336391,"line_start":52,"line_end":52,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":336396,"byte_end":336399,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ If this is false, inserted text will only insert up to the first","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":336404,"byte_end":336472,"line_start":54,"line_end":54,"column_start":5,"column_end":73}},{"value":"/ included newline.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":336477,"byte_end":336498,"line_start":55,"line_end":55,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2122},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":336862,"byte_end":336876,"line_start":65,"line_end":65,"column_start":12,"column_end":26},"name":"set_wrap_width","qualname":"<Editor<T>>::set_wrap_width","value":"pub fn set_wrap_width(&mut Self, f64)","parent":null,"children":[],"decl_id":null,"docs":" Set an explicit wrap width for this editor.","sig":null,"attributes":[{"value":"/ Set an explicit wrap width for this editor.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":336601,"byte_end":336648,"line_start":60,"line_end":60,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":336653,"byte_end":336656,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ By default the editor will not wrap lines; this is suitable for","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":336661,"byte_end":336728,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/ cases such as a a single-line text field, where the containing","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":336733,"byte_end":336799,"line_start":63,"line_end":63,"column_start":5,"column_end":71}},{"value":"/ widget will scroll the editor as required.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":336804,"byte_end":336850,"line_start":64,"line_end":64,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2123},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":337069,"byte_end":337075,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"layout","qualname":"<Editor<T>>::layout","value":"pub fn layout(&Self) -> &TextLayout<T>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the inner [`TextLayout`] object.","sig":null,"attributes":[{"value":"/ Return a reference to the inner [`TextLayout`] object.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":336956,"byte_end":337014,"line_start":69,"line_end":69,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":337019,"byte_end":337022,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ [`TextLayout`]: TextLayout","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":337027,"byte_end":337057,"line_start":71,"line_end":71,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2124},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":337256,"byte_end":337266,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"layout_mut","qualname":"<Editor<T>>::layout_mut","value":"pub fn layout_mut(&mut Self) -> &mut TextLayout<T>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the inner [`TextLayout`] object.","sig":null,"attributes":[{"value":"/ Return a mutable reference to the inner [`TextLayout`] object.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":337135,"byte_end":337201,"line_start":76,"line_end":76,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":337206,"byte_end":337209,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ [`TextLayout`]: TextLayout","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":337214,"byte_end":337244,"line_start":78,"line_end":78,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2127},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":337597,"byte_end":337605,"line_start":90,"line_end":90,"column_start":12,"column_end":20},"name":"set_text","qualname":"<Editor<T>>::set_text","value":"pub fn set_text(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Set the text for this editor.","sig":null,"attributes":[{"value":"/ Set the text for this editor.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":337388,"byte_end":337421,"line_start":85,"line_end":85,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":337426,"byte_end":337429,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ This must be set before the editor is used, such as in [`WidgetAdded`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":337434,"byte_end":337509,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":337514,"byte_end":337517,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ [`WidgetAdded`]: ../enum.LifeCycle.html#variant.WidgetAdded","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":337522,"byte_end":337585,"line_start":89,"line_end":89,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2128},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":337780,"byte_end":337789,"line_start":96,"line_end":96,"column_start":12,"column_end":21},"name":"selection","qualname":"<Editor<T>>::selection","value":"pub fn selection(&Self) -> &Selection","parent":null,"children":[],"decl_id":null,"docs":" Return the current selection.\n","sig":null,"attributes":[{"value":"/ Return the current selection.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":337735,"byte_end":337768,"line_start":95,"line_end":95,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2129},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":337961,"byte_end":337974,"line_start":103,"line_end":103,"column_start":12,"column_end":25},"name":"set_selection","qualname":"<Editor<T>>::set_selection","value":"pub fn set_selection(&mut Self, Selection)","parent":null,"children":[],"decl_id":null,"docs":" Set the current selection.","sig":null,"attributes":[{"value":"/ Set the current selection.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":337848,"byte_end":337878,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":337883,"byte_end":337886,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The selection will be constrained to the current text.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":337891,"byte_end":337949,"line_start":102,"line_end":102,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2132},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":338298,"byte_end":338313,"line_start":113,"line_end":113,"column_start":12,"column_end":27},"name":"selection_rects","qualname":"<Editor<T>>::selection_rects","value":"pub fn selection_rects(&Self) -> Vec<Rect>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Rect`s representing the  current selection.\n","sig":null,"attributes":[{"value":"/ Returns the `Rect`s representing the  current selection.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":338226,"byte_end":338286,"line_start":112,"line_end":112,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2133},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":338482,"byte_end":338493,"line_start":118,"line_end":118,"column_start":12,"column_end":23},"name":"cursor_line","qualname":"<Editor<T>>::cursor_line","value":"pub fn cursor_line(&Self) -> Line","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Line` to draw for the current cursor position.\n","sig":null,"attributes":[{"value":"/ Returns the `Line` to draw for the current cursor position.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":338407,"byte_end":338470,"line_start":117,"line_end":117,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2134},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":338641,"byte_end":338646,"line_start":124,"line_end":124,"column_start":12,"column_end":17},"name":"click","qualname":"<Editor<T>>::click","value":"pub fn click(&mut Self, &MouseEvent, &mut T)","parent":null,"children":[],"decl_id":null,"docs":" Handle a mouse click\n","sig":null,"attributes":[{"value":"/ Handle a mouse click","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":338605,"byte_end":338629,"line_start":123,"line_end":123,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2135},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":338823,"byte_end":338827,"line_start":129,"line_end":129,"column_start":12,"column_end":16},"name":"drag","qualname":"<Editor<T>>::drag","value":"pub fn drag(&mut Self, &MouseEvent, &mut T)","parent":null,"children":[],"decl_id":null,"docs":" Handle a mouse drag\n","sig":null,"attributes":[{"value":"/ Handle a mouse drag","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":338788,"byte_end":338811,"line_start":128,"line_end":128,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2136},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":339005,"byte_end":339009,"line_start":134,"line_end":134,"column_start":12,"column_end":16},"name":"copy","qualname":"<Editor<T>>::copy","value":"pub fn copy(&Self, &mut T)","parent":null,"children":[],"decl_id":null,"docs":" Handle a copy command\n","sig":null,"attributes":[{"value":"/ Handle a copy command","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":338968,"byte_end":338993,"line_start":133,"line_end":133,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2137},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":339162,"byte_end":339165,"line_start":141,"line_end":141,"column_start":12,"column_end":15},"name":"cut","qualname":"<Editor<T>>::cut","value":"pub fn cut(&mut Self, &mut T)","parent":null,"children":[],"decl_id":null,"docs":" Handle a cut command\n","sig":null,"attributes":[{"value":"/ Handle a cut command","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":339126,"byte_end":339150,"line_start":140,"line_end":140,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2138},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":339365,"byte_end":339370,"line_start":149,"line_end":149,"column_start":12,"column_end":17},"name":"paste","qualname":"<Editor<T>>::paste","value":"pub fn paste(&mut Self, String, &mut T)","parent":null,"children":[],"decl_id":null,"docs":" Handle a paste command\n","sig":null,"attributes":[{"value":"/ Handle a paste command","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":339327,"byte_end":339353,"line_start":148,"line_end":148,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2139},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":339524,"byte_end":339534,"line_start":154,"line_end":154,"column_start":12,"column_end":22},"name":"select_all","qualname":"<Editor<T>>::select_all","value":"pub fn select_all(&mut Self, &T)","parent":null,"children":[],"decl_id":null,"docs":" Set the selection to the entire buffer.\n","sig":null,"attributes":[{"value":"/ Set the selection to the entire buffer.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":339469,"byte_end":339512,"line_start":153,"line_end":153,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2141},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":340119,"byte_end":340125,"line_start":173,"line_end":173,"column_start":12,"column_end":18},"name":"update","qualname":"<Editor<T>>::update","value":"pub fn update(&mut Self, &mut UpdateCtx, &T, &Env)","parent":null,"children":[],"decl_id":null,"docs":" Update the editor if the data or env has changed.","sig":null,"attributes":[{"value":"/ Update the editor if the data or env has changed.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":339879,"byte_end":339932,"line_start":167,"line_end":167,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":339937,"byte_end":339940,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ The widget owning this `Editor` must call this method during its own","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":339945,"byte_end":340017,"line_start":169,"line_end":169,"column_start":5,"column_end":77}},{"value":"/ [`update`] call.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":340022,"byte_end":340042,"line_start":170,"line_end":170,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":340047,"byte_end":340050,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ [`update`]: ../trait.Widget.html#tymethod.update","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":340055,"byte_end":340107,"line_start":172,"line_end":172,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2142},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":340593,"byte_end":340610,"line_start":185,"line_end":185,"column_start":12,"column_end":29},"name":"rebuild_if_needed","qualname":"<Editor<T>>::rebuild_if_needed","value":"pub fn rebuild_if_needed(&mut Self, &mut PietText, &Env)","parent":null,"children":[],"decl_id":null,"docs":" Must be called in WidgetAdded\n","sig":null,"attributes":[{"value":"/ Must be called in WidgetAdded","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":340548,"byte_end":340581,"line_start":184,"line_end":184,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2143},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":340787,"byte_end":340794,"line_start":190,"line_end":190,"column_start":12,"column_end":19},"name":"do_edit","qualname":"<Editor<T>>::do_edit","value":"pub fn do_edit(&mut Self, EditAction, &mut T)","parent":null,"children":[],"decl_id":null,"docs":" Perform an [`EditAction`](enum.EditAction.html).\n","sig":null,"attributes":[{"value":"/ Perform an [`EditAction`](enum.EditAction.html).","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":340723,"byte_end":340775,"line_start":189,"line_end":189,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2144},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":342453,"byte_end":342457,"line_start":227,"line_end":227,"column_start":12,"column_end":16},"name":"draw","qualname":"<Editor<T>>::draw","value":"pub fn draw<impl Into<Point>: Into<Point>>(&Self, &mut PaintCtx,\nimpl Into<Point>)","parent":null,"children":[],"decl_id":null,"docs":" Draw this editor at the provided point.\n","sig":null,"attributes":[{"value":"/ Draw this editor at the provided point.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":342398,"byte_end":342441,"line_start":226,"line_end":226,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":6902},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":347083,"byte_end":347097,"line_start":24,"line_end":24,"column_start":12,"column_end":26},"name":"FontDescriptor","qualname":"::text::font_descriptor::FontDescriptor","value":"FontDescriptor { family, size, weight, style }","parent":null,"children":[{"krate":0,"index":6903},{"krate":0,"index":6904},{"krate":0,"index":6905},{"krate":0,"index":6906}],"decl_id":null,"docs":" A collection of attributes that describe a font.","sig":null,"attributes":[{"value":"/ A collection of attributes that describe a font.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":346825,"byte_end":346877,"line_start":19,"line_end":19,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":346878,"byte_end":346881,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This is provided as a convenience; library consumers may wish to have","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":346882,"byte_end":346955,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/ a single type that represents a specific font face at a specific size.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":346956,"byte_end":347030,"line_start":22,"line_end":22,"column_start":1,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":6903},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":347167,"byte_end":347173,"line_start":26,"line_end":26,"column_start":9,"column_end":15},"name":"family","qualname":"::text::font_descriptor::FontDescriptor::family","value":"druid_shell::piet_common::FontFamily","parent":{"krate":0,"index":6902},"children":[],"decl_id":null,"docs":" The font's [`FontFamily`](struct.FontFamily.html).\n","sig":null,"attributes":[{"value":"/ The font's [`FontFamily`](struct.FontFamily.html).","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":347104,"byte_end":347158,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":6904},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":347220,"byte_end":347224,"line_start":28,"line_end":28,"column_start":9,"column_end":13},"name":"size","qualname":"::text::font_descriptor::FontDescriptor::size","value":"f64","parent":{"krate":0,"index":6902},"children":[],"decl_id":null,"docs":" The font's size.\n","sig":null,"attributes":[{"value":"/ The font's size.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":347191,"byte_end":347211,"line_start":27,"line_end":27,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":6905},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":347298,"byte_end":347304,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"name":"weight","qualname":"::text::font_descriptor::FontDescriptor::weight","value":"druid_shell::piet_common::FontWeight","parent":{"krate":0,"index":6902},"children":[],"decl_id":null,"docs":" The font's [`FontWeight`](struct.FontWeight.html).\n","sig":null,"attributes":[{"value":"/ The font's [`FontWeight`](struct.FontWeight.html).","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":347235,"byte_end":347289,"line_start":29,"line_end":29,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":6906},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":347383,"byte_end":347388,"line_start":32,"line_end":32,"column_start":9,"column_end":14},"name":"style","qualname":"::text::font_descriptor::FontDescriptor::style","value":"druid_shell::piet_common::FontStyle","parent":{"krate":0,"index":6902},"children":[],"decl_id":null,"docs":" The font's [`FontStyle`](struct.FontStyle.html).\n","sig":null,"attributes":[{"value":"/ The font's [`FontStyle`](struct.FontStyle.html).","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":347322,"byte_end":347374,"line_start":31,"line_end":31,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2171},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":347564,"byte_end":347567,"line_start":39,"line_end":39,"column_start":18,"column_end":21},"name":"new","qualname":"<FontDescriptor>::new","value":"pub const fn new(FontFamily) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new descriptor with the provided [`FontFamily`].","sig":null,"attributes":[{"value":"/ Create a new descriptor with the provided [`FontFamily`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":347430,"byte_end":347491,"line_start":36,"line_end":36,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":347496,"byte_end":347499,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ [`FontFamily`]: struct.FontFamily.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":347504,"byte_end":347546,"line_start":38,"line_end":38,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2172},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":347876,"byte_end":347885,"line_start":49,"line_end":49,"column_start":18,"column_end":27},"name":"with_size","qualname":"<FontDescriptor>::with_size","value":"pub const fn with_size(Self, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Buider-style method to set the descriptor's font size.\n","sig":null,"attributes":[{"value":"/ Buider-style method to set the descriptor's font size.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":347800,"byte_end":347858,"line_start":48,"line_end":48,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2173},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":348103,"byte_end":348114,"line_start":57,"line_end":57,"column_start":18,"column_end":29},"name":"with_weight","qualname":"<FontDescriptor>::with_weight","value":"pub const fn with_weight(Self, FontWeight) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Buider-style method to set the descriptor's [`FontWeight`].","sig":null,"attributes":[{"value":"/ Buider-style method to set the descriptor's [`FontWeight`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":347967,"byte_end":348030,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":348035,"byte_end":348038,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ [`FontWeight`]: struct.FontWeight.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":348043,"byte_end":348085,"line_start":56,"line_end":56,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2174},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":348340,"byte_end":348350,"line_start":65,"line_end":65,"column_start":18,"column_end":28},"name":"with_style","qualname":"<FontDescriptor>::with_style","value":"pub const fn with_style(Self, FontStyle) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Buider-style method to set the descriptor's [`FontStyle`].","sig":null,"attributes":[{"value":"/ Buider-style method to set the descriptor's [`FontStyle`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":348209,"byte_end":348271,"line_start":62,"line_end":62,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":348276,"byte_end":348279,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ [`FontStyle`]: enum.FontStyle.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":348284,"byte_end":348322,"line_start":64,"line_end":64,"column_start":5,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":2177},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"format","qualname":"::text::format","value":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","parent":null,"children":[{"krate":0,"index":2178},{"krate":0,"index":2181},{"krate":0,"index":2184},{"krate":0,"index":2187},{"krate":0,"index":2188},{"krate":0,"index":2190},{"krate":0,"index":2196},{"krate":0,"index":6917},{"krate":0,"index":6919},{"krate":0,"index":6921},{"krate":0,"index":6923},{"krate":0,"index":2200},{"krate":0,"index":2203},{"krate":0,"index":2211},{"krate":0,"index":2214},{"krate":0,"index":2218},{"krate":0,"index":2222},{"krate":0,"index":2227},{"krate":0,"index":2229},{"krate":0,"index":2231}],"decl_id":null,"docs":" Creating, interpreting, and validating textual representations of values.\n","sig":null,"attributes":[{"value":"/ Creating, interpreting, and validating textual representations of values.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":349315,"byte_end":349392,"line_start":15,"line_end":15,"column_start":1,"column_end":78}}]},{"kind":"Trait","id":{"krate":0,"index":2190},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":349972,"byte_end":349981,"line_start":33,"line_end":33,"column_start":11,"column_end":20},"name":"Formatter","qualname":"::text::format::Formatter","value":"Formatter<T>","parent":null,"children":[{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":2195}],"decl_id":null,"docs":" A trait for types that create, interpret, and validate textual representations\n of values.","sig":null,"attributes":[{"value":"/ A trait for types that create, interpret, and validate textual representations","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":349478,"byte_end":349560,"line_start":23,"line_end":23,"column_start":1,"column_end":83}},{"value":"/ of values.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":349561,"byte_end":349575,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":349576,"byte_end":349579,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ A formatter has two responsiblities: converting a value into an appropriate","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":349580,"byte_end":349659,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ string representation, and attempting to convert a string back into the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":349660,"byte_end":349735,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ appropriate value.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":349736,"byte_end":349758,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":349759,"byte_end":349762,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In addition, a formatter performs validation on *partial* strings; that is,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":349763,"byte_end":349842,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ it determines whether or not a string represents a potentially valid value,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":349843,"byte_end":349922,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ even if it is not currently valid.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":349923,"byte_end":349961,"line_start":32,"line_end":32,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2192},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":350050,"byte_end":350056,"line_start":35,"line_end":35,"column_start":8,"column_end":14},"name":"format","qualname":"::text::format::Formatter::format","value":"pub fn format(&Self, &T) -> String","parent":{"krate":0,"index":2190},"children":[],"decl_id":null,"docs":" Return the string representation of this value.\n","sig":null,"attributes":[{"value":"/ Return the string representation of this value.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":349991,"byte_end":350042,"line_start":34,"line_end":34,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2193},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":350398,"byte_end":350416,"line_start":41,"line_end":41,"column_start":8,"column_end":26},"name":"format_for_editing","qualname":"::text::format::Formatter::format_for_editing","value":"pub fn format_for_editing(&Self, &T) -> String","parent":{"krate":0,"index":2190},"children":[],"decl_id":null,"docs":" Return the string representation of this value, to be used during editing.","sig":null,"attributes":[{"value":"/ Return the string representation of this value, to be used during editing.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":350090,"byte_end":350168,"line_start":36,"line_end":36,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":350173,"byte_end":350176,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ This can be used if you want the text to differ based on whether or not","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":350181,"byte_end":350256,"line_start":38,"line_end":38,"column_start":5,"column_end":80}},{"value":"/ it is being edited; for instance you might display a dollar sign when","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":350261,"byte_end":350334,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"/ not editing, but not display it during editing.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":350339,"byte_end":350390,"line_start":40,"line_end":40,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2194},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":351473,"byte_end":351495,"line_start":65,"line_end":65,"column_start":8,"column_end":30},"name":"validate_partial_input","qualname":"::text::format::Formatter::validate_partial_input","value":"pub fn validate_partial_input(&Self, &str, &Selection) -> Validation","parent":{"krate":0,"index":2190},"children":[],"decl_id":null,"docs":" Determine whether the newly edited text is valid for this value type.","sig":null,"attributes":[{"value":"/ Determine whether the newly edited text is valid for this value type.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":350485,"byte_end":350558,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":350563,"byte_end":350566,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ This always returns a [`Validation`] object which indicates if","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":350571,"byte_end":350637,"line_start":47,"line_end":47,"column_start":5,"column_end":71}},{"value":"/ validation was successful or not, and which can also optionally,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":350642,"byte_end":350710,"line_start":48,"line_end":48,"column_start":5,"column_end":73}},{"value":"/ regardless of success or failure, include new text and selection values","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":350715,"byte_end":350790,"line_start":49,"line_end":49,"column_start":5,"column_end":80}},{"value":"/ that should replace the current ones.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":350795,"byte_end":350836,"line_start":50,"line_end":50,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":350841,"byte_end":350844,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":350849,"byte_end":350852,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Replacing the text or selection during validation","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":350857,"byte_end":350912,"line_start":53,"line_end":53,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":350917,"byte_end":350920,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Your `Formatter` may wish to change the current text or selection during","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":350925,"byte_end":351001,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ editing for a number of reasons. For instance if validation fails, you","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":351006,"byte_end":351080,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ may wish to allow editing to continue, but select the invalid region;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":351085,"byte_end":351158,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ alternatively you may consider input valid but want to transform it,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":351163,"byte_end":351235,"line_start":58,"line_end":58,"column_start":5,"column_end":77}},{"value":"/ such as by changing case or inserting spaces.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":351240,"byte_end":351289,"line_start":59,"line_end":59,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":351294,"byte_end":351297,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ If you do *not* explicitly set replacement text, and validation is not","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":351302,"byte_end":351376,"line_start":61,"line_end":61,"column_start":5,"column_end":79}},{"value":"/ successful, the edit will be ignored.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":351381,"byte_end":351422,"line_start":62,"line_end":62,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":351427,"byte_end":351430,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ [`Validation`]: Validation","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":351435,"byte_end":351465,"line_start":64,"line_end":64,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2195},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":351760,"byte_end":351765,"line_start":72,"line_end":72,"column_start":8,"column_end":13},"name":"value","qualname":"::text::format::Formatter::value","value":"pub fn value(&Self, &str) -> Result<T, ValidationError>","parent":{"krate":0,"index":2190},"children":[],"decl_id":null,"docs":" The value represented by the input, or an error if the input is invalid.","sig":null,"attributes":[{"value":"/ The value represented by the input, or an error if the input is invalid.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":351553,"byte_end":351629,"line_start":67,"line_end":67,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":351634,"byte_end":351637,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This must return `Ok()` for any string created by [`format`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":351642,"byte_end":351707,"line_start":69,"line_end":69,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":351712,"byte_end":351715,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ [`format`]: #tymethod.format","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":351720,"byte_end":351752,"line_start":71,"line_end":71,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2196},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":351941,"byte_end":351951,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"Validation","qualname":"::text::format::Validation","value":"Validation { selection_change, text_change }","parent":null,"children":[{"krate":0,"index":2197},{"krate":0,"index":2198},{"krate":0,"index":2199}],"decl_id":null,"docs":" The result of a [`Formatter`] attempting to validate some partial input.","sig":null,"attributes":[{"value":"/ The result of a [`Formatter`] attempting to validate some partial input.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":351820,"byte_end":351896,"line_start":75,"line_end":75,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":351897,"byte_end":351900,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ [`Formatter`]: Formatter","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":351901,"byte_end":351929,"line_start":77,"line_end":77,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2198},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":352164,"byte_end":352180,"line_start":84,"line_end":84,"column_start":9,"column_end":25},"name":"selection_change","qualname":"::text::format::Validation::selection_change","value":"std::option::Option<text::selection::Selection>","parent":{"krate":0,"index":2196},"children":[],"decl_id":null,"docs":" A manual selection override.","sig":null,"attributes":[{"value":"/ A manual selection override.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":351999,"byte_end":352031,"line_start":80,"line_end":80,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":352036,"byte_end":352039,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This will be set as the new selection (regardless of whether or not","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":352044,"byte_end":352115,"line_start":82,"line_end":82,"column_start":5,"column_end":76}},{"value":"/ validation succeeded or failed)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":352120,"byte_end":352155,"line_start":83,"line_end":83,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2199},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":352347,"byte_end":352358,"line_start":89,"line_end":89,"column_start":9,"column_end":20},"name":"text_change","qualname":"::text::format::Validation::text_change","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2196},"children":[],"decl_id":null,"docs":" A manual text override.","sig":null,"attributes":[{"value":"/ A manual text override.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":352205,"byte_end":352232,"line_start":85,"line_end":85,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":352237,"byte_end":352240,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ This will be set as the new text, regardless of whether or not","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":352245,"byte_end":352311,"line_start":87,"line_end":87,"column_start":5,"column_end":71}},{"value":"/ validation failed.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":352316,"byte_end":352338,"line_start":88,"line_end":88,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":6917},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":352902,"byte_end":352917,"line_start":102,"line_end":102,"column_start":12,"column_end":27},"name":"ValidationError","qualname":"::text::format::ValidationError","value":"ValidationError {  }","parent":null,"children":[{"krate":0,"index":6918}],"decl_id":null,"docs":" An error returned by a [`Formatter`] when it cannot parse input.","sig":null,"attributes":[{"value":"/ An error returned by a [`Formatter`] when it cannot parse input.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":352379,"byte_end":352447,"line_start":92,"line_end":92,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":352448,"byte_end":352451,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ This implements [`source`] so you can access the inner error type.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":352452,"byte_end":352522,"line_start":94,"line_end":94,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":352523,"byte_end":352526,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [`source`]: std::Error::source;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":352527,"byte_end":352562,"line_start":96,"line_end":96,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2200},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":353448,"byte_end":353462,"line_start":117,"line_end":117,"column_start":12,"column_end":26},"name":"ParseFormatter","qualname":"::text::format::ParseFormatter","value":"ParseFormatter {  }","parent":null,"children":[{"krate":0,"index":2202}],"decl_id":null,"docs":" A naive [`Formatter`] for types that implement [`FromStr`].","sig":null,"attributes":[{"value":"/ A naive [`Formatter`] for types that implement [`FromStr`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":352962,"byte_end":353025,"line_start":106,"line_end":106,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":353026,"byte_end":353029,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ For types that implement [`std::fmt::Display`], the [`ParseFormatter::new`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":353030,"byte_end":353109,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"/ constructor creates a formatter that format's it's value using that trait.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":353110,"byte_end":353188,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ If you would like to customize the formatting, you can use the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":353189,"byte_end":353255,"line_start":110,"line_end":110,"column_start":1,"column_end":67}},{"value":"/ [`ParseFormatter::with_format_fn`] constructor, and pass your own formatting","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":353256,"byte_end":353336,"line_start":111,"line_end":111,"column_start":1,"column_end":81}},{"value":"/ function.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":353337,"byte_end":353350,"line_start":112,"line_end":112,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":353351,"byte_end":353354,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`Formatter`]: Formatter","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":353355,"byte_end":353383,"line_start":114,"line_end":114,"column_start":1,"column_end":29}},{"value":"/ [`FromStr`]: std::str::FromStr","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":353384,"byte_end":353418,"line_start":115,"line_end":115,"column_start":1,"column_end":35}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":353419,"byte_end":353436,"line_start":116,"line_end":116,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2204},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":353588,"byte_end":353595,"line_start":123,"line_end":123,"column_start":12,"column_end":19},"name":"success","qualname":"<Validation>::success","value":"pub fn success() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Validation` indicating succes.\n","sig":null,"attributes":[{"value":"/ Create a `Validation` indicating succes.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":353532,"byte_end":353576,"line_start":122,"line_end":122,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2205},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":353827,"byte_end":353834,"line_start":132,"line_end":132,"column_start":12,"column_end":19},"name":"failure","qualname":"<Validation>::failure","value":"pub fn failure<impl std::error::Error + 'static: std::error::Error +\n'static>(impl std::error::Error + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Validation` with an error indicating the failure reason.\n","sig":null,"attributes":[{"value":"/ Create a `Validation` with an error indicating the failure reason.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":353745,"byte_end":353815,"line_start":131,"line_end":131,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2207},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":354095,"byte_end":354106,"line_start":140,"line_end":140,"column_start":12,"column_end":23},"name":"change_text","qualname":"<Validation>::change_text","value":"pub fn change_text(Self, String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Optionally set a `String` that will replace the current contents.\n","sig":null,"attributes":[{"value":"/ Optionally set a `String` that will replace the current contents.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":354014,"byte_end":354083,"line_start":139,"line_end":139,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2208},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":354285,"byte_end":354301,"line_start":146,"line_end":146,"column_start":12,"column_end":28},"name":"change_selection","qualname":"<Validation>::change_selection","value":"pub fn change_selection(Self, Selection) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Optionally set a [`Selection`] that will replace the current one.\n","sig":null,"attributes":[{"value":"/ Optionally set a [`Selection`] that will replace the current one.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":354204,"byte_end":354273,"line_start":145,"line_end":145,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2209},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":354475,"byte_end":354481,"line_start":152,"line_end":152,"column_start":12,"column_end":18},"name":"is_err","qualname":"<Validation>::is_err","value":"pub fn is_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this `Validation` indicates success.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this `Validation` indicates success.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":354405,"byte_end":354463,"line_start":151,"line_end":151,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2210},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":354672,"byte_end":354677,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"name":"error","qualname":"<Validation>::error","value":"pub fn error(&Self) -> Option<&ValidationError>","parent":null,"children":[],"decl_id":null,"docs":" If validation failed, return the underlying [`ValidationError`].","sig":null,"attributes":[{"value":"/ If validation failed, return the underlying [`ValidationError`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":354539,"byte_end":354607,"line_start":156,"line_end":156,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":354612,"byte_end":354615,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ [`ValidationError`]: ValidationError","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":354620,"byte_end":354660,"line_start":158,"line_end":158,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2212},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":354859,"byte_end":354862,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"new","qualname":"<ValidationError>::new","value":"pub fn new<impl std::error::Error + 'static: std::error::Error +\n'static>(impl std::error::Error + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ValidationError` with the given error type.\n","sig":null,"attributes":[{"value":"/ Create a new `ValidationError` with the given error type.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":354786,"byte_end":354847,"line_start":165,"line_end":165,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2216},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":355063,"byte_end":355066,"line_start":173,"line_end":173,"column_start":12,"column_end":15},"name":"new","qualname":"<ParseFormatter<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ParseFormatter`.\n","sig":null,"attributes":[{"value":"/ Create a new `ParseFormatter`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":355017,"byte_end":355051,"line_start":172,"line_end":172,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2220},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":355320,"byte_end":355334,"line_start":183,"line_end":183,"column_start":12,"column_end":26},"name":"with_format_fn","qualname":"<ParseFormatter<T>>::with_format_fn","value":"pub fn with_format_fn<impl Fn(&T) -> String + 'static: Fn(&T) -> String +\n'static>(impl Fn(&T) -> String + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ParseFormatter` using the provided formatting function.\n provided function.\n","sig":null,"attributes":[{"value":"/ Create a new `ParseFormatter` using the provided formatting function.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":355208,"byte_end":355281,"line_start":181,"line_end":181,"column_start":5,"column_end":78}},{"value":"/ provided function.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":355286,"byte_end":355308,"line_start":182,"line_end":182,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":6925},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":358444,"byte_end":358454,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"TextLayout","qualname":"::text::layout::TextLayout","value":"TextLayout {  }","parent":null,"children":[{"krate":0,"index":6927},{"krate":0,"index":6928},{"krate":0,"index":6929},{"krate":0,"index":6930},{"krate":0,"index":6931},{"krate":0,"index":6932},{"krate":0,"index":6933}],"decl_id":null,"docs":" A component for displaying text on screen.","sig":null,"attributes":[{"value":"/ A component for displaying text on screen.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":357429,"byte_end":357475,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":357476,"byte_end":357479,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This is a type intended to be used by other widgets that display text.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":357480,"byte_end":357554,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ It allows for the text itself as well as font and other styling information","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":357555,"byte_end":357634,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ to be set and modified. It wraps an inner layout object, and handles","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":357635,"byte_end":357707,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"/ invalidating and rebuilding it as required.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":357708,"byte_end":357755,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":357756,"byte_end":357759,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This object is not valid until the [`rebuild_if_needed`] method has been","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":357760,"byte_end":357836,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ called. You should generally do this in your widget's [`layout`] method.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":357837,"byte_end":357913,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ Additionally, you should call [`needs_rebuild_after_update`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":357914,"byte_end":357978,"line_start":36,"line_end":36,"column_start":1,"column_end":65}},{"value":"/ as part of your widget's [`update`] method; if this returns `true`, you will need","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":357979,"byte_end":358064,"line_start":37,"line_end":37,"column_start":1,"column_end":86}},{"value":"/ to call [`rebuild_if_needed`] again, generally by scheduling another [`layout`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":358065,"byte_end":358148,"line_start":38,"line_end":38,"column_start":1,"column_end":84}},{"value":"/ pass.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":358149,"byte_end":358158,"line_start":39,"line_end":39,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":358159,"byte_end":358162,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`layout`]: trait.Widget.html#tymethod.layout","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":358163,"byte_end":358212,"line_start":41,"line_end":41,"column_start":1,"column_end":50}},{"value":"/ [`update`]: trait.Widget.html#tymethod.update","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":358213,"byte_end":358262,"line_start":42,"line_end":42,"column_start":1,"column_end":50}},{"value":"/ [`needs_rebuild_after_update`]: #method.needs_rebuild_after_update","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":358263,"byte_end":358333,"line_start":43,"line_end":43,"column_start":1,"column_end":71}},{"value":"/ [`rebuild_if_needed`]: #method.rebuild_if_needed","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":358334,"byte_end":358386,"line_start":44,"line_end":44,"column_start":1,"column_end":53}},{"value":"/ [`Env`]: struct.Env.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":358387,"byte_end":358415,"line_start":45,"line_end":45,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":6937},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":358983,"byte_end":358996,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"LayoutMetrics","qualname":"::text::layout::LayoutMetrics","value":"LayoutMetrics { size, first_baseline }","parent":null,"children":[{"krate":0,"index":6938},{"krate":0,"index":6939}],"decl_id":null,"docs":" Metrics describing the layout text.\n","sig":null,"attributes":[{"value":"/ Metrics describing the layout text.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":358893,"byte_end":358932,"line_start":60,"line_end":60,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":6938},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":359047,"byte_end":359051,"line_start":64,"line_end":64,"column_start":9,"column_end":13},"name":"size","qualname":"::text::layout::LayoutMetrics::size","value":"druid_shell::kurbo::Size","parent":{"krate":0,"index":6937},"children":[],"decl_id":null,"docs":" The nominal size of the layout.\n","sig":null,"attributes":[{"value":"/ The nominal size of the layout.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":359003,"byte_end":359038,"line_start":63,"line_end":63,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":6939},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":359146,"byte_end":359160,"line_start":66,"line_end":66,"column_start":9,"column_end":23},"name":"first_baseline","qualname":"::text::layout::LayoutMetrics::first_baseline","value":"f64","parent":{"krate":0,"index":6937},"children":[],"decl_id":null,"docs":" The distance from the nominal top of the layout to the first baseline.\n","sig":null,"attributes":[{"value":"/ The distance from the nominal top of the layout to the first baseline.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":359063,"byte_end":359137,"line_start":65,"line_end":65,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2300},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":359401,"byte_end":359404,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<TextLayout<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `TextLayout` object.","sig":null,"attributes":[{"value":"/ Create a new `TextLayout` object.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":359226,"byte_end":359263,"line_start":71,"line_end":71,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":359268,"byte_end":359271,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ You must set the text ([`set_text`]) before using this object.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":359276,"byte_end":359342,"line_start":73,"line_end":73,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":359347,"byte_end":359350,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`set_text`]: #method.set_text","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":359355,"byte_end":359389,"line_start":75,"line_end":75,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2301},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":359878,"byte_end":359887,"line_start":91,"line_end":91,"column_start":12,"column_end":21},"name":"from_text","qualname":"<TextLayout<T>>::from_text","value":"pub fn from_text<impl Into<T>: Into<T>>(impl Into<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `TextLayout` with the provided text.","sig":null,"attributes":[{"value":"/ Create a new `TextLayout` with the provided text.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":359735,"byte_end":359788,"line_start":88,"line_end":88,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":359793,"byte_end":359796,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ This is useful when the text is not died to application data.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":359801,"byte_end":359866,"line_start":90,"line_end":90,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2303},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":360088,"byte_end":360102,"line_start":99,"line_end":99,"column_start":12,"column_end":26},"name":"set_text_color","qualname":"<TextLayout<T>>::set_text_color","value":"pub fn set_text_color<impl Into<KeyOrValue<Color>>: Into<KeyOrValue<Color>>>(&mut Self,\nimpl Into<KeyOrValue<Color>>)","parent":null,"children":[],"decl_id":null,"docs":" Set the default text color for this layout.\n","sig":null,"attributes":[{"value":"/ Set the default text color for this layout.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":360029,"byte_end":360076,"line_start":98,"line_end":98,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2305},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":360626,"byte_end":360634,"line_start":115,"line_end":115,"column_start":12,"column_end":20},"name":"set_font","qualname":"<TextLayout<T>>::set_font","value":"pub fn set_font<impl Into<KeyOrValue<FontDescriptor>>: Into<KeyOrValue<FontDescriptor>>>(&mut Self,\nimpl Into<KeyOrValue<FontDescriptor>>)","parent":null,"children":[],"decl_id":null,"docs":" Set the default font.","sig":null,"attributes":[{"value":"/ Set the default font.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":360315,"byte_end":360340,"line_start":107,"line_end":107,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":360345,"byte_end":360348,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ The argument is a [`FontDescriptor`] or a [`Key<FontDescriptor>`] that","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":360353,"byte_end":360427,"line_start":109,"line_end":109,"column_start":5,"column_end":79}},{"value":"/ can be resolved from the [`Env`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":360432,"byte_end":360469,"line_start":110,"line_end":110,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":360474,"byte_end":360477,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ [`FontDescriptor`]: struct.FontDescriptor.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":360482,"byte_end":360532,"line_start":112,"line_end":112,"column_start":5,"column_end":55}},{"value":"/ [`Env`]: struct.Env.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":360537,"byte_end":360565,"line_start":113,"line_end":113,"column_start":5,"column_end":33}},{"value":"/ [`Key<FontDescriptor>`]: struct.Key.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":360570,"byte_end":360614,"line_start":114,"line_end":114,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2307},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":361116,"byte_end":361129,"line_start":130,"line_end":130,"column_start":12,"column_end":25},"name":"set_text_size","qualname":"<TextLayout<T>>::set_text_size","value":"pub fn set_text_size<impl Into<KeyOrValue<f64>>: Into<KeyOrValue<f64>>>(&mut Self,\nimpl Into<KeyOrValue<f64>>)","parent":null,"children":[],"decl_id":null,"docs":" Set the font size.","sig":null,"attributes":[{"value":"/ Set the font size.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":360883,"byte_end":360905,"line_start":124,"line_end":124,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":360910,"byte_end":360913,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ This overrides the size in the [`FontDescriptor`] provided to [`set_font`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":360918,"byte_end":360997,"line_start":126,"line_end":126,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":361002,"byte_end":361005,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`set_font`]: #method.set_font.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":361010,"byte_end":361049,"line_start":128,"line_end":128,"column_start":5,"column_end":44}},{"value":"/ [`FontDescriptor`]: struct.FontDescriptor.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":361054,"byte_end":361104,"line_start":129,"line_end":129,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2309},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":361529,"byte_end":361543,"line_start":142,"line_end":142,"column_start":12,"column_end":26},"name":"set_wrap_width","qualname":"<TextLayout<T>>::set_wrap_width","value":"pub fn set_wrap_width(&mut Self, f64)","parent":null,"children":[],"decl_id":null,"docs":" Set the width at which to wrap words.","sig":null,"attributes":[{"value":"/ Set the width at which to wrap words.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":361373,"byte_end":361414,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":361419,"byte_end":361422,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ You may pass `f64::INFINITY` to disable word wrapping","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":361427,"byte_end":361484,"line_start":140,"line_end":140,"column_start":5,"column_end":62}},{"value":"/ (the default behaviour).","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":361489,"byte_end":361517,"line_start":141,"line_end":141,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2310},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":361944,"byte_end":361962,"line_start":154,"line_end":154,"column_start":12,"column_end":30},"name":"set_text_alignment","qualname":"<TextLayout<T>>::set_text_alignment","value":"pub fn set_text_alignment(&mut Self, TextAlignment)","parent":null,"children":[],"decl_id":null,"docs":" Set the [`TextAlignment`] for this layout.","sig":null,"attributes":[{"value":"/ Set the [`TextAlignment`] for this layout.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":361827,"byte_end":361873,"line_start":151,"line_end":151,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":361878,"byte_end":361881,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [`TextAlignment`]: enum.TextAlignment.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":361886,"byte_end":361932,"line_start":153,"line_end":153,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2313},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":362452,"byte_end":362465,"line_start":169,"line_end":169,"column_start":12,"column_end":25},"name":"needs_rebuild","qualname":"<TextLayout<T>>::needs_rebuild","value":"pub fn needs_rebuild(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this layout needs to be rebuilt.","sig":null,"attributes":[{"value":"/ Returns `true` if this layout needs to be rebuilt.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":362175,"byte_end":362229,"line_start":163,"line_end":163,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":362234,"byte_end":362237,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This happens (for instance) after style attributes are modified.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":362242,"byte_end":362310,"line_start":165,"line_end":165,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":362315,"byte_end":362318,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ This does not account for things like the text changing, handling that","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":362323,"byte_end":362397,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/ is the responsibility of the user.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":362402,"byte_end":362440,"line_start":168,"line_end":168,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2314},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":362564,"byte_end":362572,"line_start":174,"line_end":174,"column_start":12,"column_end":20},"name":"set_text","qualname":"<TextLayout<T>>::set_text","value":"pub fn set_text(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Set the text to display.\n","sig":null,"attributes":[{"value":"/ Set the text to display.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":362524,"byte_end":362552,"line_start":173,"line_end":173,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2315},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":362908,"byte_end":362912,"line_start":184,"line_end":184,"column_start":12,"column_end":16},"name":"text","qualname":"<TextLayout<T>>::text","value":"pub fn text(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`TextStorage`] backing this layout, if it exists.","sig":null,"attributes":[{"value":"/ Returns the [`TextStorage`] backing this layout, if it exists.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":362774,"byte_end":362840,"line_start":181,"line_end":181,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":362845,"byte_end":362848,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ [`TextStorage`]: trait.TextStorage.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":362853,"byte_end":362896,"line_start":183,"line_end":183,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2316},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":363094,"byte_end":363100,"line_start":191,"line_end":191,"column_start":12,"column_end":18},"name":"layout","qualname":"<TextLayout<T>>::layout","value":"pub fn layout(&Self) -> Option<&PietTextLayout>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner Piet [`TextLayout`] type.","sig":null,"attributes":[{"value":"/ Returns the inner Piet [`TextLayout`] type.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":362974,"byte_end":363021,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":363026,"byte_end":363029,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ [`TextLayout`]: ./piet/trait.TextLayout.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":363034,"byte_end":363082,"line_start":190,"line_end":190,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2317},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":363372,"byte_end":363376,"line_start":200,"line_end":200,"column_start":12,"column_end":16},"name":"size","qualname":"<TextLayout<T>>::size","value":"pub fn size(&Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" The size of the laid-out text.","sig":null,"attributes":[{"value":"/ The size of the laid-out text.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":363177,"byte_end":363211,"line_start":195,"line_end":195,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":363216,"byte_end":363219,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ This is not meaningful until [`rebuild_if_needed`] has been called.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":363224,"byte_end":363295,"line_start":197,"line_end":197,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":363300,"byte_end":363303,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ [`rebuild_if_needed`]: #method.rebuild_if_needed","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":363308,"byte_end":363360,"line_start":199,"line_end":199,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2319},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":363775,"byte_end":363789,"line_start":213,"line_end":213,"column_start":12,"column_end":26},"name":"layout_metrics","qualname":"<TextLayout<T>>::layout_metrics","value":"pub fn layout_metrics(&Self) -> LayoutMetrics","parent":null,"children":[],"decl_id":null,"docs":" Return the text's [`LayoutMetrics`].","sig":null,"attributes":[{"value":"/ Return the text's [`LayoutMetrics`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":363521,"byte_end":363561,"line_start":207,"line_end":207,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":363566,"byte_end":363569,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This is not meaningful until [`rebuild_if_needed`] has been called.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":363574,"byte_end":363645,"line_start":209,"line_end":209,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":363650,"byte_end":363653,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ [`rebuild_if_needed`]: #method.rebuild_if_needed","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":363658,"byte_end":363710,"line_start":211,"line_end":211,"column_start":5,"column_end":57}},{"value":"/ [`LayoutMetrics`]: struct.LayoutMetrics.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":363715,"byte_end":363763,"line_start":212,"line_end":212,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2320},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":364544,"byte_end":364567,"line_start":234,"line_end":234,"column_start":12,"column_end":35},"name":"text_position_for_point","qualname":"<TextLayout<T>>::text_position_for_point","value":"pub fn text_position_for_point(&Self, Point) -> usize","parent":null,"children":[],"decl_id":null,"docs":" For a given `Point` (relative to this object's origin), returns index\n into the underlying text of the nearest grapheme boundary.\n","sig":null,"attributes":[{"value":"/ For a given `Point` (relative to this object's origin), returns index","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":364392,"byte_end":364465,"line_start":232,"line_end":232,"column_start":5,"column_end":78}},{"value":"/ into the underlying text of the nearest grapheme boundary.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":364470,"byte_end":364532,"line_start":233,"line_end":233,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2322},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":365049,"byte_end":365072,"line_start":248,"line_end":248,"column_start":12,"column_end":35},"name":"point_for_text_position","qualname":"<TextLayout<T>>::point_for_text_position","value":"pub fn point_for_text_position(&Self, usize) -> Point","parent":null,"children":[],"decl_id":null,"docs":" Given the utf-8 position of a character boundary in the underlying text,\n return the `Point` (relative to this object's origin) representing the\n boundary of the containing grapheme.","sig":null,"attributes":[{"value":"/ Given the utf-8 position of a character boundary in the underlying text,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":364746,"byte_end":364822,"line_start":241,"line_end":241,"column_start":5,"column_end":81}},{"value":"/ return the `Point` (relative to this object's origin) representing the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":364827,"byte_end":364901,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/ boundary of the containing grapheme.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":364906,"byte_end":364946,"line_start":243,"line_end":243,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":364951,"byte_end":364954,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":364959,"byte_end":364971,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":364976,"byte_end":364979,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Panics if `text_pos` is not a character boundary.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":364984,"byte_end":365037,"line_start":247,"line_end":247,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2324},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":365530,"byte_end":365545,"line_start":261,"line_end":261,"column_start":12,"column_end":27},"name":"rects_for_range","qualname":"<TextLayout<T>>::rects_for_range","value":"pub fn rects_for_range(&Self, Range<usize>) -> Vec<Rect>","parent":null,"children":[],"decl_id":null,"docs":" Given a utf-8 range in the underlying text, return a `Vec` of `Rect`s\n representing the nominal bounding boxes of the text in that range.","sig":null,"attributes":[{"value":"/ Given a utf-8 range in the underlying text, return a `Vec` of `Rect`s","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":365267,"byte_end":365340,"line_start":255,"line_end":255,"column_start":5,"column_end":78}},{"value":"/ representing the nominal bounding boxes of the text in that range.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":365345,"byte_end":365415,"line_start":256,"line_end":256,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":365420,"byte_end":365423,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":365428,"byte_end":365440,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":365445,"byte_end":365448,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ Panics if the range start or end is not a character boundary.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":365453,"byte_end":365518,"line_start":260,"line_end":260,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2326},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":365901,"byte_end":365930,"line_start":270,"line_end":270,"column_start":12,"column_end":41},"name":"cursor_line_for_text_position","qualname":"<TextLayout<T>>::cursor_line_for_text_position","value":"pub fn cursor_line_for_text_position(&Self, usize) -> Line","parent":null,"children":[],"decl_id":null,"docs":" Given the utf-8 position of a character boundary in the underlying text,\n return a `Line` suitable for drawing a vertical cursor at that boundary.\n","sig":null,"attributes":[{"value":"/ Given the utf-8 position of a character boundary in the underlying text,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":365732,"byte_end":365808,"line_start":268,"line_end":268,"column_start":5,"column_end":81}},{"value":"/ return a `Line` suitable for drawing a vertical cursor at that boundary.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":365813,"byte_end":365889,"line_start":269,"line_end":269,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2329},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":366720,"byte_end":366746,"line_start":288,"line_end":288,"column_start":12,"column_end":38},"name":"needs_rebuild_after_update","qualname":"<TextLayout<T>>::needs_rebuild_after_update","value":"pub fn needs_rebuild_after_update(&mut Self, &mut UpdateCtx) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Called during the containing widgets `update` method; this text object\n will check to see if any used environment items have changed,\n and invalidate itself as needed.","sig":null,"attributes":[{"value":"/ Called during the containing widgets `update` method; this text object","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":366454,"byte_end":366528,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ will check to see if any used environment items have changed,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":366533,"byte_end":366598,"line_start":284,"line_end":284,"column_start":5,"column_end":70}},{"value":"/ and invalidate itself as needed.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":366603,"byte_end":366639,"line_start":285,"line_end":285,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":366644,"byte_end":366647,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if the text item needs to be rebuilt.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":366652,"byte_end":366708,"line_start":287,"line_end":287,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2331},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":367790,"byte_end":367807,"line_start":316,"line_end":316,"column_start":12,"column_end":29},"name":"rebuild_if_needed","qualname":"<TextLayout<T>>::rebuild_if_needed","value":"pub fn rebuild_if_needed(&mut Self, &mut PietText, &Env)","parent":null,"children":[],"decl_id":null,"docs":" Rebuild the inner layout as needed.","sig":null,"attributes":[{"value":"/ Rebuild the inner layout as needed.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":367273,"byte_end":367312,"line_start":305,"line_end":305,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":367317,"byte_end":367320,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ This `TextLayout` object manages a lower-level layout object that may","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":367325,"byte_end":367398,"line_start":307,"line_end":307,"column_start":5,"column_end":78}},{"value":"/ need to be rebuilt in response to changes to the text or attributes","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":367403,"byte_end":367474,"line_start":308,"line_end":308,"column_start":5,"column_end":76}},{"value":"/ like the font.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":367479,"byte_end":367497,"line_start":309,"line_end":309,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":367502,"byte_end":367505,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ This method should be called whenever any of these things may have changed.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":367510,"byte_end":367589,"line_start":311,"line_end":311,"column_start":5,"column_end":84}},{"value":"/ A simple way to ensure this is correct is to always call this method","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":367594,"byte_end":367666,"line_start":312,"line_end":312,"column_start":5,"column_end":77}},{"value":"/ as part of your widget's [`layout`] method.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":367671,"byte_end":367718,"line_start":313,"line_end":313,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":367723,"byte_end":367726,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ [`layout`]: trait.Widget.html#method.layout","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":367731,"byte_end":367778,"line_start":315,"line_end":315,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2333},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":369226,"byte_end":369230,"line_start":351,"line_end":351,"column_start":12,"column_end":16},"name":"draw","qualname":"<TextLayout<T>>::draw","value":"pub fn draw<impl Into<Point>: Into<Point>>(&Self, &mut PaintCtx,\nimpl Into<Point>)","parent":null,"children":[],"decl_id":null,"docs":"  Draw the layout at the provided `Point`.","sig":null,"attributes":[{"value":"/  Draw the layout at the provided `Point`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":368926,"byte_end":368971,"line_start":343,"line_end":343,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":368976,"byte_end":368979,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/  The origin of the layout is the top-left corner.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":368984,"byte_end":369037,"line_start":345,"line_end":345,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":369042,"byte_end":369045,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/  You must call [`rebuild_if_needed`] at some point before you first","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":369050,"byte_end":369121,"line_start":347,"line_end":347,"column_start":5,"column_end":76}},{"value":"/  call this method.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":369126,"byte_end":369148,"line_start":348,"line_end":348,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":369153,"byte_end":369156,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/  [`rebuild_if_needed`]: #method.rebuild_if_needed","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":369161,"byte_end":369214,"line_start":350,"line_end":350,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":2341},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"movement","qualname":"::text::movement","value":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","parent":null,"children":[{"krate":0,"index":2342},{"krate":0,"index":2345},{"krate":0,"index":2348},{"krate":0,"index":2349},{"krate":0,"index":2352},{"krate":0,"index":2355},{"krate":0,"index":2358},{"krate":0,"index":6949},{"krate":0,"index":6970},{"krate":0,"index":6972},{"krate":0,"index":6973},{"krate":0,"index":6975},{"krate":0,"index":6977},{"krate":0,"index":2361}],"decl_id":null,"docs":" Text editing movements.\n","sig":null,"attributes":[{"value":"/ Text editing movements.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":370935,"byte_end":370962,"line_start":15,"line_end":15,"column_start":1,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6950},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":371245,"byte_end":371249,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"Left","qualname":"::text::movement::Movement::Left","value":"Movement::Left","parent":{"krate":0,"index":6949},"children":[],"decl_id":null,"docs":" Move to the left by one grapheme cluster.\n","sig":null,"attributes":[{"value":"/ Move to the left by one grapheme cluster.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":371195,"byte_end":371240,"line_start":24,"line_end":24,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6952},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":371306,"byte_end":371311,"line_start":27,"line_end":27,"column_start":5,"column_end":10},"name":"Right","qualname":"::text::movement::Movement::Right","value":"Movement::Right","parent":{"krate":0,"index":6949},"children":[],"decl_id":null,"docs":" Move to the right by one grapheme cluster.\n","sig":null,"attributes":[{"value":"/ Move to the right by one grapheme cluster.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":371255,"byte_end":371301,"line_start":26,"line_end":26,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6954},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":371351,"byte_end":371353,"line_start":29,"line_end":29,"column_start":5,"column_end":7},"name":"Up","qualname":"::text::movement::Movement::Up","value":"Movement::Up","parent":{"krate":0,"index":6949},"children":[],"decl_id":null,"docs":" Move up one visible line.\n","sig":null,"attributes":[{"value":"/ Move up one visible line.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":371317,"byte_end":371346,"line_start":28,"line_end":28,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6956},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":371395,"byte_end":371399,"line_start":31,"line_end":31,"column_start":5,"column_end":9},"name":"Down","qualname":"::text::movement::Movement::Down","value":"Movement::Down","parent":{"krate":0,"index":6949},"children":[],"decl_id":null,"docs":" Move down one visible line.\n","sig":null,"attributes":[{"value":"/ Move down one visible line.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":371359,"byte_end":371390,"line_start":30,"line_end":30,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6958},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":371443,"byte_end":371451,"line_start":33,"line_end":33,"column_start":5,"column_end":13},"name":"LeftWord","qualname":"::text::movement::Movement::LeftWord","value":"Movement::LeftWord","parent":{"krate":0,"index":6949},"children":[],"decl_id":null,"docs":" Move to the left by one word.\n","sig":null,"attributes":[{"value":"/ Move to the left by one word.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":371405,"byte_end":371438,"line_start":32,"line_end":32,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6960},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":371496,"byte_end":371505,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"RightWord","qualname":"::text::movement::Movement::RightWord","value":"Movement::RightWord","parent":{"krate":0,"index":6949},"children":[],"decl_id":null,"docs":" Move to the right by one word.\n","sig":null,"attributes":[{"value":"/ Move to the right by one word.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":371457,"byte_end":371491,"line_start":34,"line_end":34,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6962},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":371553,"byte_end":371571,"line_start":37,"line_end":37,"column_start":5,"column_end":23},"name":"PrecedingLineBreak","qualname":"::text::movement::Movement::PrecedingLineBreak","value":"Movement::PrecedingLineBreak","parent":{"krate":0,"index":6949},"children":[],"decl_id":null,"docs":" Move to left end of visible line.\n","sig":null,"attributes":[{"value":"/ Move to left end of visible line.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":371511,"byte_end":371548,"line_start":36,"line_end":36,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6964},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":371620,"byte_end":371633,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"NextLineBreak","qualname":"::text::movement::Movement::NextLineBreak","value":"Movement::NextLineBreak","parent":{"krate":0,"index":6949},"children":[],"decl_id":null,"docs":" Move to right end of visible line.\n","sig":null,"attributes":[{"value":"/ Move to right end of visible line.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":371577,"byte_end":371615,"line_start":38,"line_end":38,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6966},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":371685,"byte_end":371700,"line_start":41,"line_end":41,"column_start":5,"column_end":20},"name":"StartOfDocument","qualname":"::text::movement::Movement::StartOfDocument","value":"Movement::StartOfDocument","parent":{"krate":0,"index":6949},"children":[],"decl_id":null,"docs":" Move to the beginning of the document\n","sig":null,"attributes":[{"value":"/ Move to the beginning of the document","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":371639,"byte_end":371680,"line_start":40,"line_end":40,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6968},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":371746,"byte_end":371759,"line_start":43,"line_end":43,"column_start":5,"column_end":18},"name":"EndOfDocument","qualname":"::text::movement::Movement::EndOfDocument","value":"Movement::EndOfDocument","parent":{"krate":0,"index":6949},"children":[],"decl_id":null,"docs":" Move to the end of the document\n","sig":null,"attributes":[{"value":"/ Move to the end of the document","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":371706,"byte_end":371741,"line_start":42,"line_end":42,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":6949},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":371180,"byte_end":371188,"line_start":23,"line_end":23,"column_start":10,"column_end":18},"name":"Movement","qualname":"::text::movement::Movement","value":"pub enum Movement {\n    Left,\n    Right,\n    Up,\n    Down,\n    LeftWord,\n    RightWord,\n    PrecedingLineBreak,\n    NextLineBreak,\n    StartOfDocument,\n    EndOfDocument,\n}","parent":null,"children":[{"krate":0,"index":6950},{"krate":0,"index":6952},{"krate":0,"index":6954},{"krate":0,"index":6956},{"krate":0,"index":6958},{"krate":0,"index":6960},{"krate":0,"index":6962},{"krate":0,"index":6964},{"krate":0,"index":6966},{"krate":0,"index":6968}],"decl_id":null,"docs":" The specification of a movement.\n","sig":null,"attributes":[{"value":"/ The specification of a movement.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":371093,"byte_end":371129,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":2361},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":372070,"byte_end":372078,"line_start":53,"line_end":53,"column_start":8,"column_end":16},"name":"movement","qualname":"::text::movement::movement","value":"pub fn movement<T: EditableText +\nTextStorage>(Movement, Selection, &TextLayout<T>, bool) -> Selection","parent":null,"children":[],"decl_id":null,"docs":" Compute the result of movement on a selection.","sig":null,"attributes":[{"value":"/ Compute the result of movement on a selection.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":371764,"byte_end":371814,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":371815,"byte_end":371818,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ returns a new selection representing the state after the movement.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":371819,"byte_end":371889,"line_start":48,"line_end":48,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":371890,"byte_end":371893,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ If `modify` is true, only the 'active' edge (the `end`) of the selection","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":371894,"byte_end":371970,"line_start":50,"line_end":50,"column_start":1,"column_end":77}},{"value":"/ should be changed; this is the case when the user moves with the shift","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":371971,"byte_end":372045,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ key pressed.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\movement.rs","byte_start":372046,"byte_end":372062,"line_start":52,"line_end":52,"column_start":1,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":2365},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"selection","qualname":"::text::selection","value":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","parent":null,"children":[{"krate":0,"index":2366},{"krate":0,"index":2367},{"krate":0,"index":2370},{"krate":0,"index":2373},{"krate":0,"index":2376},{"krate":0,"index":6978},{"krate":0,"index":6982},{"krate":0,"index":6984},{"krate":0,"index":6986},{"krate":0,"index":2379}],"decl_id":null,"docs":" A Selection type for text editing.\n","sig":null,"attributes":[{"value":"/ A Selection type for text editing.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":375726,"byte_end":375764,"line_start":15,"line_end":15,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":6978},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":375926,"byte_end":375935,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"name":"Selection","qualname":"::text::selection::Selection","value":"Selection { start, end, h_pos }","parent":null,"children":[{"krate":0,"index":6979},{"krate":0,"index":6980},{"krate":0,"index":6981}],"decl_id":null,"docs":" A Selection type for EditableText.\n","sig":null,"attributes":[{"value":"/ A Selection type for EditableText.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":375846,"byte_end":375884,"line_start":22,"line_end":22,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":6979},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":376070,"byte_end":376075,"line_start":27,"line_end":27,"column_start":9,"column_end":14},"name":"start","qualname":"::text::selection::Selection::start","value":"usize","parent":{"krate":0,"index":6978},"children":[],"decl_id":null,"docs":" The inactive edge of a selection, as a byte offset. When\n equal to end, the selection range acts as a caret.\n","sig":null,"attributes":[{"value":"/ The inactive edge of a selection, as a byte offset. When","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":375942,"byte_end":376002,"line_start":25,"line_end":25,"column_start":5,"column_end":65}},{"value":"/ equal to end, the selection range acts as a caret.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":376007,"byte_end":376061,"line_start":26,"line_end":26,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":6980},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":376151,"byte_end":376154,"line_start":30,"line_end":30,"column_start":9,"column_end":12},"name":"end","qualname":"::text::selection::Selection::end","value":"usize","parent":{"krate":0,"index":6978},"children":[],"decl_id":null,"docs":" The active edge of a selection, as a byte offset.\n","sig":null,"attributes":[{"value":"/ The active edge of a selection, as a byte offset.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":376089,"byte_end":376142,"line_start":29,"line_end":29,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":6981},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":376237,"byte_end":376242,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"h_pos","qualname":"::text::selection::Selection::h_pos","value":"std::option::Option<f64>","parent":{"krate":0,"index":6978},"children":[],"decl_id":null,"docs":" The saved horizontal position, during vertical movement.\n","sig":null,"attributes":[{"value":"/ The saved horizontal position, during vertical movement.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":376168,"byte_end":376228,"line_start":32,"line_end":32,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2380},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":376402,"byte_end":376405,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Selection>::new","value":"pub fn new(usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a selection that begins at start and goes to end.\n Like dragging a mouse from start to end.\n","sig":null,"attributes":[{"value":"/ Create a selection that begins at start and goes to end.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":376281,"byte_end":376341,"line_start":37,"line_end":37,"column_start":5,"column_end":65}},{"value":"/ Like dragging a mouse from start to end.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":376346,"byte_end":376390,"line_start":38,"line_end":38,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2381},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":376703,"byte_end":376714,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"constrained","qualname":"<Selection>::constrained","value":"pub fn constrained<impl EditableText: EditableText>(Self, &impl EditableText)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new selection that is guaranteed to be valid for the provided\n text.\n","sig":null,"attributes":[{"value":"/ Create a new selection that is guaranteed to be valid for the provided","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":376544,"byte_end":376618,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ text.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":376623,"byte_end":376632,"line_start":48,"line_end":48,"column_start":5,"column_end":14}},{"value":"must_use = \"constrained constructs a new Selection\"","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":376637,"byte_end":376691,"line_start":49,"line_end":49,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2383},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":377155,"byte_end":377160,"line_start":64,"line_end":64,"column_start":12,"column_end":17},"name":"caret","qualname":"<Selection>::caret","value":"pub fn caret(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a caret, which is just a selection with the same and start and end.\n","sig":null,"attributes":[{"value":"/ Create a caret, which is just a selection with the same and start and end.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":377065,"byte_end":377143,"line_start":63,"line_end":63,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2384},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":377382,"byte_end":377392,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"with_h_pos","qualname":"<Selection>::with_h_pos","value":"pub fn with_h_pos(Self, Option<f64>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new selection from this selection, with the provided h_pos.\n","sig":null,"attributes":[{"value":"/ Construct a new selection from this selection, with the provided h_pos.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":377295,"byte_end":377370,"line_start":72,"line_end":72,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2385},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":377530,"byte_end":377538,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"is_caret","qualname":"<Selection>::is_caret","value":"pub fn is_caret(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If start == end, it's a caret\n","sig":null,"attributes":[{"value":"/ If start == end, it's a caret","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":377485,"byte_end":377518,"line_start":78,"line_end":78,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2386},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":377673,"byte_end":377676,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"min","qualname":"<Selection>::min","value":"pub fn min(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the smallest index (left, in left-to-right languages)\n","sig":null,"attributes":[{"value":"/ Return the smallest index (left, in left-to-right languages)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":377597,"byte_end":377661,"line_start":83,"line_end":83,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2387},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":377815,"byte_end":377818,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"max","qualname":"<Selection>::max","value":"pub fn max(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the largest index (right, in left-to-right languages)\n","sig":null,"attributes":[{"value":"/ Return the largest index (right, in left-to-right languages)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":377739,"byte_end":377803,"line_start":88,"line_end":88,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2388},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":377942,"byte_end":377947,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"range","qualname":"<Selection>::range","value":"pub fn range(Self) -> Range<usize>","parent":null,"children":[],"decl_id":null,"docs":" Return a range from smallest to largest index\n","sig":null,"attributes":[{"value":"/ Return a range from smallest to largest index","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":377881,"byte_end":377930,"line_start":93,"line_end":93,"column_start":5,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":2423},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":378908,"byte_end":378919,"line_start":25,"line_end":25,"column_start":11,"column_end":22},"name":"TextStorage","qualname":"::text::storage::TextStorage","value":"TextStorage: PietTextStorage + Data","parent":null,"children":[{"krate":0,"index":2424}],"decl_id":null,"docs":" A type that represents text that can be displayed.\n","sig":null,"attributes":[{"value":"/ A type that represents text that can be displayed.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":378843,"byte_end":378897,"line_start":24,"line_end":24,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2424},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":379141,"byte_end":379155,"line_start":29,"line_end":29,"column_start":8,"column_end":22},"name":"add_attributes","qualname":"::text::storage::TextStorage::add_attributes","value":"pub fn add_attributes(&Self, PietTextLayoutBuilder, &Env)\n-> PietTextLayoutBuilder","parent":{"krate":0,"index":2423},"children":[],"decl_id":null,"docs":" If this TextStorage object manages style spans, it should implement\n this method and update the provided builder with its spans, as required.\n","sig":null,"attributes":[{"value":"/ If this TextStorage object manages style spans, it should implement","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":378950,"byte_end":379021,"line_start":26,"line_end":26,"column_start":5,"column_end":76}},{"value":"/ this method and update the provided builder with its spans, as required.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":379026,"byte_end":379102,"line_start":27,"line_end":27,"column_start":5,"column_end":81}},{"value":"allow(unused_variables)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":379107,"byte_end":379133,"line_start":28,"line_end":28,"column_start":5,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":2425},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":379460,"byte_end":379466,"line_start":38,"line_end":38,"column_start":10,"column_end":16},"name":"ArcStr","qualname":"::text::storage::ArcStr","value":"Arc<str>","parent":null,"children":[],"decl_id":null,"docs":" A reference counted string slice.","sig":null,"attributes":[{"value":"/ A reference counted string slice.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":379258,"byte_end":379295,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":379296,"byte_end":379299,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This is a data-friendly way to represent strings in druid. Unlike `String`","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":379300,"byte_end":379378,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ it cannot be mutated, but unlike `String` it can be cheaply cloned.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":379379,"byte_end":379450,"line_start":37,"line_end":37,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":6987},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":379557,"byte_end":379565,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"name":"RichText","qualname":"::text::storage::RichText","value":"RichText {  }","parent":null,"children":[{"krate":0,"index":6988},{"krate":0,"index":6989}],"decl_id":null,"docs":" Text with optional style spans.\n","sig":null,"attributes":[{"value":"/ Text with optional style spans.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":379480,"byte_end":379515,"line_start":40,"line_end":40,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2427},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":379713,"byte_end":379716,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<RichText>::new","value":"pub fn new(ArcStr) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `RichText` object with the provided text.\n","sig":null,"attributes":[{"value":"/ Create a new `RichText` object with the provided text.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":379643,"byte_end":379701,"line_start":48,"line_end":48,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2428},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":379994,"byte_end":380008,"line_start":59,"line_end":59,"column_start":12,"column_end":26},"name":"with_attribute","qualname":"<RichText>::with_attribute","value":"pub fn with_attribute<impl RangeBounds<usize>: RangeBounds<usize>>(Self,\nimpl RangeBounds<usize>, Attribute) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for adding an [`Attribute`] to a range of text.","sig":null,"attributes":[{"value":"/ Builder-style method for adding an [`Attribute`] to a range of text.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":379859,"byte_end":379931,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":379936,"byte_end":379939,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ [`Attribute`]: enum.Attribute.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":379944,"byte_end":379982,"line_start":58,"line_end":58,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2430},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":380204,"byte_end":380207,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"len","qualname":"<RichText>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The length of the buffer, in utf8 code units.\n","sig":null,"attributes":[{"value":"/ The length of the buffer, in utf8 code units.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":380143,"byte_end":380192,"line_start":64,"line_end":64,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2431},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":380328,"byte_end":380336,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<RichText>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the underlying buffer is empty.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the underlying buffer is empty.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":380263,"byte_end":380316,"line_start":69,"line_end":69,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2432},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":380514,"byte_end":380527,"line_start":77,"line_end":77,"column_start":12,"column_end":25},"name":"add_attribute","qualname":"<RichText>::add_attribute","value":"pub fn add_attribute<impl RangeBounds<usize>: RangeBounds<usize>>(&mut Self,\nimpl RangeBounds<usize>, Attribute)","parent":null,"children":[],"decl_id":null,"docs":" Add an [`Attribute`] to the provided range of text.","sig":null,"attributes":[{"value":"/ Add an [`Attribute`] to the provided range of text.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":380396,"byte_end":380451,"line_start":74,"line_end":74,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":380456,"byte_end":380459,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`Attribute`]: enum.Attribute.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":380464,"byte_end":380502,"line_start":76,"line_end":76,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6997},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":382425,"byte_end":382429,"line_start":29,"line_end":29,"column_start":5,"column_end":9},"name":"Move","qualname":"::text::text_input::EditAction::Move","value":"EditAction::Move(Movement)","parent":{"krate":0,"index":6996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7000},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":382445,"byte_end":382460,"line_start":30,"line_end":30,"column_start":5,"column_end":20},"name":"ModifySelection","qualname":"::text::text_input::EditAction::ModifySelection","value":"EditAction::ModifySelection(Movement)","parent":{"krate":0,"index":6996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7003},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":382476,"byte_end":382485,"line_start":31,"line_end":31,"column_start":5,"column_end":14},"name":"SelectAll","qualname":"::text::text_input::EditAction::SelectAll","value":"EditAction::SelectAll","parent":{"krate":0,"index":6996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7005},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":382491,"byte_end":382496,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Click","qualname":"::text::text_input::EditAction::Click","value":"EditAction::Click(MouseAction)","parent":{"krate":0,"index":6996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7008},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":382515,"byte_end":382519,"line_start":33,"line_end":33,"column_start":5,"column_end":9},"name":"Drag","qualname":"::text::text_input::EditAction::Drag","value":"EditAction::Drag(MouseAction)","parent":{"krate":0,"index":6996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7011},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":382538,"byte_end":382544,"line_start":34,"line_end":34,"column_start":5,"column_end":11},"name":"Delete","qualname":"::text::text_input::EditAction::Delete","value":"EditAction::Delete","parent":{"krate":0,"index":6996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7013},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":382550,"byte_end":382559,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"Backspace","qualname":"::text::text_input::EditAction::Backspace","value":"EditAction::Backspace","parent":{"krate":0,"index":6996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7015},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":382565,"byte_end":382575,"line_start":36,"line_end":36,"column_start":5,"column_end":15},"name":"JumpDelete","qualname":"::text::text_input::EditAction::JumpDelete","value":"EditAction::JumpDelete(Movement)","parent":{"krate":0,"index":6996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7018},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":382591,"byte_end":382604,"line_start":37,"line_end":37,"column_start":5,"column_end":18},"name":"JumpBackspace","qualname":"::text::text_input::EditAction::JumpBackspace","value":"EditAction::JumpBackspace(Movement)","parent":{"krate":0,"index":6996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7021},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":382620,"byte_end":382626,"line_start":38,"line_end":38,"column_start":5,"column_end":11},"name":"Insert","qualname":"::text::text_input::EditAction::Insert","value":"EditAction::Insert(String)","parent":{"krate":0,"index":6996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7024},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":382640,"byte_end":382645,"line_start":39,"line_end":39,"column_start":5,"column_end":10},"name":"Paste","qualname":"::text::text_input::EditAction::Paste","value":"EditAction::Paste(String)","parent":{"krate":0,"index":6996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6996},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":382408,"byte_end":382418,"line_start":28,"line_end":28,"column_start":10,"column_end":20},"name":"EditAction","qualname":"::text::text_input::EditAction","value":"pub enum EditAction {\n    Move(Movement),\n    ModifySelection(Movement),\n    SelectAll,\n    Click(MouseAction),\n    Drag(MouseAction),\n    Delete,\n    Backspace,\n    JumpDelete(Movement),\n    JumpBackspace(Movement),\n    Insert(String),\n    Paste(String),\n}","parent":null,"children":[{"krate":0,"index":6997},{"krate":0,"index":7000},{"krate":0,"index":7003},{"krate":0,"index":7005},{"krate":0,"index":7008},{"krate":0,"index":7011},{"krate":0,"index":7013},{"krate":0,"index":7015},{"krate":0,"index":7018},{"krate":0,"index":7021},{"krate":0,"index":7024}],"decl_id":null,"docs":" An enum that represents actions in a text buffer.\n","sig":null,"attributes":[{"value":"/ An enum that represents actions in a text buffer.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":382287,"byte_end":382340,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":382376,"byte_end":382398,"line_start":27,"line_end":27,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":7035},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":382774,"byte_end":382785,"line_start":45,"line_end":45,"column_start":12,"column_end":23},"name":"MouseAction","qualname":"::text::text_input::MouseAction","value":"MouseAction { row, column, mods }","parent":null,"children":[{"krate":0,"index":7036},{"krate":0,"index":7037},{"krate":0,"index":7038}],"decl_id":null,"docs":" Extra information related to mouse actions\n","sig":null,"attributes":[{"value":"/ Extra information related to mouse actions","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":382658,"byte_end":382704,"line_start":42,"line_end":42,"column_start":1,"column_end":47}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":382740,"byte_end":382762,"line_start":44,"line_end":44,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":7036},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":382796,"byte_end":382799,"line_start":46,"line_end":46,"column_start":9,"column_end":12},"name":"row","qualname":"::text::text_input::MouseAction::row","value":"usize","parent":{"krate":0,"index":7035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7037},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":382816,"byte_end":382822,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"name":"column","qualname":"::text::text_input::MouseAction::column","value":"usize","parent":{"krate":0,"index":7035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7038},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":382839,"byte_end":382843,"line_start":48,"line_end":48,"column_start":9,"column_end":13},"name":"mods","qualname":"::text::text_input::MouseAction::mods","value":"druid_shell::Modifiers","parent":{"krate":0,"index":7035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2461},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":382942,"byte_end":382951,"line_start":52,"line_end":52,"column_start":11,"column_end":20},"name":"TextInput","qualname":"::text::text_input::TextInput","value":"TextInput","parent":null,"children":[{"krate":0,"index":2462}],"decl_id":null,"docs":" A trait for types that map keyboard events to possible edit actions.\n","sig":null,"attributes":[{"value":"/ A trait for types that map keyboard events to possible edit actions.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":382859,"byte_end":382931,"line_start":51,"line_end":51,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2462},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":383055,"byte_end":383067,"line_start":55,"line_end":55,"column_start":8,"column_end":20},"name":"handle_event","qualname":"::text::text_input::TextInput::handle_event","value":"pub fn handle_event(&Self, &KeyEvent) -> Option<EditAction>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Handle a key event and return an edit action to be executed\n for the key event\n","sig":null,"attributes":[{"value":"/ Handle a key event and return an edit action to be executed","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":382958,"byte_end":383021,"line_start":53,"line_end":53,"column_start":5,"column_end":68}},{"value":"/ for the key event","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":383026,"byte_end":383047,"line_start":54,"line_end":54,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":7047},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":383255,"byte_end":383269,"line_start":61,"line_end":61,"column_start":12,"column_end":26},"name":"BasicTextInput","qualname":"::text::text_input::BasicTextInput","value":"","parent":null,"children":[],"decl_id":null,"docs":" Handles key events and returns actions that are applicable to\n single line textboxes\n","sig":null,"attributes":[{"value":"/ Handles key events and returns actions that are applicable to","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":383119,"byte_end":383184,"line_start":58,"line_end":58,"column_start":1,"column_end":66}},{"value":"/ single line textboxes","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":383185,"byte_end":383210,"line_start":59,"line_end":59,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2464},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":383344,"byte_end":383347,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<BasicTextInput>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BasicTextInput`.\n","sig":null,"attributes":[{"value":"/ Create a new `BasicTextInput`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":383298,"byte_end":383332,"line_start":64,"line_end":64,"column_start":5,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":2534},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"theme","qualname":"::theme","value":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","parent":null,"children":[{"krate":0,"index":2535},{"krate":0,"index":2538},{"krate":0,"index":2539},{"krate":0,"index":2542},{"krate":0,"index":2545},{"krate":0,"index":2548},{"krate":0,"index":2551},{"krate":0,"index":2554},{"krate":0,"index":2557},{"krate":0,"index":2560},{"krate":0,"index":2561},{"krate":0,"index":2562},{"krate":0,"index":2563},{"krate":0,"index":2564},{"krate":0,"index":2565},{"krate":0,"index":2566},{"krate":0,"index":2567},{"krate":0,"index":2568},{"krate":0,"index":2569},{"krate":0,"index":2570},{"krate":0,"index":2571},{"krate":0,"index":2572},{"krate":0,"index":2573},{"krate":0,"index":2574},{"krate":0,"index":2575},{"krate":0,"index":2576},{"krate":0,"index":2577},{"krate":0,"index":2578},{"krate":0,"index":2579},{"krate":0,"index":2580},{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":2584},{"krate":0,"index":2585},{"krate":0,"index":2586},{"krate":0,"index":2587},{"krate":0,"index":2588},{"krate":0,"index":2589},{"krate":0,"index":2590},{"krate":0,"index":2591},{"krate":0,"index":2592},{"krate":0,"index":2593},{"krate":0,"index":2594},{"krate":0,"index":2595},{"krate":0,"index":2596},{"krate":0,"index":2597},{"krate":0,"index":2598},{"krate":0,"index":2599},{"krate":0,"index":2600},{"krate":0,"index":2601},{"krate":0,"index":2602}],"decl_id":null,"docs":" Theme keys and initial values.\n","sig":null,"attributes":[{"value":"/ Theme keys and initial values.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":388591,"byte_end":388625,"line_start":15,"line_end":15,"column_start":1,"column_end":35}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":388627,"byte_end":388650,"line_start":17,"line_end":17,"column_start":1,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":2560},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":388770,"byte_end":388793,"line_start":23,"line_end":23,"column_start":11,"column_end":34},"name":"WINDOW_BACKGROUND_COLOR","qualname":"::theme::WINDOW_BACKGROUND_COLOR","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2561},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":388887,"byte_end":388898,"line_start":26,"line_end":26,"column_start":11,"column_end":22},"name":"LABEL_COLOR","qualname":"::theme::LABEL_COLOR","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2562},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":388975,"byte_end":388992,"line_start":27,"line_end":27,"column_start":11,"column_end":28},"name":"PLACEHOLDER_COLOR","qualname":"::theme::PLACEHOLDER_COLOR","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2563},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":389076,"byte_end":389089,"line_start":29,"line_end":29,"column_start":11,"column_end":24},"name":"PRIMARY_LIGHT","qualname":"::theme::PRIMARY_LIGHT","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2564},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":389168,"byte_end":389180,"line_start":30,"line_end":30,"column_start":11,"column_end":23},"name":"PRIMARY_DARK","qualname":"::theme::PRIMARY_DARK","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2565},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":389258,"byte_end":389277,"line_start":31,"line_end":31,"column_start":11,"column_end":30},"name":"PROGRESS_BAR_RADIUS","qualname":"::theme::PROGRESS_BAR_RADIUS","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2566},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":389364,"byte_end":389380,"line_start":33,"line_end":33,"column_start":11,"column_end":27},"name":"BACKGROUND_LIGHT","qualname":"::theme::BACKGROUND_LIGHT","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2567},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":389462,"byte_end":389477,"line_start":34,"line_end":34,"column_start":11,"column_end":26},"name":"BACKGROUND_DARK","qualname":"::theme::BACKGROUND_DARK","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2568},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":389558,"byte_end":389574,"line_start":35,"line_end":35,"column_start":11,"column_end":27},"name":"FOREGROUND_LIGHT","qualname":"::theme::FOREGROUND_LIGHT","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2569},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":389656,"byte_end":389671,"line_start":36,"line_end":36,"column_start":11,"column_end":26},"name":"FOREGROUND_DARK","qualname":"::theme::FOREGROUND_DARK","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2570},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":389752,"byte_end":389763,"line_start":37,"line_end":37,"column_start":11,"column_end":22},"name":"BUTTON_DARK","qualname":"::theme::BUTTON_DARK","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2571},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":389840,"byte_end":389852,"line_start":38,"line_end":38,"column_start":11,"column_end":23},"name":"BUTTON_LIGHT","qualname":"::theme::BUTTON_LIGHT","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2572},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":389930,"byte_end":389950,"line_start":39,"line_end":39,"column_start":11,"column_end":31},"name":"BUTTON_BORDER_RADIUS","qualname":"::theme::BUTTON_BORDER_RADIUS","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2573},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":390027,"byte_end":390046,"line_start":40,"line_end":40,"column_start":11,"column_end":30},"name":"BUTTON_BORDER_WIDTH","qualname":"::theme::BUTTON_BORDER_WIDTH","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2574},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":390133,"byte_end":390144,"line_start":42,"line_end":42,"column_start":11,"column_end":22},"name":"BORDER_DARK","qualname":"::theme::BORDER_DARK","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2575},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":390221,"byte_end":390233,"line_start":43,"line_end":43,"column_start":11,"column_end":23},"name":"BORDER_LIGHT","qualname":"::theme::BORDER_LIGHT","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2576},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":390311,"byte_end":390326,"line_start":44,"line_end":44,"column_start":11,"column_end":26},"name":"SELECTION_COLOR","qualname":"::theme::SELECTION_COLOR","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2577},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":390407,"byte_end":390427,"line_start":45,"line_end":45,"column_start":11,"column_end":31},"name":"SELECTION_TEXT_COLOR","qualname":"::theme::SELECTION_TEXT_COLOR","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2578},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":390517,"byte_end":390529,"line_start":47,"line_end":47,"column_start":11,"column_end":23},"name":"CURSOR_COLOR","qualname":"::theme::CURSOR_COLOR","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2579},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":390608,"byte_end":390624,"line_start":49,"line_end":49,"column_start":11,"column_end":27},"name":"TEXT_SIZE_NORMAL","qualname":"::theme::TEXT_SIZE_NORMAL","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2580},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":390704,"byte_end":390719,"line_start":50,"line_end":50,"column_start":11,"column_end":26},"name":"TEXT_SIZE_LARGE","qualname":"::theme::TEXT_SIZE_LARGE","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2581},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":390798,"byte_end":390817,"line_start":51,"line_end":51,"column_start":11,"column_end":30},"name":"BASIC_WIDGET_HEIGHT","qualname":"::theme::BASIC_WIDGET_HEIGHT","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2582},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":390982,"byte_end":390989,"line_start":55,"line_end":55,"column_start":11,"column_end":18},"name":"UI_FONT","qualname":"::theme::UI_FONT","value":"Key<FontDescriptor>","parent":null,"children":[],"decl_id":null,"docs":" The default font for labels, buttons, text boxes, and other UI elements.\n","sig":null,"attributes":[{"value":"/ The default font for labels, buttons, text boxes, and other UI elements.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":390895,"byte_end":390971,"line_start":54,"line_end":54,"column_start":1,"column_end":77}}]},{"kind":"Const","id":{"krate":0,"index":2583},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":391115,"byte_end":391127,"line_start":58,"line_end":58,"column_start":11,"column_end":23},"name":"UI_FONT_BOLD","qualname":"::theme::UI_FONT_BOLD","value":"Key<FontDescriptor>","parent":null,"children":[],"decl_id":null,"docs":" A bold version of the default UI font.\n","sig":null,"attributes":[{"value":"/ A bold version of the default UI font.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":391062,"byte_end":391104,"line_start":57,"line_end":57,"column_start":1,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":2584},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":391261,"byte_end":391275,"line_start":61,"line_end":61,"column_start":11,"column_end":25},"name":"UI_FONT_ITALIC","qualname":"::theme::UI_FONT_ITALIC","value":"Key<FontDescriptor>","parent":null,"children":[],"decl_id":null,"docs":" An Italic version of the default UI font.\n","sig":null,"attributes":[{"value":"/ An Italic version of the default UI font.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":391205,"byte_end":391250,"line_start":60,"line_end":60,"column_start":1,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":2585},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":391458,"byte_end":391475,"line_start":65,"line_end":65,"column_start":11,"column_end":28},"name":"WIDE_WIDGET_WIDTH","qualname":"::theme::WIDE_WIDGET_WIDTH","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":" The default minimum width for a 'wide' widget; a textbox, slider, progress bar, etc.\n","sig":null,"attributes":[{"value":"/ The default minimum width for a 'wide' widget; a textbox, slider, progress bar, etc.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":391359,"byte_end":391447,"line_start":64,"line_end":64,"column_start":1,"column_end":89}}]},{"kind":"Const","id":{"krate":0,"index":2586},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":391556,"byte_end":391578,"line_start":66,"line_end":66,"column_start":11,"column_end":33},"name":"BORDERED_WIDGET_HEIGHT","qualname":"::theme::BORDERED_WIDGET_HEIGHT","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2587},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":391669,"byte_end":391690,"line_start":69,"line_end":69,"column_start":11,"column_end":32},"name":"TEXTBOX_BORDER_RADIUS","qualname":"::theme::TEXTBOX_BORDER_RADIUS","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2588},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":391779,"byte_end":391799,"line_start":71,"line_end":71,"column_start":11,"column_end":31},"name":"TEXTBOX_BORDER_WIDTH","qualname":"::theme::TEXTBOX_BORDER_WIDTH","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2589},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":391887,"byte_end":391901,"line_start":73,"line_end":73,"column_start":11,"column_end":25},"name":"TEXTBOX_INSETS","qualname":"::theme::TEXTBOX_INSETS","value":"Key<Insets>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2590},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":392035,"byte_end":392060,"line_start":76,"line_end":76,"column_start":11,"column_end":36},"name":"WIDGET_PADDING_HORIZONTAL","qualname":"::theme::WIDGET_PADDING_HORIZONTAL","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":" The default horizontal spacing between widgets.\n","sig":null,"attributes":[{"value":"/ The default horizontal spacing between widgets.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":391973,"byte_end":392024,"line_start":75,"line_end":75,"column_start":1,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":2591},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":392194,"byte_end":392217,"line_start":79,"line_end":79,"column_start":11,"column_end":34},"name":"WIDGET_PADDING_VERTICAL","qualname":"::theme::WIDGET_PADDING_VERTICAL","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":" The default vertical spacing between widgets.\n","sig":null,"attributes":[{"value":"/ The default vertical spacing between widgets.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":392134,"byte_end":392183,"line_start":78,"line_end":78,"column_start":1,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":2592},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":392444,"byte_end":392476,"line_start":83,"line_end":83,"column_start":11,"column_end":43},"name":"WIDGET_CONTROL_COMPONENT_PADDING","qualname":"::theme::WIDGET_CONTROL_COMPONENT_PADDING","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":" The default internal (horizontal) padding for visually distinct components\n of a widget; for instance between a checkbox and its label.\n","sig":null,"attributes":[{"value":"/ The default internal (horizontal) padding for visually distinct components","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":392291,"byte_end":392369,"line_start":81,"line_end":81,"column_start":1,"column_end":79}},{"value":"/ of a widget; for instance between a checkbox and its label.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":392370,"byte_end":392433,"line_start":82,"line_end":82,"column_start":1,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":2593},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":392573,"byte_end":392588,"line_start":86,"line_end":86,"column_start":11,"column_end":26},"name":"SCROLLBAR_COLOR","qualname":"::theme::SCROLLBAR_COLOR","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2594},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":392669,"byte_end":392691,"line_start":87,"line_end":87,"column_start":11,"column_end":33},"name":"SCROLLBAR_BORDER_COLOR","qualname":"::theme::SCROLLBAR_BORDER_COLOR","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2595},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":392783,"byte_end":392804,"line_start":89,"line_end":89,"column_start":11,"column_end":32},"name":"SCROLLBAR_MAX_OPACITY","qualname":"::theme::SCROLLBAR_MAX_OPACITY","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2596},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":392893,"byte_end":392913,"line_start":91,"line_end":91,"column_start":11,"column_end":31},"name":"SCROLLBAR_FADE_DELAY","qualname":"::theme::SCROLLBAR_FADE_DELAY","value":"Key<u64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2597},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":393000,"byte_end":393015,"line_start":93,"line_end":93,"column_start":11,"column_end":26},"name":"SCROLLBAR_WIDTH","qualname":"::theme::SCROLLBAR_WIDTH","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2598},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":393094,"byte_end":393107,"line_start":94,"line_end":94,"column_start":11,"column_end":24},"name":"SCROLLBAR_PAD","qualname":"::theme::SCROLLBAR_PAD","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2599},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":393184,"byte_end":393200,"line_start":95,"line_end":95,"column_start":11,"column_end":27},"name":"SCROLLBAR_RADIUS","qualname":"::theme::SCROLLBAR_RADIUS","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2600},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":393280,"byte_end":393300,"line_start":96,"line_end":96,"column_start":11,"column_end":31},"name":"SCROLLBAR_EDGE_WIDTH","qualname":"::theme::SCROLLBAR_EDGE_WIDTH","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2602},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":396014,"byte_end":396018,"line_start":158,"line_end":158,"column_start":8,"column_end":12},"name":"init","qualname":"::theme::init","value":"pub fn init() -> Env","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.7.0\", note = \"use Env::default() instead\")","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\theme.rs","byte_start":395939,"byte_end":396006,"line_start":157,"line_end":157,"column_start":1,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":2603},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"widget","qualname":"::widget","value":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","parent":null,"children":[{"krate":0,"index":2604},{"krate":0,"index":2650},{"krate":0,"index":2706},{"krate":0,"index":2757},{"krate":0,"index":2798},{"krate":0,"index":2865},{"krate":0,"index":2877},{"krate":0,"index":2933},{"krate":0,"index":2960},{"krate":0,"index":2994},{"krate":0,"index":3024},{"krate":0,"index":3141},{"krate":0,"index":3162},{"krate":0,"index":3213},{"krate":0,"index":3237},{"krate":0,"index":3403},{"krate":0,"index":3447},{"krate":0,"index":3565},{"krate":0,"index":3599},{"krate":0,"index":3683},{"krate":0,"index":3713},{"krate":0,"index":3739},{"krate":0,"index":3793},{"krate":0,"index":3910},{"krate":0,"index":3955},{"krate":0,"index":3988},{"krate":0,"index":4029},{"krate":0,"index":4074},{"krate":0,"index":4150},{"krate":0,"index":4209},{"krate":0,"index":4259},{"krate":0,"index":4530},{"krate":0,"index":4722},{"krate":0,"index":4761},{"krate":0,"index":4799},{"krate":0,"index":4925},{"krate":0,"index":4928},{"krate":0,"index":4931},{"krate":0,"index":4934},{"krate":0,"index":4937},{"krate":0,"index":4940},{"krate":0,"index":4941},{"krate":0,"index":4944},{"krate":0,"index":4947},{"krate":0,"index":4950},{"krate":0,"index":4953},{"krate":0,"index":4954},{"krate":0,"index":4957},{"krate":0,"index":4960},{"krate":0,"index":4963},{"krate":0,"index":4966},{"krate":0,"index":4967},{"krate":0,"index":4970},{"krate":0,"index":4973},{"krate":0,"index":4976},{"krate":0,"index":4979},{"krate":0,"index":4982},{"krate":0,"index":4985},{"krate":0,"index":4986},{"krate":0,"index":4989},{"krate":0,"index":4992},{"krate":0,"index":4995},{"krate":0,"index":4998},{"krate":0,"index":5001},{"krate":0,"index":5002},{"krate":0,"index":5005},{"krate":0,"index":5008},{"krate":0,"index":5011},{"krate":0,"index":5012},{"krate":0,"index":5015},{"krate":0,"index":5018},{"krate":0,"index":5021},{"krate":0,"index":5022},{"krate":0,"index":5024},{"krate":0,"index":5025},{"krate":0,"index":5028},{"krate":0,"index":5029},{"krate":0,"index":5031},{"krate":0,"index":5032},{"krate":0,"index":5035},{"krate":0,"index":5038},{"krate":0,"index":5041},{"krate":0,"index":5044},{"krate":0,"index":5047},{"krate":0,"index":5050},{"krate":0,"index":5053},{"krate":0,"index":5056},{"krate":0,"index":5059},{"krate":0,"index":5062},{"krate":0,"index":5065},{"krate":0,"index":5068},{"krate":0,"index":5069},{"krate":0,"index":5072},{"krate":0,"index":5075},{"krate":0,"index":5078},{"krate":0,"index":5081},{"krate":0,"index":5084},{"krate":0,"index":5087},{"krate":0,"index":5088},{"krate":0,"index":5091},{"krate":0,"index":5094},{"krate":0,"index":5097},{"krate":0,"index":5100},{"krate":0,"index":5103},{"krate":0,"index":5104},{"krate":0,"index":5107},{"krate":0,"index":5110},{"krate":0,"index":5113}],"decl_id":null,"docs":" Common widgets.\n","sig":null,"attributes":[{"value":"/ Common widgets.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":396648,"byte_end":396667,"line_start":15,"line_end":15,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2622},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\align.rs","byte_start":400371,"byte_end":400376,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"name":"Align","qualname":"::widget::align::Align","value":"Align {  }","parent":null,"children":[{"krate":0,"index":2624},{"krate":0,"index":2625},{"krate":0,"index":2626},{"krate":0,"index":2627}],"decl_id":null,"docs":" A widget that aligns its child.\n","sig":null,"attributes":[{"value":"/ A widget that aligns its child.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\align.rs","byte_start":400324,"byte_end":400359,"line_start":20,"line_end":20,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2630},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\align.rs","byte_start":400809,"byte_end":400812,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<Align<T>>::new","value":"pub fn new<impl Widget<T> + 'static: Widget<T> +\n'static>(UnitPoint, impl Widget<T> + 'static) -> Align<T>","parent":null,"children":[],"decl_id":null,"docs":" Create widget with alignment.","sig":null,"attributes":[{"value":"/ Create widget with alignment.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\align.rs","byte_start":400538,"byte_end":400571,"line_start":29,"line_end":29,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\align.rs","byte_start":400576,"byte_end":400579,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note that the `align` parameter is specified as a `UnitPoint` in","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\align.rs","byte_start":400584,"byte_end":400652,"line_start":31,"line_end":31,"column_start":5,"column_end":73}},{"value":"/ terms of left and right. This is inadequate for bidi-aware layout","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\align.rs","byte_start":400657,"byte_end":400726,"line_start":32,"line_end":32,"column_start":5,"column_end":74}},{"value":"/ and thus the API will change when druid gains bidi capability.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\align.rs","byte_start":400731,"byte_end":400797,"line_start":33,"line_end":33,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2632},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\align.rs","byte_start":401088,"byte_end":401096,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"centered","qualname":"<Align<T>>::centered","value":"pub fn centered<impl Widget<T> + 'static: Widget<T> +\n'static>(impl Widget<T> + 'static) -> Align<T>","parent":null,"children":[],"decl_id":null,"docs":" Create centered widget.\n","sig":null,"attributes":[{"value":"/ Create centered widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\align.rs","byte_start":401049,"byte_end":401076,"line_start":43,"line_end":43,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2634},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\align.rs","byte_start":401244,"byte_end":401249,"line_start":49,"line_end":49,"column_start":12,"column_end":17},"name":"right","qualname":"<Align<T>>::right","value":"pub fn right<impl Widget<T> + 'static: Widget<T> +\n'static>(impl Widget<T> + 'static) -> Align<T>","parent":null,"children":[],"decl_id":null,"docs":" Create right-aligned widget.\n","sig":null,"attributes":[{"value":"/ Create right-aligned widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\align.rs","byte_start":401200,"byte_end":401232,"line_start":48,"line_end":48,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2636},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\align.rs","byte_start":401395,"byte_end":401399,"line_start":54,"line_end":54,"column_start":12,"column_end":16},"name":"left","qualname":"<Align<T>>::left","value":"pub fn left<impl Widget<T> + 'static: Widget<T> +\n'static>(impl Widget<T> + 'static) -> Align<T>","parent":null,"children":[],"decl_id":null,"docs":" Create left-aligned widget.\n","sig":null,"attributes":[{"value":"/ Create left-aligned widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\align.rs","byte_start":401352,"byte_end":401383,"line_start":53,"line_end":53,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2638},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\align.rs","byte_start":401593,"byte_end":401603,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"horizontal","qualname":"<Align<T>>::horizontal","value":"pub fn horizontal<impl Widget<T> + 'static: Widget<T> +\n'static>(UnitPoint, impl Widget<T> + 'static) -> Align<T>","parent":null,"children":[],"decl_id":null,"docs":" Align only in the horizontal axis, keeping the child's size in the vertical.\n","sig":null,"attributes":[{"value":"/ Align only in the horizontal axis, keeping the child's size in the vertical.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\align.rs","byte_start":401501,"byte_end":401581,"line_start":58,"line_end":58,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2640},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\align.rs","byte_start":401937,"byte_end":401945,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"vertical","qualname":"<Align<T>>::vertical","value":"pub fn vertical<impl Widget<T> + 'static: Widget<T> +\n'static>(UnitPoint, impl Widget<T> + 'static) -> Align<T>","parent":null,"children":[],"decl_id":null,"docs":" Align only in the vertical axis, keeping the child's size in the horizontal.\n","sig":null,"attributes":[{"value":"/ Align only in the vertical axis, keeping the child's size in the horizontal.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\align.rs","byte_start":401845,"byte_end":401925,"line_start":68,"line_end":68,"column_start":5,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":2685},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":405236,"byte_end":405242,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"name":"Button","qualname":"::widget::button::Button","value":"Button {  }","parent":null,"children":[{"krate":0,"index":2687},{"krate":0,"index":2688}],"decl_id":null,"docs":" A button with a text label.\n","sig":null,"attributes":[{"value":"/ A button with a text label.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":405193,"byte_end":405224,"line_start":26,"line_end":26,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2691},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":405765,"byte_end":405768,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<Button<T>>::new","value":"pub fn new<impl Into<LabelText<T>>: Into<LabelText<T>>>(impl Into<LabelText<T>>)\n-> Button<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new button with a text label.","sig":null,"attributes":[{"value":"/ Create a new button with a text label.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":405324,"byte_end":405366,"line_start":33,"line_end":33,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":405371,"byte_end":405374,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Use the [`.on_click`] method to provide a closure to be called when the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":405379,"byte_end":405454,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/ button is clicked.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":405459,"byte_end":405481,"line_start":36,"line_end":36,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":405486,"byte_end":405489,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":405494,"byte_end":405508,"line_start":38,"line_end":38,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":405513,"byte_end":405516,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":405521,"byte_end":405528,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"/ use druid::widget::Button;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":405533,"byte_end":405563,"line_start":41,"line_end":41,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":405568,"byte_end":405571,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let button = Button::new(\"Increment\").on_click(|_ctx, data: &mut u32, _env| {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":405576,"byte_end":405657,"line_start":43,"line_end":43,"column_start":5,"column_end":86}},{"value":"/     *data += 1;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":405662,"byte_end":405681,"line_start":44,"line_end":44,"column_start":5,"column_end":24}},{"value":"/ });","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":405686,"byte_end":405693,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":405698,"byte_end":405705,"line_start":46,"line_end":46,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":405710,"byte_end":405713,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ [`.on_click`]: #method.on_click","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":405718,"byte_end":405753,"line_start":48,"line_end":48,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2693},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":406447,"byte_end":406457,"line_start":71,"line_end":71,"column_start":12,"column_end":22},"name":"from_label","qualname":"<Button<T>>::from_label","value":"pub fn from_label(Label<T>) -> Button<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new button with the provided [`Label`].","sig":null,"attributes":[{"value":"/ Create a new button with the provided [`Label`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":405871,"byte_end":405923,"line_start":53,"line_end":53,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":405928,"byte_end":405931,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Use the [`.on_click`] method to provide a closure to be called when the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":405936,"byte_end":406011,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ button is clicked.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":406016,"byte_end":406038,"line_start":56,"line_end":56,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":406043,"byte_end":406046,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":406051,"byte_end":406065,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":406070,"byte_end":406073,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":406078,"byte_end":406085,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ use druid::Color;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":406090,"byte_end":406111,"line_start":61,"line_end":61,"column_start":5,"column_end":26}},{"value":"/ use druid::widget::{Button, Label};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":406116,"byte_end":406155,"line_start":62,"line_end":62,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":406160,"byte_end":406163,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let button = Button::from_label(Label::new(\"Increment\").with_text_color(Color::grey(0.5))).on_click(|_ctx, data: &mut u32, _env| {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":406168,"byte_end":406302,"line_start":64,"line_end":64,"column_start":5,"column_end":139}},{"value":"/     *data += 1;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":406307,"byte_end":406326,"line_start":65,"line_end":65,"column_start":5,"column_end":24}},{"value":"/ });","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":406331,"byte_end":406338,"line_start":66,"line_end":66,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":406343,"byte_end":406350,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":406355,"byte_end":406358,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ [`Label`]: struct.Label.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":406363,"byte_end":406395,"line_start":69,"line_end":69,"column_start":5,"column_end":37}},{"value":"/ [`.on_click`]: #method.on_click","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":406400,"byte_end":406435,"line_start":70,"line_end":70,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2694},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":407363,"byte_end":407370,"line_start":98,"line_end":98,"column_start":12,"column_end":19},"name":"dynamic","qualname":"<Button<T>>::dynamic","value":"pub fn dynamic<impl Fn(&T, &Env) -> String + 'static: Fn(&T, &Env) -> String +\n'static>(impl Fn(&T, &Env) -> String + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new dynamic button.","sig":null,"attributes":[{"value":"/ Construct a new dynamic button.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":406583,"byte_end":406618,"line_start":78,"line_end":78,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":406623,"byte_end":406626,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ The contents of this button are generated from the data using a closure.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":406631,"byte_end":406707,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":406712,"byte_end":406715,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This is provided as a convenience; a closure can also be passed to [`new`],","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":406720,"byte_end":406799,"line_start":82,"line_end":82,"column_start":5,"column_end":84}},{"value":"/ but due to limitations of the implementation of that method, the types in","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":406804,"byte_end":406881,"line_start":83,"line_end":83,"column_start":5,"column_end":82}},{"value":"/ the closure need to be annotated, which is not true for this method.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":406886,"byte_end":406958,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":406963,"byte_end":406966,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":406971,"byte_end":406985,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":406990,"byte_end":406993,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ The following are equivalent.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":406998,"byte_end":407031,"line_start":88,"line_end":88,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":407036,"byte_end":407039,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":407044,"byte_end":407051,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ use druid::Env;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":407056,"byte_end":407075,"line_start":91,"line_end":91,"column_start":5,"column_end":24}},{"value":"/ use druid::widget::Button;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":407080,"byte_end":407110,"line_start":92,"line_end":92,"column_start":5,"column_end":35}},{"value":"/ let button1: Button<u32> = Button::new(|data: &u32, _: &Env| format!(\"total is {}\", data));","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":407115,"byte_end":407210,"line_start":93,"line_end":93,"column_start":5,"column_end":100}},{"value":"/ let button2: Button<u32> = Button::dynamic(|data, _| format!(\"total is {}\", data));","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":407215,"byte_end":407302,"line_start":94,"line_end":94,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":407307,"byte_end":407314,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":407319,"byte_end":407322,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ [`new`]: #method.new","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":407327,"byte_end":407351,"line_start":97,"line_end":97,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2696},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":407584,"byte_end":407592,"line_start":104,"line_end":104,"column_start":12,"column_end":20},"name":"on_click","qualname":"<Button<T>>::on_click","value":"pub fn on_click<impl Fn(&mut EventCtx, &mut T, &Env) + 'static: Fn(&mut EventCtx,\n&mut T, &Env) -> () +\n'static>(Self, impl Fn(&mut EventCtx, &mut T, &Env) + 'static)\n-> ControllerHost<Self, Click<T>>","parent":null,"children":[],"decl_id":null,"docs":" Provide a closure to be called when this button is clicked.\n","sig":null,"attributes":[{"value":"/ Provide a closure to be called when this button is clicked.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":407509,"byte_end":407572,"line_start":103,"line_end":103,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2744},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\checkbox.rs","byte_start":411734,"byte_end":411742,"line_start":23,"line_end":23,"column_start":12,"column_end":20},"name":"Checkbox","qualname":"::widget::checkbox::Checkbox","value":"Checkbox {  }","parent":null,"children":[{"krate":0,"index":2745}],"decl_id":null,"docs":" A checkbox that toggles a `bool`.\n","sig":null,"attributes":[{"value":"/ A checkbox that toggles a `bool`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\checkbox.rs","byte_start":411685,"byte_end":411722,"line_start":22,"line_end":22,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2747},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\checkbox.rs","byte_start":411856,"byte_end":411859,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<Checkbox>::new","value":"pub fn new<impl Into<LabelText<bool>>: Into<LabelText<bool>>>(impl Into<LabelText<bool>>)\n-> Checkbox","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Checkbox` with a text label.\n","sig":null,"attributes":[{"value":"/ Create a new `Checkbox` with a text label.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\checkbox.rs","byte_start":411798,"byte_end":411844,"line_start":28,"line_end":28,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2749},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\checkbox.rs","byte_start":412029,"byte_end":412037,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"set_text","qualname":"<Checkbox>::set_text","value":"pub fn set_text<impl Into<LabelText<bool>>: Into<LabelText<bool>>>(&mut Self,\nimpl Into<LabelText<bool>>)","parent":null,"children":[],"decl_id":null,"docs":" Update the text label.\n","sig":null,"attributes":[{"value":"/ Update the text label.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\checkbox.rs","byte_start":411991,"byte_end":412017,"line_start":35,"line_end":35,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":2786},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\click.rs","byte_start":417059,"byte_end":417064,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"Click","qualname":"::widget::click::Click","value":"Click {  }","parent":null,"children":[{"krate":0,"index":2788}],"decl_id":null,"docs":" A clickable [`Controller`] widget. Pass this and a child widget to a\n [`ControllerHost`] to make the child interactive. More conveniently, this is\n available as an `on_click` method via [`WidgetExt`]'.","sig":null,"attributes":[{"value":"/ A clickable [`Controller`] widget. Pass this and a child widget to a","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\click.rs","byte_start":416281,"byte_end":416353,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ [`ControllerHost`] to make the child interactive. More conveniently, this is","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\click.rs","byte_start":416354,"byte_end":416434,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ available as an `on_click` method via [`WidgetExt`]'.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\click.rs","byte_start":416435,"byte_end":416492,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\click.rs","byte_start":416493,"byte_end":416496,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This is an alternative to the standard [`Button`] widget, for when you want","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\click.rs","byte_start":416497,"byte_end":416576,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ to make an arbitrary widget clickable.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\click.rs","byte_start":416577,"byte_end":416619,"line_start":27,"line_end":27,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\click.rs","byte_start":416620,"byte_end":416623,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The child widget will also be updated on [`LifeCycle::HotChanged`] and","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\click.rs","byte_start":416624,"byte_end":416698,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ mouse down, which can be useful for painting based on `ctx.is_active()`","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\click.rs","byte_start":416699,"byte_end":416774,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ and `ctx.is_hot()`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\click.rs","byte_start":416775,"byte_end":416798,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\click.rs","byte_start":416799,"byte_end":416802,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Controller`]: struct.Controller.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\click.rs","byte_start":416803,"byte_end":416845,"line_start":33,"line_end":33,"column_start":1,"column_end":43}},{"value":"/ [`ControllerHost`]: struct.ControllerHost.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\click.rs","byte_start":416846,"byte_end":416896,"line_start":34,"line_end":34,"column_start":1,"column_end":51}},{"value":"/ [`WidgetExt`]: ../trait.WidgetExt.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\click.rs","byte_start":416897,"byte_end":416939,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/ [`Button`]: struct.Button.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\click.rs","byte_start":416940,"byte_end":416974,"line_start":36,"line_end":36,"column_start":1,"column_end":35}},{"value":"/ [`LifeCycle::HotChanged`]: ../enum.LifeCycle.html#variant.HotChanged","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\click.rs","byte_start":416975,"byte_end":417047,"line_start":37,"line_end":37,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2791},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\click.rs","byte_start":417290,"byte_end":417293,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Click<T>>::new","value":"pub fn new<impl Fn(&mut EventCtx, &mut T, &Env) + 'static: Fn(&mut EventCtx,\n&mut T, &Env) -> () + 'static>(impl Fn(&mut EventCtx, &mut T, &Env) + 'static)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new clickable [`Controller`] widget.\n","sig":null,"attributes":[{"value":"/ Create a new clickable [`Controller`] widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\click.rs","byte_start":417229,"byte_end":417278,"line_start":44,"line_end":44,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":7055},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":419478,"byte_end":419486,"line_start":21,"line_end":21,"column_start":12,"column_end":20},"name":"Viewport","qualname":"::widget::clip_box::Viewport","value":"Viewport { content_size, rect }","parent":null,"children":[{"krate":0,"index":7056},{"krate":0,"index":7057}],"decl_id":null,"docs":" Represents the size and position of a rectangular \"viewport\" into a larger area.\n","sig":null,"attributes":[{"value":"/ Represents the size and position of a rectangular \"viewport\" into a larger area.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":419332,"byte_end":419416,"line_start":19,"line_end":19,"column_start":1,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":7056},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":419556,"byte_end":419568,"line_start":23,"line_end":23,"column_start":9,"column_end":21},"name":"content_size","qualname":"::widget::clip_box::Viewport::content_size","value":"druid_shell::kurbo::Size","parent":{"krate":0,"index":7055},"children":[],"decl_id":null,"docs":" The size of the area that we have a viewport into.\n","sig":null,"attributes":[{"value":"/ The size of the area that we have a viewport into.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":419493,"byte_end":419547,"line_start":22,"line_end":22,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":7057},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":419612,"byte_end":419616,"line_start":25,"line_end":25,"column_start":9,"column_end":13},"name":"rect","qualname":"::widget::clip_box::Viewport::rect","value":"druid_shell::kurbo::Rect","parent":{"krate":0,"index":7055},"children":[],"decl_id":null,"docs":" The view rectangle.\n","sig":null,"attributes":[{"value":"/ The view rectangle.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":419580,"byte_end":419603,"line_start":24,"line_end":24,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2824},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":420084,"byte_end":420101,"line_start":35,"line_end":35,"column_start":12,"column_end":29},"name":"clamp_view_origin","qualname":"<Viewport>::clamp_view_origin","value":"pub fn clamp_view_origin(&Self, Point) -> Point","parent":null,"children":[],"decl_id":null,"docs":" Tries to find a position for the view rectangle that is contained in the content rectangle.","sig":null,"attributes":[{"value":"/ Tries to find a position for the view rectangle that is contained in the content rectangle.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":419647,"byte_end":419742,"line_start":29,"line_end":29,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":419747,"byte_end":419750,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ If the supplied origin is good, returns it; if it isn't, we try to return the nearest","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":419755,"byte_end":419844,"line_start":31,"line_end":31,"column_start":5,"column_end":94}},{"value":"/ origin that would make the view rectangle contained in the content rectangle. (This will","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":419849,"byte_end":419941,"line_start":32,"line_end":32,"column_start":5,"column_end":97}},{"value":"/ fail if the content is smaller than the view, and we return `0.0` in each dimension where","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":419946,"byte_end":420039,"line_start":33,"line_end":33,"column_start":5,"column_end":98}},{"value":"/ the content is smaller.)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":420044,"byte_end":420072,"line_start":34,"line_end":34,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2825},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":420867,"byte_end":420873,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"pan_by","qualname":"<Viewport>::pan_by","value":"pub fn pan_by(&mut Self, Vec2) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Changes the viewport offset by `delta`, while trying to keep the view rectangle inside the\n content rectangle.","sig":null,"attributes":[{"value":"/ Changes the viewport offset by `delta`, while trying to keep the view rectangle inside the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":420419,"byte_end":420513,"line_start":47,"line_end":47,"column_start":5,"column_end":99}},{"value":"/ content rectangle.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":420518,"byte_end":420540,"line_start":48,"line_end":48,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":420545,"byte_end":420548,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Returns true if the offset actually changed. Even if `delta` is non-zero, the offset might","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":420553,"byte_end":420647,"line_start":50,"line_end":50,"column_start":5,"column_end":99}},{"value":"/ not change. For example, if you try to move the viewport down but it is already at the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":420652,"byte_end":420742,"line_start":51,"line_end":51,"column_start":5,"column_end":95}},{"value":"/ bottom of the child widget, then the offset will not change and this function will return","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":420747,"byte_end":420840,"line_start":52,"line_end":52,"column_start":5,"column_end":98}},{"value":"/ false.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":420845,"byte_end":420855,"line_start":53,"line_end":53,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2826},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":421312,"byte_end":421318,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"pan_to","qualname":"<Viewport>::pan_to","value":"pub fn pan_to(&mut Self, Point) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Sets the viewport origin to `pos`, while trying to keep the view rectangle inside the\n content rectangle.","sig":null,"attributes":[{"value":"/ Sets the viewport origin to `pos`, while trying to keep the view rectangle inside the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":420967,"byte_end":421056,"line_start":58,"line_end":58,"column_start":5,"column_end":94}},{"value":"/ content rectangle.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":421061,"byte_end":421083,"line_start":59,"line_end":59,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":421088,"byte_end":421091,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Returns true if the position changed. Note that the valid values for the viewport origin","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":421096,"byte_end":421188,"line_start":61,"line_end":61,"column_start":5,"column_end":97}},{"value":"/ are constrained by the size of the child, and so the origin might not get set to exactly","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":421193,"byte_end":421285,"line_start":62,"line_end":62,"column_start":5,"column_end":97}},{"value":"/ `pos`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":421290,"byte_end":421300,"line_start":63,"line_end":63,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2827},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":421829,"byte_end":421843,"line_start":78,"line_end":78,"column_start":12,"column_end":26},"name":"pan_to_visible","qualname":"<Viewport>::pan_to_visible","value":"pub fn pan_to_visible(&mut Self, Rect) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Pan the smallest distance that makes the target [`Rect`] visible.","sig":null,"attributes":[{"value":"/ Pan the smallest distance that makes the target [`Rect`] visible.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":421608,"byte_end":421677,"line_start":74,"line_end":74,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":421682,"byte_end":421685,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ If the target rect is larger than viewport size, we will prioritize","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":421690,"byte_end":421761,"line_start":76,"line_end":76,"column_start":5,"column_end":76}},{"value":"/ the region of the target closest to its origin.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":421766,"byte_end":421817,"line_start":77,"line_end":77,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2829},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":423532,"byte_end":423539,"line_start":118,"line_end":118,"column_start":12,"column_end":19},"name":"ClipBox","qualname":"::widget::clip_box::ClipBox","value":"ClipBox {  }","parent":null,"children":[{"krate":0,"index":2832},{"krate":0,"index":2833},{"krate":0,"index":2834},{"krate":0,"index":2835}],"decl_id":null,"docs":" A widget exposing a rectangular view into its child, which can be used as a building block for\n widgets that scroll their child.\n","sig":null,"attributes":[{"value":"/ A widget exposing a rectangular view into its child, which can be used as a building block for","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":423385,"byte_end":423483,"line_start":116,"line_end":116,"column_start":1,"column_end":99}},{"value":"/ widgets that scroll their child.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":423484,"byte_end":423520,"line_start":117,"line_end":117,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2839},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":423760,"byte_end":423763,"line_start":127,"line_end":127,"column_start":12,"column_end":15},"name":"new","qualname":"<ClipBox<T, W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ClipBox` wrapping `child`.\n","sig":null,"attributes":[{"value":"/ Creates a new `ClipBox` wrapping `child`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":423703,"byte_end":423748,"line_start":126,"line_end":126,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2840},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":424039,"byte_end":424044,"line_start":137,"line_end":137,"column_start":12,"column_end":17},"name":"child","qualname":"<ClipBox<T, W>>::child","value":"pub fn child(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the child widget.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the child widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":423983,"byte_end":424027,"line_start":136,"line_end":136,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2841},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":424163,"byte_end":424172,"line_start":142,"line_end":142,"column_start":12,"column_end":21},"name":"child_mut","qualname":"<ClipBox<T, W>>::child_mut","value":"pub fn child_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the child widget.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the child widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":424099,"byte_end":424151,"line_start":141,"line_end":141,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2842},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":424315,"byte_end":424323,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"name":"viewport","qualname":"<ClipBox<T, W>>::viewport","value":"pub fn viewport(&Self) -> Viewport","parent":null,"children":[],"decl_id":null,"docs":" Returns a the viewport describing this `ClipBox`'s position.\n","sig":null,"attributes":[{"value":"/ Returns a the viewport describing this `ClipBox`'s position.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":424239,"byte_end":424303,"line_start":146,"line_end":146,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2843},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":424607,"byte_end":424620,"line_start":155,"line_end":155,"column_start":12,"column_end":25},"name":"viewport_size","qualname":"<ClipBox<T, W>>::viewport_size","value":"pub fn viewport_size(&Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the rectangular viewport into the child widget.\n To get the position of the viewport, see [`viewport_origin`].","sig":null,"attributes":[{"value":"/ Returns the size of the rectangular viewport into the child widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":424374,"byte_end":424445,"line_start":151,"line_end":151,"column_start":5,"column_end":76}},{"value":"/ To get the position of the viewport, see [`viewport_origin`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":424450,"byte_end":424515,"line_start":152,"line_end":152,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":424520,"byte_end":424523,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ [`viewport_origin`]: struct.ClipBox.html#method.viewport_origin","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":424528,"byte_end":424595,"line_start":154,"line_end":154,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2844},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":424732,"byte_end":424744,"line_start":160,"line_end":160,"column_start":12,"column_end":24},"name":"content_size","qualname":"<ClipBox<T, W>>::content_size","value":"pub fn content_size(&Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the child widget.\n","sig":null,"attributes":[{"value":"/ Returns the size of the child widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":424679,"byte_end":424720,"line_start":159,"line_end":159,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2845},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":425054,"byte_end":425074,"line_start":168,"line_end":168,"column_start":12,"column_end":32},"name":"constrain_horizontal","qualname":"<ClipBox<T, W>>::constrain_horizontal","value":"pub fn constrain_horizontal(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for deciding whether to constrain the child horizontally. The default\n is `false`. See [`constrain_vertical`] for more details.","sig":null,"attributes":[{"value":"/ Builder-style method for deciding whether to constrain the child horizontally. The default","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":424804,"byte_end":424898,"line_start":164,"line_end":164,"column_start":5,"column_end":99}},{"value":"/ is `false`. See [`constrain_vertical`] for more details.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":424903,"byte_end":424963,"line_start":165,"line_end":165,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":424968,"byte_end":424971,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ [`constrain_vertical`]: struct.ClipBox.html#constrain_vertical","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":424976,"byte_end":425042,"line_start":167,"line_end":167,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2846},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":425393,"byte_end":425417,"line_start":178,"line_end":178,"column_start":12,"column_end":36},"name":"set_constrain_horizontal","qualname":"<ClipBox<T, W>>::set_constrain_horizontal","value":"pub fn set_constrain_horizontal(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Determine whether to constrain the child horizontally.","sig":null,"attributes":[{"value":"/ Determine whether to constrain the child horizontally.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":425183,"byte_end":425241,"line_start":173,"line_end":173,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":425246,"byte_end":425249,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ See [`constrain_vertical`] for more details.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":425254,"byte_end":425302,"line_start":175,"line_end":175,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":425307,"byte_end":425310,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ [`constrain_vertical`]: struct.ClipBox.html#constrain_vertical","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":425315,"byte_end":425381,"line_start":177,"line_end":177,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2847},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":426173,"byte_end":426191,"line_start":193,"line_end":193,"column_start":12,"column_end":30},"name":"constrain_vertical","qualname":"<ClipBox<T, W>>::constrain_vertical","value":"pub fn constrain_vertical(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for deciding whether to constrain the child vertically. The default\n is `false`.","sig":null,"attributes":[{"value":"/ Builder-style method for deciding whether to constrain the child vertically. The default","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":425506,"byte_end":425598,"line_start":182,"line_end":182,"column_start":5,"column_end":97}},{"value":"/ is `false`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":425603,"byte_end":425618,"line_start":183,"line_end":183,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":425623,"byte_end":425626,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ This setting affects how a `ClipBox` lays out its child.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":425631,"byte_end":425691,"line_start":185,"line_end":185,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":425696,"byte_end":425699,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ - When it is `false` (the default), the child does receive any upper bound on its height:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":425704,"byte_end":425797,"line_start":187,"line_end":187,"column_start":5,"column_end":98}},{"value":"/   the idea is that the child can be as tall as it wants, and the viewport will somehow get","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":425802,"byte_end":425896,"line_start":188,"line_end":188,"column_start":5,"column_end":99}},{"value":"/   moved around to see all of it.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":425901,"byte_end":425937,"line_start":189,"line_end":189,"column_start":5,"column_end":41}},{"value":"/ - When it is `true`, the viewport's maximum height will be passed down as an upper bound on","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":425942,"byte_end":426037,"line_start":190,"line_end":190,"column_start":5,"column_end":100}},{"value":"/   the height of the child, and the viewport will set its own height to be the same as its","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":426042,"byte_end":426135,"line_start":191,"line_end":191,"column_start":5,"column_end":98}},{"value":"/   child's height.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":426140,"byte_end":426161,"line_start":192,"line_end":192,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2848},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":426506,"byte_end":426528,"line_start":203,"line_end":203,"column_start":12,"column_end":34},"name":"set_constrain_vertical","qualname":"<ClipBox<T, W>>::set_constrain_vertical","value":"pub fn set_constrain_vertical(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Determine whether to constrain the child vertically.","sig":null,"attributes":[{"value":"/ Determine whether to constrain the child vertically.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":426298,"byte_end":426354,"line_start":198,"line_end":198,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":426359,"byte_end":426362,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ See [`constrain_vertical`] for more details.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":426367,"byte_end":426415,"line_start":200,"line_end":200,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":426420,"byte_end":426423,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ [`constrain_vertical`]: struct.ClipBox.html#constrain_vertical","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":426428,"byte_end":426494,"line_start":202,"line_end":202,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2849},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":426985,"byte_end":426991,"line_start":213,"line_end":213,"column_start":12,"column_end":18},"name":"pan_by","qualname":"<ClipBox<T, W>>::pan_by","value":"pub fn pan_by(&mut Self, Vec2) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Changes the viewport offset by `delta`.","sig":null,"attributes":[{"value":"/ Changes the viewport offset by `delta`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":426615,"byte_end":426658,"line_start":207,"line_end":207,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":426663,"byte_end":426666,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Returns true if the offset actually changed. Even if `delta` is non-zero, the offset might","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":426671,"byte_end":426765,"line_start":209,"line_end":209,"column_start":5,"column_end":99}},{"value":"/ not change. For example, if you try to move the viewport down but it is already at the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":426770,"byte_end":426860,"line_start":210,"line_end":210,"column_start":5,"column_end":95}},{"value":"/ bottom of the child widget, then the offset will not change and this function will return","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":426865,"byte_end":426958,"line_start":211,"line_end":211,"column_start":5,"column_end":98}},{"value":"/ false.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":426963,"byte_end":426973,"line_start":212,"line_end":212,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2850},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":427356,"byte_end":427362,"line_start":222,"line_end":222,"column_start":12,"column_end":18},"name":"pan_to","qualname":"<ClipBox<T, W>>::pan_to","value":"pub fn pan_to(&mut Self, Point) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Sets the viewport origin to `pos`.","sig":null,"attributes":[{"value":"/ Sets the viewport origin to `pos`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":427089,"byte_end":427127,"line_start":217,"line_end":217,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":427132,"byte_end":427135,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ Returns true if the position changed. Note that the valid values for the viewport origin","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":427140,"byte_end":427232,"line_start":219,"line_end":219,"column_start":5,"column_end":97}},{"value":"/ are constrained by the size of the child, and so the origin might not get set to exactly","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":427237,"byte_end":427329,"line_start":220,"line_end":220,"column_start":5,"column_end":97}},{"value":"/ `pos`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":427334,"byte_end":427344,"line_start":221,"line_end":221,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2851},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":428015,"byte_end":428029,"line_start":240,"line_end":240,"column_start":12,"column_end":26},"name":"pan_to_visible","qualname":"<ClipBox<T, W>>::pan_to_visible","value":"pub fn pan_to_visible(&mut Self, Rect) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Adjust the viewport to display as much of the target region as is possible.","sig":null,"attributes":[{"value":"/ Adjust the viewport to display as much of the target region as is possible.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":427605,"byte_end":427684,"line_start":232,"line_end":232,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":427689,"byte_end":427692,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if the viewport changes.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":427697,"byte_end":427740,"line_start":234,"line_end":234,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":427745,"byte_end":427748,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This will move the viewport the smallest distance that fully shows","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":427753,"byte_end":427823,"line_start":236,"line_end":236,"column_start":5,"column_end":75}},{"value":"/ the target region. If the target region is larger than the viewport,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":427828,"byte_end":427900,"line_start":237,"line_end":237,"column_start":5,"column_end":77}},{"value":"/ we will display the portion that fits, prioritizing the portion closest","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":427905,"byte_end":427980,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ to the origin.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":427985,"byte_end":428003,"line_start":239,"line_end":239,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2852},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":428340,"byte_end":428355,"line_start":251,"line_end":251,"column_start":12,"column_end":27},"name":"viewport_origin","qualname":"<ClipBox<T, W>>::viewport_origin","value":"pub fn viewport_origin(&Self) -> Point","parent":null,"children":[],"decl_id":null,"docs":" Returns the origin of the viewport rectangle.\n","sig":null,"attributes":[{"value":"/ Returns the origin of the viewport rectangle.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":428279,"byte_end":428328,"line_start":250,"line_end":250,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2853},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":428656,"byte_end":428665,"line_start":258,"line_end":258,"column_start":12,"column_end":21},"name":"with_port","qualname":"<ClipBox<T, W>>::with_port","value":"pub fn with_port<F: FnOnce(&mut Viewport) -> ()>(&mut Self, F)","parent":null,"children":[],"decl_id":null,"docs":" Allows this `ClipBox`'s viewport rectangle to be modified. The provided callback function\n can modify its argument, and when it is done then this `ClipBox` will be modified to have\n the new viewport rectangle.\n","sig":null,"attributes":[{"value":"/ Allows this `ClipBox`'s viewport rectangle to be modified. The provided callback function","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":428417,"byte_end":428510,"line_start":255,"line_end":255,"column_start":5,"column_end":98}},{"value":"/ can modify its argument, and when it is done then this `ClipBox` will be modified to have","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":428515,"byte_end":428608,"line_start":256,"line_end":256,"column_start":5,"column_end":98}},{"value":"/ the new viewport rectangle.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":428613,"byte_end":428644,"line_start":257,"line_end":257,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7070},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\common.rs","byte_start":432953,"byte_end":432960,"line_start":22,"line_end":22,"column_start":5,"column_end":12},"name":"Contain","qualname":"::widget::common::FillStrat::Contain","value":"FillStrat::Contain","parent":{"krate":0,"index":7069},"children":[],"decl_id":null,"docs":" As large as posible without changing aspect ratio of image and all of image shown\n","sig":null,"attributes":[{"value":"/ As large as posible without changing aspect ratio of image and all of image shown","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\common.rs","byte_start":432863,"byte_end":432948,"line_start":21,"line_end":21,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7072},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\common.rs","byte_start":433054,"byte_end":433059,"line_start":24,"line_end":24,"column_start":5,"column_end":10},"name":"Cover","qualname":"::widget::common::FillStrat::Cover","value":"FillStrat::Cover","parent":{"krate":0,"index":7069},"children":[],"decl_id":null,"docs":" As large as posible with no dead space so that some of the image may be clipped\n","sig":null,"attributes":[{"value":"/ As large as posible with no dead space so that some of the image may be clipped","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\common.rs","byte_start":432966,"byte_end":433049,"line_start":23,"line_end":23,"column_start":5,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7074},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\common.rs","byte_start":433140,"byte_end":433144,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Fill","qualname":"::widget::common::FillStrat::Fill","value":"FillStrat::Fill","parent":{"krate":0,"index":7069},"children":[],"decl_id":null,"docs":" Fill the widget with no dead space, aspect ratio of widget is used\n","sig":null,"attributes":[{"value":"/ Fill the widget with no dead space, aspect ratio of widget is used","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\common.rs","byte_start":433065,"byte_end":433135,"line_start":25,"line_end":25,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7076},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\common.rs","byte_start":433236,"byte_end":433245,"line_start":28,"line_end":28,"column_start":5,"column_end":14},"name":"FitHeight","qualname":"::widget::common::FillStrat::FitHeight","value":"FillStrat::FitHeight","parent":{"krate":0,"index":7069},"children":[],"decl_id":null,"docs":" Fill the hight with the images aspect ratio, some of the image may be clipped\n","sig":null,"attributes":[{"value":"/ Fill the hight with the images aspect ratio, some of the image may be clipped","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\common.rs","byte_start":433150,"byte_end":433231,"line_start":27,"line_end":27,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7078},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\common.rs","byte_start":433337,"byte_end":433345,"line_start":30,"line_end":30,"column_start":5,"column_end":13},"name":"FitWidth","qualname":"::widget::common::FillStrat::FitWidth","value":"FillStrat::FitWidth","parent":{"krate":0,"index":7069},"children":[],"decl_id":null,"docs":" Fill the width with the images aspect ratio, some of the image may be clipped\n","sig":null,"attributes":[{"value":"/ Fill the width with the images aspect ratio, some of the image may be clipped","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\common.rs","byte_start":433251,"byte_end":433332,"line_start":29,"line_end":29,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7080},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\common.rs","byte_start":433372,"byte_end":433376,"line_start":32,"line_end":32,"column_start":5,"column_end":9},"name":"None","qualname":"::widget::common::FillStrat::None","value":"FillStrat::None","parent":{"krate":0,"index":7069},"children":[],"decl_id":null,"docs":" Do not scale\n","sig":null,"attributes":[{"value":"/ Do not scale","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\common.rs","byte_start":433351,"byte_end":433367,"line_start":31,"line_end":31,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7082},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\common.rs","byte_start":433428,"byte_end":433437,"line_start":34,"line_end":34,"column_start":5,"column_end":14},"name":"ScaleDown","qualname":"::widget::common::FillStrat::ScaleDown","value":"FillStrat::ScaleDown","parent":{"krate":0,"index":7069},"children":[],"decl_id":null,"docs":" Scale down to fit but do not scale up\n","sig":null,"attributes":[{"value":"/ Scale down to fit but do not scale up","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\common.rs","byte_start":433382,"byte_end":433423,"line_start":33,"line_end":33,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":7069},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\common.rs","byte_start":432847,"byte_end":432856,"line_start":20,"line_end":20,"column_start":10,"column_end":19},"name":"FillStrat","qualname":"::widget::common::FillStrat","value":"pub enum FillStrat {\n    Contain,\n    Cover,\n    Fill,\n    FitHeight,\n    FitWidth,\n    None,\n    ScaleDown,\n}","parent":null,"children":[{"krate":0,"index":7070},{"krate":0,"index":7072},{"krate":0,"index":7074},{"krate":0,"index":7076},{"krate":0,"index":7078},{"krate":0,"index":7080},{"krate":0,"index":7082}],"decl_id":null,"docs":" Strategies for inscribing a rectangle inside another rectangle.\n","sig":null,"attributes":[{"value":"/ Strategies for inscribing a rectangle inside another rectangle.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\common.rs","byte_start":432736,"byte_end":432803,"line_start":18,"line_end":18,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2876},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\common.rs","byte_start":433803,"byte_end":433817,"line_start":48,"line_end":48,"column_start":12,"column_end":26},"name":"affine_to_fill","qualname":"<FillStrat>::affine_to_fill","value":"pub fn affine_to_fill(Self, Size, Size) -> Affine","parent":null,"children":[],"decl_id":null,"docs":" Calculate an origin and scale for an image with a given `FillStrat`.","sig":null,"attributes":[{"value":"/ Calculate an origin and scale for an image with a given `FillStrat`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\common.rs","byte_start":433555,"byte_end":433627,"line_start":44,"line_end":44,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\common.rs","byte_start":433632,"byte_end":433635,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This takes some properties of a widget and a fill strategy and returns an affine matrix","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\common.rs","byte_start":433640,"byte_end":433731,"line_start":46,"line_end":46,"column_start":5,"column_end":96}},{"value":"/ used to position and scale the image in the widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\common.rs","byte_start":433736,"byte_end":433791,"line_start":47,"line_end":47,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2901},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":435843,"byte_end":435852,"line_start":27,"line_end":27,"column_start":12,"column_end":21},"name":"Container","qualname":"::widget::container::Container","value":"Container {  }","parent":null,"children":[{"krate":0,"index":2903},{"krate":0,"index":2904},{"krate":0,"index":2905},{"krate":0,"index":2906}],"decl_id":null,"docs":" A widget that provides simple visual styling options to a child.\n","sig":null,"attributes":[{"value":"/ A widget that provides simple visual styling options to a child.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":435763,"byte_end":435831,"line_start":26,"line_end":26,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2909},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":436098,"byte_end":436101,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<Container<T>>::new","value":"pub fn new<impl Widget<T> + 'static: Widget<T> +\n'static>(impl Widget<T> + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create Container with a child\n","sig":null,"attributes":[{"value":"/ Create Container with a child","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":436053,"byte_end":436086,"line_start":36,"line_end":36,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2911},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":436872,"byte_end":436882,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"background","qualname":"<Container<T>>::background","value":"pub fn background<impl Into<BackgroundBrush<T>>: Into<BackgroundBrush<T>>>(Self,\nimpl Into<BackgroundBrush<T>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for setting the background for this widget.","sig":null,"attributes":[{"value":"/ Builder-style method for setting the background for this widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":436326,"byte_end":436394,"line_start":46,"line_end":46,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":436399,"byte_end":436402,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This can be passed anything which can be represented by a [`BackgroundBrush`];","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":436407,"byte_end":436489,"line_start":48,"line_end":48,"column_start":5,"column_end":87}},{"value":"/ noteably, it can be any [`Color`], a [`Key<Color>`] resolvable in the [`Env`],","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":436494,"byte_end":436576,"line_start":49,"line_end":49,"column_start":5,"column_end":87}},{"value":"/ any gradient, or a fully custom [`Painter`] widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":436581,"byte_end":436636,"line_start":50,"line_end":50,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":436641,"byte_end":436644,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ [`BackgroundBrush`]: ../enum.BackgroundBrush.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":436649,"byte_end":436702,"line_start":52,"line_end":52,"column_start":5,"column_end":58}},{"value":"/ [`Color`]: ../enum.Color.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":436707,"byte_end":436740,"line_start":53,"line_end":53,"column_start":5,"column_end":38}},{"value":"/ [`Key<Color>`]: ../struct.Key.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":436745,"byte_end":436783,"line_start":54,"line_end":54,"column_start":5,"column_end":43}},{"value":"/ [`Env`]: ../struct.Env.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":436788,"byte_end":436819,"line_start":55,"line_end":55,"column_start":5,"column_end":36}},{"value":"/ [`Painter`]: struct.Painter.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":436824,"byte_end":436860,"line_start":56,"line_end":56,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2913},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":437518,"byte_end":437532,"line_start":73,"line_end":73,"column_start":12,"column_end":26},"name":"set_background","qualname":"<Container<T>>::set_background","value":"pub fn set_background<impl Into<BackgroundBrush<T>>: Into<BackgroundBrush<T>>>(&mut Self,\nimpl Into<BackgroundBrush<T>>)","parent":null,"children":[],"decl_id":null,"docs":" Set the background for this widget.","sig":null,"attributes":[{"value":"/ Set the background for this widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":437001,"byte_end":437040,"line_start":62,"line_end":62,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":437045,"byte_end":437048,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This can be passed anything which can be represented by a [`BackgroundBrush`];","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":437053,"byte_end":437135,"line_start":64,"line_end":64,"column_start":5,"column_end":87}},{"value":"/ noteably, it can be any [`Color`], a [`Key<Color>`] resolvable in the [`Env`],","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":437140,"byte_end":437222,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ any gradient, or a fully custom [`Painter`] widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":437227,"byte_end":437282,"line_start":66,"line_end":66,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":437287,"byte_end":437290,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ [`BackgroundBrush`]: ../enum.BackgroundBrush.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":437295,"byte_end":437348,"line_start":68,"line_end":68,"column_start":5,"column_end":58}},{"value":"/ [`Color`]: ../enum.Color.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":437353,"byte_end":437386,"line_start":69,"line_end":69,"column_start":5,"column_end":38}},{"value":"/ [`Key<Color>`]: ../struct.Key.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":437391,"byte_end":437429,"line_start":70,"line_end":70,"column_start":5,"column_end":43}},{"value":"/ [`Env`]: ../struct.Env.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":437434,"byte_end":437465,"line_start":71,"line_end":71,"column_start":5,"column_end":36}},{"value":"/ [`Painter`]: struct.Painter.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":437470,"byte_end":437506,"line_start":72,"line_end":72,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2915},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":437884,"byte_end":437890,"line_start":83,"line_end":83,"column_start":12,"column_end":18},"name":"border","qualname":"<Container<T>>::border","value":"pub fn border<impl Into<KeyOrValue<Color>>: Into<KeyOrValue<Color>>,\nimpl Into<KeyOrValue<f64>>: Into<KeyOrValue<f64>>>(Self,\nimpl Into<KeyOrValue<Color>>, impl Into<KeyOrValue<f64>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for painting a border around the widget with a color and width.","sig":null,"attributes":[{"value":"/ Builder-style method for painting a border around the widget with a color and width.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":437641,"byte_end":437729,"line_start":77,"line_end":77,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":437734,"byte_end":437737,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Arguments can be either concrete values, or a [`Key`] of the respective","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":437742,"byte_end":437817,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ type.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":437822,"byte_end":437831,"line_start":80,"line_end":80,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":437836,"byte_end":437839,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Key`]: struct.Key.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":437844,"byte_end":437872,"line_start":82,"line_end":82,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2918},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":438292,"byte_end":438302,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"set_border","qualname":"<Container<T>>::set_border","value":"pub fn set_border<impl Into<KeyOrValue<Color>>: Into<KeyOrValue<Color>>,\nimpl Into<KeyOrValue<f64>>: Into<KeyOrValue<f64>>>(&mut Self,\nimpl Into<KeyOrValue<Color>>, impl Into<KeyOrValue<f64>>)","parent":null,"children":[],"decl_id":null,"docs":" Paint a border around the widget with a color and width.","sig":null,"attributes":[{"value":"/ Paint a border around the widget with a color and width.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":438077,"byte_end":438137,"line_start":92,"line_end":92,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":438142,"byte_end":438145,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Arguments can be either concrete values, or a [`Key`] of the respective","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":438150,"byte_end":438225,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ type.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":438230,"byte_end":438239,"line_start":95,"line_end":95,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":438244,"byte_end":438247,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ [`Key`]: struct.Key.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":438252,"byte_end":438280,"line_start":97,"line_end":97,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2921},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":438655,"byte_end":438662,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"rounded","qualname":"<Container<T>>::rounded","value":"pub fn rounded<impl Into<KeyOrValue<f64>>: Into<KeyOrValue<f64>>>(Self,\nimpl Into<KeyOrValue<f64>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder style method for rounding off corners of this container by setting a corner radius\n","sig":null,"attributes":[{"value":"/ Builder style method for rounding off corners of this container by setting a corner radius","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":438549,"byte_end":438643,"line_start":109,"line_end":109,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":2923},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":438855,"byte_end":438866,"line_start":116,"line_end":116,"column_start":12,"column_end":23},"name":"set_rounded","qualname":"<Container<T>>::set_rounded","value":"pub fn set_rounded<impl Into<KeyOrValue<f64>>: Into<KeyOrValue<f64>>>(&mut Self,\nimpl Into<KeyOrValue<f64>>)","parent":null,"children":[],"decl_id":null,"docs":" Round off corners of this container by setting a corner radius\n","sig":null,"attributes":[{"value":"/ Round off corners of this container by setting a corner radius","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":438777,"byte_end":438843,"line_start":115,"line_end":115,"column_start":5,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":2935},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443901,"byte_end":443911,"line_start":62,"line_end":62,"column_start":11,"column_end":21},"name":"Controller","qualname":"::widget::controller::Controller","value":"Controller<T, W: Widget<T>>","parent":null,"children":[{"krate":0,"index":2938},{"krate":0,"index":2939},{"krate":0,"index":2940}],"decl_id":null,"docs":" A trait for types that modify behaviour of a child widget.","sig":null,"attributes":[{"value":"/ A trait for types that modify behaviour of a child widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":442132,"byte_end":442194,"line_start":19,"line_end":19,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":442195,"byte_end":442198,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ A `Controller` is a type that manages a child widget, overriding or","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":442199,"byte_end":442270,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ customizing its event handling or update behaviour.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":442271,"byte_end":442326,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":442327,"byte_end":442330,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ A controller can only handle events and update; it cannot effect layout","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":442331,"byte_end":442406,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ or paint.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":442407,"byte_end":442420,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":442421,"byte_end":442424,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ `Controller` is a convenience; anything it can do could also be done","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":442425,"byte_end":442497,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ by creating a custom [`Widget`] that owned a child. This is somewhat cumbersome,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":442498,"byte_end":442582,"line_start":28,"line_end":28,"column_start":1,"column_end":85}},{"value":"/ however, especially when you only want to intercept or modify one or two events.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":442583,"byte_end":442667,"line_start":29,"line_end":29,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":442668,"byte_end":442671,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The methods on `Controller` are identical to the methods on [`Widget`],","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":442672,"byte_end":442747,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ except that they are also passed the controller's child. The controller","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":442748,"byte_end":442823,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ is responsible for **explicitly** forwarding calls on to the child as needed.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":442824,"byte_end":442905,"line_start":33,"line_end":33,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":442906,"byte_end":442909,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ A `Controller` is used with a [`ControllerHost`], which manages the relationship","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":442910,"byte_end":442994,"line_start":35,"line_end":35,"column_start":1,"column_end":85}},{"value":"/ between it and its child; although in general you would use the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":442995,"byte_end":443062,"line_start":36,"line_end":36,"column_start":1,"column_end":68}},{"value":"/ [`WidgetExt::controller`] method instead of instantiating a host directly.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443063,"byte_end":443141,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443142,"byte_end":443145,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443146,"byte_end":443160,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443161,"byte_end":443164,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ## A [`TextBox`] that takes focus on launch:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443165,"byte_end":443213,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443214,"byte_end":443217,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443218,"byte_end":443225,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ # use druid::widget::{Controller, TextBox};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443226,"byte_end":443273,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/ # use druid::{Env, Event, EventCtx, Widget};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443274,"byte_end":443322,"line_start":45,"line_end":45,"column_start":1,"column_end":49}},{"value":"/ struct TakeFocus;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443323,"byte_end":443344,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443345,"byte_end":443348,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ impl<T, W: Widget<T>> Controller<T, W> for TakeFocus {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443349,"byte_end":443407,"line_start":48,"line_end":48,"column_start":1,"column_end":59}},{"value":"/     fn event(&mut self, child: &mut W, ctx: &mut EventCtx, event: &Event, data: &mut T, env: &Env) {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443408,"byte_end":443512,"line_start":49,"line_end":49,"column_start":1,"column_end":105}},{"value":"/         if let Event::WindowConnected = event {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443513,"byte_end":443564,"line_start":50,"line_end":50,"column_start":1,"column_end":52}},{"value":"/             ctx.request_focus();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443565,"byte_end":443601,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/         }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443602,"byte_end":443615,"line_start":52,"line_end":52,"column_start":1,"column_end":14}},{"value":"/         child.event(ctx, event, data, env)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443616,"byte_end":443662,"line_start":53,"line_end":53,"column_start":1,"column_end":47}},{"value":"/     }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443663,"byte_end":443672,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443673,"byte_end":443678,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443679,"byte_end":443686,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443687,"byte_end":443690,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [`Widget`]: ../trait.Widget.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443691,"byte_end":443727,"line_start":58,"line_end":58,"column_start":1,"column_end":37}},{"value":"/ [`TextBox`]: struct.TextBox.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443728,"byte_end":443764,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ [`ControllerHost`]: struct.ControllerHost.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443765,"byte_end":443815,"line_start":60,"line_end":60,"column_start":1,"column_end":51}},{"value":"/ [`WidgetExt::controller`]: ../trait.WidgetExt.html#tymethod.controller","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443816,"byte_end":443890,"line_start":61,"line_end":61,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2938},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":444049,"byte_end":444054,"line_start":66,"line_end":66,"column_start":8,"column_end":13},"name":"event","qualname":"::widget::controller::Controller::event","value":"pub fn event(&mut Self, &mut W, &mut EventCtx, &Event, &mut T, &Env)","parent":{"krate":0,"index":2935},"children":[],"decl_id":null,"docs":" Analogous to [`Widget::event`].","sig":null,"attributes":[{"value":"/ Analogous to [`Widget::event`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443935,"byte_end":443970,"line_start":63,"line_end":63,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443975,"byte_end":443978,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`Widget::event`]: ../trait.Widget.html#tymethod.event","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":443983,"byte_end":444041,"line_start":65,"line_end":65,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2939},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":444323,"byte_end":444332,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"lifecycle","qualname":"::widget::controller::Controller::lifecycle","value":"pub fn lifecycle(&mut Self, &mut W, &mut LifeCycleCtx, &LifeCycle, &T, &Env)","parent":{"krate":0,"index":2935},"children":[],"decl_id":null,"docs":" Analogous to [`Widget::lifecycle`].","sig":null,"attributes":[{"value":"/ Analogous to [`Widget::lifecycle`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":444197,"byte_end":444236,"line_start":70,"line_end":70,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":444241,"byte_end":444244,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [`Widget::lifecycle`]: ../trait.Widget.html#tymethod.lifecycle","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":444249,"byte_end":444315,"line_start":72,"line_end":72,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2940},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":444655,"byte_end":444661,"line_start":87,"line_end":87,"column_start":8,"column_end":14},"name":"update","qualname":"::widget::controller::Controller::update","value":"pub fn update(&mut Self, &mut W, &mut UpdateCtx, &T, &T, &Env)","parent":{"krate":0,"index":2935},"children":[],"decl_id":null,"docs":" Analogous to [`Widget::update`].","sig":null,"attributes":[{"value":"/ Analogous to [`Widget::update`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":444538,"byte_end":444574,"line_start":84,"line_end":84,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":444579,"byte_end":444582,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ [`Widget::update`]: ../trait.Widget.html#tymethod.update","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":444587,"byte_end":444647,"line_start":86,"line_end":86,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":2941},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":444956,"byte_end":444970,"line_start":96,"line_end":96,"column_start":12,"column_end":26},"name":"ControllerHost","qualname":"::widget::controller::ControllerHost","value":"ControllerHost {  }","parent":null,"children":[{"krate":0,"index":2944},{"krate":0,"index":2945}],"decl_id":null,"docs":" A [`Widget`] that manages a child and a [`Controller`].","sig":null,"attributes":[{"value":"/ A [`Widget`] that manages a child and a [`Controller`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":444802,"byte_end":444861,"line_start":92,"line_end":92,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":444862,"byte_end":444865,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ [`Widget`]: ../trait.Widget.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":444866,"byte_end":444902,"line_start":94,"line_end":94,"column_start":1,"column_end":37}},{"value":"/ [`Controller`]: trait.Controller.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":444903,"byte_end":444944,"line_start":95,"line_end":95,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2949},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":445100,"byte_end":445103,"line_start":103,"line_end":103,"column_start":12,"column_end":15},"name":"new","qualname":"<ControllerHost<W, C>>::new","value":"pub fn new(W, C) -> ControllerHost<W, C>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ControllerHost`.\n","sig":null,"attributes":[{"value":"/ Create a new `ControllerHost`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":445054,"byte_end":445088,"line_start":102,"line_end":102,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2972},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\either.rs","byte_start":446978,"byte_end":446984,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Either","qualname":"::widget::either::Either","value":"Either {  }","parent":null,"children":[{"krate":0,"index":2974},{"krate":0,"index":2975},{"krate":0,"index":2976},{"krate":0,"index":2977}],"decl_id":null,"docs":" A widget that switches between two possible child views.\n","sig":null,"attributes":[{"value":"/ A widget that switches between two possible child views.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\either.rs","byte_start":446906,"byte_end":446966,"line_start":20,"line_end":20,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2980},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\either.rs","byte_start":447412,"byte_end":447415,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<Either<T>>::new","value":"pub fn new<impl Fn(&T, &Env) -> bool + 'static: Fn(&T, &Env) -> bool +\n'static, impl Widget<T> + 'static: Widget<T> + 'static,\nimpl Widget<T> + 'static: Widget<T> +\n'static>(impl Fn(&T, &Env) -> bool + 'static, impl Widget<T> + 'static,\nimpl Widget<T> + 'static) -> Either<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new widget that switches between two views.","sig":null,"attributes":[{"value":"/ Create a new widget that switches between two views.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\either.rs","byte_start":447183,"byte_end":447239,"line_start":29,"line_end":29,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\either.rs","byte_start":447244,"byte_end":447247,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ The given closure is evaluated on data change. If its value is `true`, then","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\either.rs","byte_start":447252,"byte_end":447331,"line_start":31,"line_end":31,"column_start":5,"column_end":84}},{"value":"/ the `true_branch` widget is shown, otherwise `false_branch`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\either.rs","byte_start":447336,"byte_end":447400,"line_start":32,"line_end":32,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":3006},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":450545,"byte_end":450553,"line_start":21,"line_end":21,"column_start":12,"column_end":20},"name":"EnvScope","qualname":"::widget::env_scope::EnvScope","value":"EnvScope {  }","parent":null,"children":[{"krate":0,"index":3009},{"krate":0,"index":3010}],"decl_id":null,"docs":" A widget that accepts a closure to update the environment for its child.\n","sig":null,"attributes":[{"value":"/ A widget that accepts a closure to update the environment for its child.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":450457,"byte_end":450533,"line_start":20,"line_end":20,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3014},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":451408,"byte_end":451411,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<EnvScope<T, W>>::new","value":"pub fn new<impl Fn(&mut Env, &T) + 'static: Fn(&mut Env, &T) -> () +\n'static>(impl Fn(&mut Env, &T) + 'static, W) -> EnvScope<T, W>","parent":null,"children":[],"decl_id":null,"docs":" Create a widget that updates the environment for its descendants.","sig":null,"attributes":[{"value":"/ Create a widget that updates the environment for its descendants.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":450692,"byte_end":450761,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":450766,"byte_end":450769,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ Accepts a closure that sets Env values.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":450774,"byte_end":450817,"line_start":29,"line_end":29,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":450822,"byte_end":450825,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This is available as [`WidgetExt::env_scope`] for convenience.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":450830,"byte_end":450896,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":450901,"byte_end":450904,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":450909,"byte_end":450923,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":450928,"byte_end":450935,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ # use druid::{theme, Widget};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":450940,"byte_end":450973,"line_start":35,"line_end":35,"column_start":5,"column_end":38}},{"value":"/ # use druid::piet::{Color};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":450978,"byte_end":451009,"line_start":36,"line_end":36,"column_start":5,"column_end":36}},{"value":"/ # use druid::widget::{Label, EnvScope};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":451014,"byte_end":451057,"line_start":37,"line_end":37,"column_start":5,"column_end":48}},{"value":"/ # fn build_widget() -> impl Widget<String> {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":451062,"byte_end":451110,"line_start":38,"line_end":38,"column_start":5,"column_end":53}},{"value":"/ EnvScope::new(","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":451115,"byte_end":451133,"line_start":39,"line_end":39,"column_start":5,"column_end":23}},{"value":"/     |env, data| {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":451138,"byte_end":451159,"line_start":40,"line_end":40,"column_start":5,"column_end":26}},{"value":"/         env.set(theme::LABEL_COLOR, Color::WHITE);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":451164,"byte_end":451218,"line_start":41,"line_end":41,"column_start":5,"column_end":59}},{"value":"/     },","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":451223,"byte_end":451233,"line_start":42,"line_end":42,"column_start":5,"column_end":15}},{"value":"/     Label::new(\"White text!\")","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":451238,"byte_end":451271,"line_start":43,"line_end":43,"column_start":5,"column_end":38}},{"value":"/ )","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":451276,"byte_end":451281,"line_start":44,"line_end":44,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":451286,"byte_end":451289,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":451294,"byte_end":451301,"line_start":46,"line_end":46,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":451306,"byte_end":451313,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":451318,"byte_end":451321,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ [`WidgetExt::env_scope`]: ../trait.WidgetExt.html#method.env_scope","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":451326,"byte_end":451396,"line_start":49,"line_end":49,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":3048},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":458593,"byte_end":458597,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"Flex","qualname":"::widget::flex::Flex","value":"Flex {  }","parent":null,"children":[{"krate":0,"index":3050},{"krate":0,"index":3051},{"krate":0,"index":3052},{"krate":0,"index":3053},{"krate":0,"index":3054}],"decl_id":null,"docs":" A container with either horizontal or vertical layout.","sig":null,"attributes":[{"value":"/ A container with either horizontal or vertical layout.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":453703,"byte_end":453761,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":453762,"byte_end":453765,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This widget is the foundation of most layouts, and is highly configurable.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":453766,"byte_end":453844,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":453845,"byte_end":453848,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Flex layout algorithm","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":453849,"byte_end":453876,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":453877,"byte_end":453880,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Children of a `Flex` container can have an optional `flex` parameter.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":453881,"byte_end":453954,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ Layout occurs in several passes. First we measure (calling their [`layout`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":453955,"byte_end":454034,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ method) our non-flex children, providing them with unbounded space on the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":454035,"byte_end":454112,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ main axis. Next, the remaining space is divided between the flex children","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":454113,"byte_end":454190,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ according to their flex factor, and they are measured. Unlike a non-flex","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":454191,"byte_end":454267,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ child, a child with a non-zero flex factor has a maximum allowed size","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":454268,"byte_end":454341,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ on the main axis; non-flex children are allowed to choose their size first,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":454342,"byte_end":454421,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ and freely.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":454422,"byte_end":454437,"line_start":35,"line_end":35,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":454438,"byte_end":454441,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ If you would like a child to be forced to use up all of the flex space","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":454442,"byte_end":454516,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/ passed to it, you can place it in a [`SizedBox`] set to `expand` in the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":454517,"byte_end":454592,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ appropriate axis. There are convenience methods for this available on","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":454593,"byte_end":454666,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ [`WidgetExt`]: [`expand_width`] and [`expand_height`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":454667,"byte_end":454725,"line_start":40,"line_end":40,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":454726,"byte_end":454729,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Flex or non-flex?","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":454730,"byte_end":454753,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":454754,"byte_end":454757,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ When should your children be flexible? With other things being equal,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":454758,"byte_end":454831,"line_start":44,"line_end":44,"column_start":1,"column_end":74}},{"value":"/ a flexible child has lower layout priority than a non-flexible child.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":454832,"byte_end":454905,"line_start":45,"line_end":45,"column_start":1,"column_end":74}},{"value":"/ Imagine, for instance, we have a row that is 30dp wide, and we have","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":454906,"byte_end":454977,"line_start":46,"line_end":46,"column_start":1,"column_end":72}},{"value":"/ two children, both of which want to be 20dp wide. If child #1 is non-flex","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":454978,"byte_end":455055,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/ and child #2 is flex, the first widget will take up its 20dp, and the second","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":455056,"byte_end":455136,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/ widget will be constrained to 10dp.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":455137,"byte_end":455176,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":455177,"byte_end":455180,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ If, instead, both widgets are flex, they will each be given equal space,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":455181,"byte_end":455257,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ and both will end up taking up 15dp.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":455258,"byte_end":455298,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":455299,"byte_end":455302,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ If both are non-flex they will both take up 20dp, and will overflow the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":455303,"byte_end":455378,"line_start":54,"line_end":54,"column_start":1,"column_end":76}},{"value":"/ container.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":455379,"byte_end":455393,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":455394,"byte_end":455397,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```no_compile","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":455398,"byte_end":455415,"line_start":57,"line_end":57,"column_start":1,"column_end":18}},{"value":"/  -------non-flex----- -flex-----","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":455416,"byte_end":455452,"line_start":58,"line_end":58,"column_start":1,"column_end":37}},{"value":"/ |       child #1     | child #2 |","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":455453,"byte_end":455490,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":455491,"byte_end":455494,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":455495,"byte_end":455498,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/  ----flex------- ----flex-------","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":455499,"byte_end":455535,"line_start":62,"line_end":62,"column_start":1,"column_end":37}},{"value":"/ |    child #1   |    child #2   |","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":455536,"byte_end":455573,"line_start":63,"line_end":63,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":455574,"byte_end":455577,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":455578,"byte_end":455585,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":455586,"byte_end":455589,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ In general, if you are using widgets that are opinionated about their size","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":455590,"byte_end":455668,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ (such as most control widgets, which are designed to lay out nicely together,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":455669,"byte_end":455750,"line_start":68,"line_end":68,"column_start":1,"column_end":82}},{"value":"/ or text widgets that are sized to fit their text) you should make them","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":455751,"byte_end":455825,"line_start":69,"line_end":69,"column_start":1,"column_end":75}},{"value":"/ non-flexible.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":455826,"byte_end":455843,"line_start":70,"line_end":70,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":455844,"byte_end":455847,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ If you are trying to divide space evenly, or if you want a particular item","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":455848,"byte_end":455926,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ to have access to all left over space, then you should make it flexible.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":455927,"byte_end":456003,"line_start":73,"line_end":73,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":456004,"byte_end":456007,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ **note**: by default, a widget will not necessarily use all the space that","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":456008,"byte_end":456086,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/ is available to it. For instance, the [`TextBox`] widget has a default","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":456087,"byte_end":456161,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/ width, and will choose this width if possible, even if more space is","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":456162,"byte_end":456234,"line_start":77,"line_end":77,"column_start":1,"column_end":73}},{"value":"/ available to it. If you want to force a widget to use all available space,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":456235,"byte_end":456313,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"/ you should expand it, with [`expand_width`] or [`expand_height`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":456314,"byte_end":456383,"line_start":79,"line_end":79,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":456384,"byte_end":456387,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":456388,"byte_end":456391,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ # Options","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":456392,"byte_end":456405,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":456406,"byte_end":456409,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ To experiment with these options, see the `flex` example in `druid/examples`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":456410,"byte_end":456491,"line_start":84,"line_end":84,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":456492,"byte_end":456495,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ - [`CrossAxisAlignment`] determines how children are positioned on the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":456496,"byte_end":456570,"line_start":86,"line_end":86,"column_start":1,"column_end":75}},{"value":"/ cross or 'minor' axis. The default is `CrossAxisAlignment::Center`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":456571,"byte_end":456642,"line_start":87,"line_end":87,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":456643,"byte_end":456646,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ - [`MainAxisAlignment`] determines how children are positioned on the main","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":456647,"byte_end":456725,"line_start":89,"line_end":89,"column_start":1,"column_end":79}},{"value":"/ axis; this is only meaningful if the container has more space on the main","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":456726,"byte_end":456803,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"/ axis than is taken up by its children.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":456804,"byte_end":456846,"line_start":91,"line_end":91,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":456847,"byte_end":456850,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ - [`must_fill_main_axis`] determines whether the container is obliged to","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":456851,"byte_end":456927,"line_start":93,"line_end":93,"column_start":1,"column_end":77}},{"value":"/ be maximally large on the major axis, as determined by its own constraints.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":456928,"byte_end":457007,"line_start":94,"line_end":94,"column_start":1,"column_end":80}},{"value":"/ If this is `true`, then the container must fill the available space on that","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457008,"byte_end":457087,"line_start":95,"line_end":95,"column_start":1,"column_end":80}},{"value":"/ axis; otherwise it may be smaller if its children are smaller.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457088,"byte_end":457154,"line_start":96,"line_end":96,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457155,"byte_end":457158,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Additional options can be set (or overridden) in the [`FlexParams`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457159,"byte_end":457231,"line_start":98,"line_end":98,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457232,"byte_end":457235,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457236,"byte_end":457250,"line_start":100,"line_end":100,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457251,"byte_end":457254,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Construction with builder methods","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457255,"byte_end":457292,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457293,"byte_end":457296,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457297,"byte_end":457304,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/ use druid::widget::{Flex, FlexParams, Label, Slider, CrossAxisAlignment};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457305,"byte_end":457382,"line_start":105,"line_end":105,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457383,"byte_end":457386,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ let my_row = Flex::row()","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457387,"byte_end":457415,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"/     .cross_axis_alignment(CrossAxisAlignment::Center)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457416,"byte_end":457473,"line_start":108,"line_end":108,"column_start":1,"column_end":58}},{"value":"/     .must_fill_main_axis(true)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457474,"byte_end":457508,"line_start":109,"line_end":109,"column_start":1,"column_end":35}},{"value":"/     .with_child(Label::new(\"hello\"))","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457509,"byte_end":457549,"line_start":110,"line_end":110,"column_start":1,"column_end":41}},{"value":"/     .with_default_spacer()","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457550,"byte_end":457580,"line_start":111,"line_end":111,"column_start":1,"column_end":31}},{"value":"/     .with_flex_child(Slider::new(), 1.0);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457581,"byte_end":457626,"line_start":112,"line_end":112,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457627,"byte_end":457634,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457635,"byte_end":457638,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Construction with mutating methods","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457639,"byte_end":457677,"line_start":115,"line_end":115,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457678,"byte_end":457681,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457682,"byte_end":457689,"line_start":117,"line_end":117,"column_start":1,"column_end":8}},{"value":"/ use druid::widget::{Flex, FlexParams, Label, Slider, CrossAxisAlignment};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457690,"byte_end":457767,"line_start":118,"line_end":118,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457768,"byte_end":457771,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ let mut my_row = Flex::row();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457772,"byte_end":457805,"line_start":120,"line_end":120,"column_start":1,"column_end":34}},{"value":"/ my_row.set_must_fill_main_axis(true);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457806,"byte_end":457847,"line_start":121,"line_end":121,"column_start":1,"column_end":42}},{"value":"/ my_row.set_cross_axis_alignment(CrossAxisAlignment::Center);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457848,"byte_end":457912,"line_start":122,"line_end":122,"column_start":1,"column_end":65}},{"value":"/ my_row.add_child(Label::new(\"hello\"));","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457913,"byte_end":457955,"line_start":123,"line_end":123,"column_start":1,"column_end":43}},{"value":"/ my_row.add_default_spacer();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457956,"byte_end":457988,"line_start":124,"line_end":124,"column_start":1,"column_end":33}},{"value":"/ my_row.add_flex_child(Slider::new(), 1.0);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":457989,"byte_end":458035,"line_start":125,"line_end":125,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":458036,"byte_end":458043,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":458044,"byte_end":458047,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ [`layout`]: ../trait.Widget.html#tymethod.layout","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":458048,"byte_end":458100,"line_start":128,"line_end":128,"column_start":1,"column_end":53}},{"value":"/ [`MainAxisAlignment`]: enum.MainAxisAlignment.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":458101,"byte_end":458155,"line_start":129,"line_end":129,"column_start":1,"column_end":55}},{"value":"/ [`CrossAxisAlignment`]: enum.CrossAxisAlignment.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":458156,"byte_end":458212,"line_start":130,"line_end":130,"column_start":1,"column_end":57}},{"value":"/ [`must_fill_main_axis`]: struct.Flex.html#method.must_fill_main_axis","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":458213,"byte_end":458285,"line_start":131,"line_end":131,"column_start":1,"column_end":73}},{"value":"/ [`FlexParams`]: struct.FlexParams.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":458286,"byte_end":458328,"line_start":132,"line_end":132,"column_start":1,"column_end":43}},{"value":"/ [`WidgetExt`]: ../trait.WidgetExt.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":458329,"byte_end":458371,"line_start":133,"line_end":133,"column_start":1,"column_end":43}},{"value":"/ [`expand_height`]: ../trait.WidgetExt.html#method.expand_height","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":458372,"byte_end":458439,"line_start":134,"line_end":134,"column_start":1,"column_end":68}},{"value":"/ [`expand_width`]: ../trait.WidgetExt.html#method.expand_width","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":458440,"byte_end":458505,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"/ [`TextBox`]: struct.TextBox.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":458506,"byte_end":458542,"line_start":136,"line_end":136,"column_start":1,"column_end":37}},{"value":"/ [`SizedBox`]: struct.SizedBox.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":458543,"byte_end":458581,"line_start":137,"line_end":137,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":7090},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":460323,"byte_end":460333,"line_start":189,"line_end":189,"column_start":12,"column_end":22},"name":"FlexParams","qualname":"::widget::flex::FlexParams","value":"FlexParams {  }","parent":null,"children":[{"krate":0,"index":7091},{"krate":0,"index":7092}],"decl_id":null,"docs":" Optional parameters for an item in a [`Flex`] container (row or column).","sig":null,"attributes":[{"value":"/ Optional parameters for an item in a [`Flex`] container (row or column).","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":458968,"byte_end":459044,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":459045,"byte_end":459048,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ Generally, when you would like to add a flexible child to a container,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":459049,"byte_end":459123,"line_start":159,"line_end":159,"column_start":1,"column_end":75}},{"value":"/ you can simply call [`with_flex_child`] or [`add_flex_child`], passing the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":459124,"byte_end":459202,"line_start":160,"line_end":160,"column_start":1,"column_end":79}},{"value":"/ child and the desired flex factor as a `f64`, which has an impl of","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":459203,"byte_end":459273,"line_start":161,"line_end":161,"column_start":1,"column_end":71}},{"value":"/ `Into<FlexParams>`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":459274,"byte_end":459297,"line_start":162,"line_end":162,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":459298,"byte_end":459301,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ If you need to set additional paramaters, such as a custom [`CrossAxisAlignment`],","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":459302,"byte_end":459388,"line_start":164,"line_end":164,"column_start":1,"column_end":87}},{"value":"/ you can construct `FlexParams` directly. By default, the child has the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":459389,"byte_end":459463,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ same `CrossAxisAlignment` as the container.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":459464,"byte_end":459511,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":459512,"byte_end":459515,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ For an overview of the flex layout algorithm, see the [`Flex`] docs.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":459516,"byte_end":459588,"line_start":168,"line_end":168,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":459589,"byte_end":459592,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":459593,"byte_end":459607,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":459608,"byte_end":459615,"line_start":171,"line_end":171,"column_start":1,"column_end":8}},{"value":"/ use druid::widget::{FlexParams, Label, CrossAxisAlignment};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":459616,"byte_end":459679,"line_start":172,"line_end":172,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":459680,"byte_end":459683,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ let mut row = druid::widget::Flex::<()>::row();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":459684,"byte_end":459735,"line_start":174,"line_end":174,"column_start":1,"column_end":52}},{"value":"/ let child_1 = Label::new(\"I'm hungry\");","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":459736,"byte_end":459779,"line_start":175,"line_end":175,"column_start":1,"column_end":44}},{"value":"/ let child_2 = Label::new(\"I'm scared\");","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":459780,"byte_end":459823,"line_start":176,"line_end":176,"column_start":1,"column_end":44}},{"value":"/ // normally you just use a float:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":459824,"byte_end":459861,"line_start":177,"line_end":177,"column_start":1,"column_end":38}},{"value":"/ row.add_flex_child(child_1, 1.0);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":459862,"byte_end":459899,"line_start":178,"line_end":178,"column_start":1,"column_end":38}},{"value":"/ // you can construct FlexParams if needed:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":459900,"byte_end":459946,"line_start":179,"line_end":179,"column_start":1,"column_end":47}},{"value":"/ let params = FlexParams::new(2.0, CrossAxisAlignment::End);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":459947,"byte_end":460010,"line_start":180,"line_end":180,"column_start":1,"column_end":64}},{"value":"/ row.add_flex_child(child_2, params);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":460011,"byte_end":460051,"line_start":181,"line_end":181,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":460052,"byte_end":460059,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":460060,"byte_end":460063,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ [`CrossAxisAlignment`]: enum.CrossAxisAlignment.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":460064,"byte_end":460120,"line_start":184,"line_end":184,"column_start":1,"column_end":57}},{"value":"/ [`Flex`]: struct.Flex.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":460121,"byte_end":460151,"line_start":185,"line_end":185,"column_start":1,"column_end":31}},{"value":"/ [`with_flex_child`]: struct.Flex.html#method.with_flex_child","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":460152,"byte_end":460216,"line_start":186,"line_end":186,"column_start":1,"column_end":65}},{"value":"/ [`add_flex_child`]: struct.Flex.html#method.add_flex_child","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":460217,"byte_end":460279,"line_start":187,"line_end":187,"column_start":1,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7099},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":460708,"byte_end":460718,"line_start":202,"line_end":202,"column_start":5,"column_end":15},"name":"Horizontal","qualname":"::widget::flex::Axis::Horizontal","value":"Axis::Horizontal","parent":{"krate":0,"index":7098},"children":[],"decl_id":null,"docs":" The x axis\n","sig":null,"attributes":[{"value":"/ The x axis","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":460689,"byte_end":460703,"line_start":201,"line_end":201,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7101},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":460743,"byte_end":460751,"line_start":204,"line_end":204,"column_start":5,"column_end":13},"name":"Vertical","qualname":"::widget::flex::Axis::Vertical","value":"Axis::Vertical","parent":{"krate":0,"index":7098},"children":[],"decl_id":null,"docs":" The y axis\n","sig":null,"attributes":[{"value":"/ The y axis","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":460724,"byte_end":460738,"line_start":203,"line_end":203,"column_start":5,"column_end":19}}]},{"kind":"Enum","id":{"krate":0,"index":7098},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":460678,"byte_end":460682,"line_start":200,"line_end":200,"column_start":10,"column_end":14},"name":"Axis","qualname":"::widget::flex::Axis","value":"pub enum Axis { Horizontal, Vertical, }","parent":null,"children":[{"krate":0,"index":7099},{"krate":0,"index":7101}],"decl_id":null,"docs":" An axis in visual space.","sig":null,"attributes":[{"value":"/ An axis in visual space.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":460397,"byte_end":460425,"line_start":194,"line_end":194,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":460426,"byte_end":460429,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ Most often used by widgets to describe","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":460430,"byte_end":460472,"line_start":196,"line_end":196,"column_start":1,"column_end":43}},{"value":"/ the direction in which they grow as their number of children increases.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":460473,"byte_end":460548,"line_start":197,"line_end":197,"column_start":1,"column_end":76}},{"value":"/ Has some methods for manipulating geometry with respect to the axis.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":460549,"byte_end":460621,"line_start":198,"line_end":198,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3063},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":460827,"byte_end":460832,"line_start":209,"line_end":209,"column_start":12,"column_end":17},"name":"cross","qualname":"<Axis>::cross","value":"pub fn cross(Self) -> Axis","parent":null,"children":[],"decl_id":null,"docs":" Get the axis perpendicular to this one.\n","sig":null,"attributes":[{"value":"/ Get the axis perpendicular to this one.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":460772,"byte_end":460815,"line_start":208,"line_end":208,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3064},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":461058,"byte_end":461063,"line_start":217,"line_end":217,"column_start":12,"column_end":17},"name":"major","qualname":"<Axis>::major","value":"pub fn major(Self, Size) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Extract from the argument the magnitude along this axis\n","sig":null,"attributes":[{"value":"/ Extract from the argument the magnitude along this axis","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":460987,"byte_end":461046,"line_start":216,"line_end":216,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3065},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":461310,"byte_end":461315,"line_start":225,"line_end":225,"column_start":12,"column_end":17},"name":"minor","qualname":"<Axis>::minor","value":"pub fn minor(Self, Size) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Extract from the argument the magnitude along the perpendicular axis\n","sig":null,"attributes":[{"value":"/ Extract from the argument the magnitude along the perpendicular axis","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":461226,"byte_end":461298,"line_start":224,"line_end":224,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3066},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":461465,"byte_end":461475,"line_start":230,"line_end":230,"column_start":12,"column_end":22},"name":"major_span","qualname":"<Axis>::major_span","value":"pub fn major_span(Self, Rect) -> (f64, f64)","parent":null,"children":[],"decl_id":null,"docs":" Extract the extent of the argument in this axis as a pair.\n","sig":null,"attributes":[{"value":"/ Extract the extent of the argument in this axis as a pair.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":461391,"byte_end":461453,"line_start":229,"line_end":229,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3067},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":461733,"byte_end":461743,"line_start":238,"line_end":238,"column_start":12,"column_end":22},"name":"minor_span","qualname":"<Axis>::minor_span","value":"pub fn minor_span(Self, Rect) -> (f64, f64)","parent":null,"children":[],"decl_id":null,"docs":" Extract the extent of the argument in the minor axis as a pair.\n","sig":null,"attributes":[{"value":"/ Extract the extent of the argument in the minor axis as a pair.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":461654,"byte_end":461721,"line_start":237,"line_end":237,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3068},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":461914,"byte_end":461923,"line_start":243,"line_end":243,"column_start":12,"column_end":21},"name":"major_pos","qualname":"<Axis>::major_pos","value":"pub fn major_pos(Self, Point) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Extract the coordinate locating the argument with respect to this axis.\n","sig":null,"attributes":[{"value":"/ Extract the coordinate locating the argument with respect to this axis.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":461827,"byte_end":461902,"line_start":242,"line_end":242,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3069},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":462169,"byte_end":462178,"line_start":251,"line_end":251,"column_start":12,"column_end":21},"name":"minor_pos","qualname":"<Axis>::minor_pos","value":"pub fn minor_pos(Self, Point) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Extract the coordinate locating the argument with respect to the perpendicular axis.\n","sig":null,"attributes":[{"value":"/ Extract the coordinate locating the argument with respect to the perpendicular axis.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":462069,"byte_end":462157,"line_start":250,"line_end":250,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3070},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":462378,"byte_end":462382,"line_start":257,"line_end":257,"column_start":12,"column_end":16},"name":"pack","qualname":"<Axis>::pack","value":"pub fn pack(Self, f64, f64) -> (f64, f64)","parent":null,"children":[],"decl_id":null,"docs":" Arrange the major and minor measurements with respect to this axis such that it forms\n an (x, y) pair.\n","sig":null,"attributes":[{"value":"/ Arrange the major and minor measurements with respect to this axis such that it forms","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":462253,"byte_end":462342,"line_start":255,"line_end":255,"column_start":5,"column_end":94}},{"value":"/ an (x, y) pair.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":462347,"byte_end":462366,"line_start":256,"line_end":256,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7114},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":463581,"byte_end":463586,"line_start":294,"line_end":294,"column_start":5,"column_end":10},"name":"Start","qualname":"::widget::flex::CrossAxisAlignment::Start","value":"CrossAxisAlignment::Start","parent":{"krate":0,"index":7113},"children":[],"decl_id":null,"docs":" Top or leading.","sig":null,"attributes":[{"value":"/ Top or leading.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":463422,"byte_end":463441,"line_start":290,"line_end":290,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":463446,"byte_end":463449,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ In a vertical container, widgets are top aligned. In a horiziontal","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":463454,"byte_end":463524,"line_start":292,"line_end":292,"column_start":5,"column_end":75}},{"value":"/ container, their leading edges are aligned.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":463529,"byte_end":463576,"line_start":293,"line_end":293,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7116},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":463639,"byte_end":463645,"line_start":296,"line_end":296,"column_start":5,"column_end":11},"name":"Center","qualname":"::widget::flex::CrossAxisAlignment::Center","value":"CrossAxisAlignment::Center","parent":{"krate":0,"index":7113},"children":[],"decl_id":null,"docs":" Widgets are centered in the container.\n","sig":null,"attributes":[{"value":"/ Widgets are centered in the container.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":463592,"byte_end":463634,"line_start":295,"line_end":295,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7118},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":463818,"byte_end":463821,"line_start":301,"line_end":301,"column_start":5,"column_end":8},"name":"End","qualname":"::widget::flex::CrossAxisAlignment::End","value":"CrossAxisAlignment::End","parent":{"krate":0,"index":7113},"children":[],"decl_id":null,"docs":" Bottom or trailing.","sig":null,"attributes":[{"value":"/ Bottom or trailing.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":463651,"byte_end":463674,"line_start":297,"line_end":297,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":463679,"byte_end":463682,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ In a vertical container, widgets are bottom aligned. In a horiziontal","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":463687,"byte_end":463760,"line_start":299,"line_end":299,"column_start":5,"column_end":78}},{"value":"/ container, their trailing edges are aligned.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":463765,"byte_end":463813,"line_start":300,"line_end":300,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7120},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":464102,"byte_end":464110,"line_start":308,"line_end":308,"column_start":5,"column_end":13},"name":"Baseline","qualname":"::widget::flex::CrossAxisAlignment::Baseline","value":"CrossAxisAlignment::Baseline","parent":{"krate":0,"index":7113},"children":[],"decl_id":null,"docs":" Align on the baseline.","sig":null,"attributes":[{"value":"/ Align on the baseline.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":463827,"byte_end":463853,"line_start":302,"line_end":302,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":463858,"byte_end":463861,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ In a horizontal container, widgets are aligned along the calculated","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":463866,"byte_end":463937,"line_start":304,"line_end":304,"column_start":5,"column_end":76}},{"value":"/ baseline. In a vertical container, this is equivalent to `End`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":463942,"byte_end":464009,"line_start":305,"line_end":305,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":464014,"byte_end":464017,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ The calculated baseline is the maximum baseline offset of the children.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":464022,"byte_end":464097,"line_start":307,"line_end":307,"column_start":5,"column_end":80}}]},{"kind":"Enum","id":{"krate":0,"index":7113},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":463397,"byte_end":463415,"line_start":289,"line_end":289,"column_start":10,"column_end":28},"name":"CrossAxisAlignment","qualname":"::widget::flex::CrossAxisAlignment","value":"pub enum CrossAxisAlignment { Start, Center, End, Baseline, }","parent":null,"children":[{"krate":0,"index":7114},{"krate":0,"index":7116},{"krate":0,"index":7118},{"krate":0,"index":7120}],"decl_id":null,"docs":" The alignment of the widgets on the container's cross (or minor) axis.","sig":null,"attributes":[{"value":"/ The alignment of the widgets on the container's cross (or minor) axis.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":463153,"byte_end":463227,"line_start":284,"line_end":284,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":463228,"byte_end":463231,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ If a widget is smaller than the container on the minor axis, this determines","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":463232,"byte_end":463312,"line_start":286,"line_end":286,"column_start":1,"column_end":81}},{"value":"/ where it is positioned.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":463313,"byte_end":463340,"line_start":287,"line_end":287,"column_start":1,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7133},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":464493,"byte_end":464498,"line_start":320,"line_end":320,"column_start":5,"column_end":10},"name":"Start","qualname":"::widget::flex::MainAxisAlignment::Start","value":"MainAxisAlignment::Start","parent":{"krate":0,"index":7132},"children":[],"decl_id":null,"docs":" Top or leading.","sig":null,"attributes":[{"value":"/ Top or leading.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":464385,"byte_end":464404,"line_start":317,"line_end":317,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":464409,"byte_end":464412,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Children are aligned with the top or leading edge, without padding.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":464417,"byte_end":464488,"line_start":319,"line_end":319,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7135},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":464552,"byte_end":464558,"line_start":322,"line_end":322,"column_start":5,"column_end":11},"name":"Center","qualname":"::widget::flex::MainAxisAlignment::Center","value":"MainAxisAlignment::Center","parent":{"krate":0,"index":7132},"children":[],"decl_id":null,"docs":" Children are centered, without padding.\n","sig":null,"attributes":[{"value":"/ Children are centered, without padding.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":464504,"byte_end":464547,"line_start":321,"line_end":321,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7137},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":464680,"byte_end":464683,"line_start":326,"line_end":326,"column_start":5,"column_end":8},"name":"End","qualname":"::widget::flex::MainAxisAlignment::End","value":"MainAxisAlignment::End","parent":{"krate":0,"index":7132},"children":[],"decl_id":null,"docs":" Bottom or trailing.","sig":null,"attributes":[{"value":"/ Bottom or trailing.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":464564,"byte_end":464587,"line_start":323,"line_end":323,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":464592,"byte_end":464595,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Children are aligned with the bottom or trailing edge, without padding.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":464600,"byte_end":464675,"line_start":325,"line_end":325,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7139},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":464747,"byte_end":464759,"line_start":328,"line_end":328,"column_start":5,"column_end":17},"name":"SpaceBetween","qualname":"::widget::flex::MainAxisAlignment::SpaceBetween","value":"MainAxisAlignment::SpaceBetween","parent":{"krate":0,"index":7132},"children":[],"decl_id":null,"docs":" Extra space is divided evenly between each child.\n","sig":null,"attributes":[{"value":"/ Extra space is divided evenly between each child.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":464689,"byte_end":464742,"line_start":327,"line_end":327,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7141},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":464847,"byte_end":464858,"line_start":330,"line_end":330,"column_start":5,"column_end":16},"name":"SpaceEvenly","qualname":"::widget::flex::MainAxisAlignment::SpaceEvenly","value":"MainAxisAlignment::SpaceEvenly","parent":{"krate":0,"index":7132},"children":[],"decl_id":null,"docs":" Extra space is divided evenly between each child, as well as at the ends.\n","sig":null,"attributes":[{"value":"/ Extra space is divided evenly between each child, as well as at the ends.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":464765,"byte_end":464842,"line_start":329,"line_end":329,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7143},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":465072,"byte_end":465083,"line_start":335,"line_end":335,"column_start":5,"column_end":16},"name":"SpaceAround","qualname":"::widget::flex::MainAxisAlignment::SpaceAround","value":"MainAxisAlignment::SpaceAround","parent":{"krate":0,"index":7132},"children":[],"decl_id":null,"docs":" Space between each child, with less at the start and end.","sig":null,"attributes":[{"value":"/ Space between each child, with less at the start and end.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":464864,"byte_end":464925,"line_start":331,"line_end":331,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":464930,"byte_end":464933,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ This divides space such that each child is separated by `n` units,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":464938,"byte_end":465008,"line_start":333,"line_end":333,"column_start":5,"column_end":75}},{"value":"/ and the start and end have `n/2` units of padding.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":465013,"byte_end":465067,"line_start":334,"line_end":334,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":7132},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":464361,"byte_end":464378,"line_start":316,"line_end":316,"column_start":10,"column_end":27},"name":"MainAxisAlignment","qualname":"::widget::flex::MainAxisAlignment","value":"pub enum MainAxisAlignment {\n    Start,\n    Center,\n    End,\n    SpaceBetween,\n    SpaceEvenly,\n    SpaceAround,\n}","parent":null,"children":[{"krate":0,"index":7133},{"krate":0,"index":7135},{"krate":0,"index":7137},{"krate":0,"index":7139},{"krate":0,"index":7141},{"krate":0,"index":7143}],"decl_id":null,"docs":" Arrangement of children on the main axis.","sig":null,"attributes":[{"value":"/ Arrangement of children on the main axis.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":464115,"byte_end":464160,"line_start":311,"line_end":311,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":464161,"byte_end":464164,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ If there is surplus space on the main axis after laying out children, this","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":464165,"byte_end":464243,"line_start":313,"line_end":313,"column_start":1,"column_end":79}},{"value":"/ enum represents how children are laid out in this space.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":464244,"byte_end":464304,"line_start":314,"line_end":314,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3073},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":465672,"byte_end":465675,"line_start":351,"line_end":351,"column_start":12,"column_end":15},"name":"new","qualname":"<FlexParams>::new","value":"pub fn new<impl Into<Option<CrossAxisAlignment>>: Into<Option<CrossAxisAlignment>>>(f64,\nimpl Into<Option<CrossAxisAlignment>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create custom `FlexParams` with a specific `flex_factor` and an optional\n [`CrossAxisAlignment`].","sig":null,"attributes":[{"value":"/ Create custom `FlexParams` with a specific `flex_factor` and an optional","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":465110,"byte_end":465186,"line_start":339,"line_end":339,"column_start":5,"column_end":81}},{"value":"/ [`CrossAxisAlignment`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":465191,"byte_end":465218,"line_start":340,"line_end":340,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":465223,"byte_end":465226,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ You likely only need to create these manually if you need to specify","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":465231,"byte_end":465303,"line_start":342,"line_end":342,"column_start":5,"column_end":77}},{"value":"/ a custom alignment; if you only need to use a custom `flex_factor` you","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":465308,"byte_end":465382,"line_start":343,"line_end":343,"column_start":5,"column_end":79}},{"value":"/ can pass an `f64` to any of the functions that take `FlexParams`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":465387,"byte_end":465456,"line_start":344,"line_end":344,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":465461,"byte_end":465464,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ By default, the widget uses the alignment of its parent [`Flex`] container.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":465469,"byte_end":465548,"line_start":346,"line_end":346,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":465553,"byte_end":465556,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":465561,"byte_end":465564,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ [`Flex`]: struct.Flex.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":465569,"byte_end":465599,"line_start":349,"line_end":349,"column_start":5,"column_end":35}},{"value":"/ [`CrossAxisAlignment`]: enum.CrossAxisAlignment.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":465604,"byte_end":465660,"line_start":350,"line_end":350,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3081},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":466154,"byte_end":466162,"line_start":370,"line_end":370,"column_start":12,"column_end":20},"name":"for_axis","qualname":"<Flex<T>>::for_axis","value":"pub fn for_axis(Axis) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new Flex oriented along the provided axis.\n","sig":null,"attributes":[{"value":"/ Create a new Flex oriented along the provided axis.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":466087,"byte_end":466142,"line_start":369,"line_end":369,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3082},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":466566,"byte_end":466569,"line_start":384,"line_end":384,"column_start":12,"column_end":15},"name":"row","qualname":"<Flex<T>>::row","value":"pub fn row() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new horizontal stack.","sig":null,"attributes":[{"value":"/ Create a new horizontal stack.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":466431,"byte_end":466465,"line_start":380,"line_end":380,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":466470,"byte_end":466473,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ The child widgets are laid out horizontally, from left to right.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":466478,"byte_end":466546,"line_start":382,"line_end":382,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":466551,"byte_end":466554,"line_start":383,"line_end":383,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3083},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":466757,"byte_end":466763,"line_start":391,"line_end":391,"column_start":12,"column_end":18},"name":"column","qualname":"<Flex<T>>::column","value":"pub fn column() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new vertical stack.","sig":null,"attributes":[{"value":"/ Create a new vertical stack.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":466634,"byte_end":466666,"line_start":388,"line_end":388,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":466671,"byte_end":466674,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ The child widgets are laid out vertically, from top to bottom.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":466679,"byte_end":466745,"line_start":390,"line_end":390,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3084},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":466985,"byte_end":467005,"line_start":398,"line_end":398,"column_start":12,"column_end":32},"name":"cross_axis_alignment","qualname":"<Flex<T>>::cross_axis_alignment","value":"pub fn cross_axis_alignment(Self, CrossAxisAlignment) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for specifying the childrens' [`CrossAxisAlignment`].","sig":null,"attributes":[{"value":"/ Builder-style method for specifying the childrens' [`CrossAxisAlignment`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":466826,"byte_end":466904,"line_start":395,"line_end":395,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":466909,"byte_end":466912,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ [`CrossAxisAlignment`]: enum.CrossAxisAlignment.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":466917,"byte_end":466973,"line_start":397,"line_end":397,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3085},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":467279,"byte_end":467298,"line_start":406,"line_end":406,"column_start":12,"column_end":31},"name":"main_axis_alignment","qualname":"<Flex<T>>::main_axis_alignment","value":"pub fn main_axis_alignment(Self, MainAxisAlignment) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for specifying the childrens' [`MainAxisAlignment`].","sig":null,"attributes":[{"value":"/ Builder-style method for specifying the childrens' [`MainAxisAlignment`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":467123,"byte_end":467200,"line_start":403,"line_end":403,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":467205,"byte_end":467208,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ [`MainAxisAlignment`]: enum.MainAxisAlignment.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":467213,"byte_end":467267,"line_start":405,"line_end":405,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3086},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":468079,"byte_end":468098,"line_start":425,"line_end":425,"column_start":12,"column_end":31},"name":"must_fill_main_axis","qualname":"<Flex<T>>::must_fill_main_axis","value":"pub fn must_fill_main_axis(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for setting whether the container must expand\n to fill the available space on its main axis.","sig":null,"attributes":[{"value":"/ Builder-style method for setting whether the container must expand","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":467414,"byte_end":467484,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"/ to fill the available space on its main axis.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":467489,"byte_end":467538,"line_start":412,"line_end":412,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":467543,"byte_end":467546,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ If any children have flex then this container will expand to fill all","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":467551,"byte_end":467624,"line_start":414,"line_end":414,"column_start":5,"column_end":78}},{"value":"/ available space on its main axis; But if no children are flex,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":467629,"byte_end":467695,"line_start":415,"line_end":415,"column_start":5,"column_end":71}},{"value":"/ this flag determines whether or not the container should shrink to fit,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":467700,"byte_end":467775,"line_start":416,"line_end":416,"column_start":5,"column_end":80}},{"value":"/ or must expand to fill.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":467780,"byte_end":467807,"line_start":417,"line_end":417,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":467812,"byte_end":467815,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ If it expands, and there is extra space left over, that space is","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":467820,"byte_end":467888,"line_start":419,"line_end":419,"column_start":5,"column_end":73}},{"value":"/ distributed in accordance with the [`MainAxisAlignment`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":467893,"byte_end":467954,"line_start":420,"line_end":420,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":467959,"byte_end":467962,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ The default value is `false`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":467967,"byte_end":468000,"line_start":422,"line_end":422,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":468005,"byte_end":468008,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ [`MainAxisAlignment`]: enum.MainAxisAlignment.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":468013,"byte_end":468067,"line_start":424,"line_end":424,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3087},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":468330,"byte_end":468340,"line_start":433,"line_end":433,"column_start":12,"column_end":22},"name":"with_child","qualname":"<Flex<T>>::with_child","value":"pub fn with_child<impl Widget<T> + 'static: Widget<T> +\n'static>(Self, impl Widget<T> + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style variant of `add_child`.","sig":null,"attributes":[{"value":"/ Builder-style variant of `add_child`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":468192,"byte_end":468233,"line_start":430,"line_end":430,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":468238,"byte_end":468241,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ Convenient for assembling a group of widgets in a single expression.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":468246,"byte_end":468318,"line_start":432,"line_end":432,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3089},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":469569,"byte_end":469584,"line_start":464,"line_end":464,"column_start":12,"column_end":27},"name":"with_flex_child","qualname":"<Flex<T>>::with_flex_child","value":"pub fn with_flex_child<impl Widget<T> + 'static: Widget<T> + 'static,\nimpl Into<FlexParams>: Into<FlexParams>>(Self, impl Widget<T> + 'static,\nimpl Into<FlexParams>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to add a flexible child to the container.","sig":null,"attributes":[{"value":"/ Builder-style method to add a flexible child to the container.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":468459,"byte_end":468525,"line_start":438,"line_end":438,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":468530,"byte_end":468533,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ This method is used when you need more control over the behaviour","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":468538,"byte_end":468607,"line_start":440,"line_end":440,"column_start":5,"column_end":74}},{"value":"/ of the widget you are adding. In the general case, this likely","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":468612,"byte_end":468678,"line_start":441,"line_end":441,"column_start":5,"column_end":71}},{"value":"/ means giving that child a 'flex factor', but it could also mean","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":468683,"byte_end":468750,"line_start":442,"line_end":442,"column_start":5,"column_end":72}},{"value":"/ giving the child a custom [`CrossAxisAlignment`], or a combination","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":468755,"byte_end":468825,"line_start":443,"line_end":443,"column_start":5,"column_end":75}},{"value":"/ of the two.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":468830,"byte_end":468845,"line_start":444,"line_end":444,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":468850,"byte_end":468853,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ This function takes a child widget and [`FlexParams`]; importantly","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":468858,"byte_end":468928,"line_start":446,"line_end":446,"column_start":5,"column_end":75}},{"value":"/ you can pass in a float as your [`FlexParams`] in most cases.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":468933,"byte_end":468998,"line_start":447,"line_end":447,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":469003,"byte_end":469006,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ For the non-builder varient, see [`add_flex_child`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":469011,"byte_end":469067,"line_start":449,"line_end":449,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":469072,"byte_end":469075,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":469080,"byte_end":469094,"line_start":451,"line_end":451,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":469099,"byte_end":469102,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":469107,"byte_end":469114,"line_start":453,"line_end":453,"column_start":5,"column_end":12}},{"value":"/ use druid::widget::{Flex, FlexParams, Label, Slider, CrossAxisAlignment};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":469119,"byte_end":469196,"line_start":454,"line_end":454,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":469201,"byte_end":469204,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let my_row = Flex::row()","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":469209,"byte_end":469237,"line_start":456,"line_end":456,"column_start":5,"column_end":33}},{"value":"/     .with_flex_child(Slider::new(), 1.0)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":469242,"byte_end":469286,"line_start":457,"line_end":457,"column_start":5,"column_end":49}},{"value":"/     .with_flex_child(Slider::new(), FlexParams::new(1.0, CrossAxisAlignment::End));","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":469291,"byte_end":469378,"line_start":458,"line_end":458,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":469383,"byte_end":469390,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":469395,"byte_end":469398,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ [`FlexParams`]: struct.FlexParams.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":469403,"byte_end":469445,"line_start":461,"line_end":461,"column_start":5,"column_end":47}},{"value":"/ [`add_flex_child`]: #method.add_flex_child","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":469450,"byte_end":469496,"line_start":462,"line_end":462,"column_start":5,"column_end":51}},{"value":"/ [`CrossAxisAlignment`]: enum.CrossAxisAlignment.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":469501,"byte_end":469557,"line_start":463,"line_end":463,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3092},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":469986,"byte_end":470005,"line_start":477,"line_end":477,"column_start":12,"column_end":31},"name":"with_default_spacer","qualname":"<Flex<T>>::with_default_spacer","value":"pub fn with_default_spacer(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to add a spacer widget with a standard size.","sig":null,"attributes":[{"value":"/ Builder-style method to add a spacer widget with a standard size.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":469768,"byte_end":469837,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":469842,"byte_end":469845,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ The actual value of this spacer depends on whether this container is","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":469850,"byte_end":469922,"line_start":475,"line_end":475,"column_start":5,"column_end":77}},{"value":"/ a row or column, as well as theme settings.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":469927,"byte_end":469974,"line_start":476,"line_end":476,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3093},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":470379,"byte_end":470390,"line_start":488,"line_end":488,"column_start":12,"column_end":23},"name":"with_spacer","qualname":"<Flex<T>>::with_spacer","value":"pub fn with_spacer<impl Into<KeyOrValue<f64>>: Into<KeyOrValue<f64>>>(Self,\nimpl Into<KeyOrValue<f64>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for adding a fixed-size spacer to the container.","sig":null,"attributes":[{"value":"/ Builder-style method for adding a fixed-size spacer to the container.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":470085,"byte_end":470158,"line_start":482,"line_end":482,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":470163,"byte_end":470166,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ If you are laying out standard controls in this container, you should","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":470171,"byte_end":470244,"line_start":484,"line_end":484,"column_start":5,"column_end":78}},{"value":"/ generally prefer to use [`add_default_spacer`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":470249,"byte_end":470300,"line_start":485,"line_end":485,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":470305,"byte_end":470308,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ [`add_default_spacer`]: #method.add_default_spacer","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":470313,"byte_end":470367,"line_start":487,"line_end":487,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3095},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":470579,"byte_end":470595,"line_start":494,"line_end":494,"column_start":12,"column_end":28},"name":"with_flex_spacer","qualname":"<Flex<T>>::with_flex_spacer","value":"pub fn with_flex_spacer(Self, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for adding a `flex` spacer to the container.\n","sig":null,"attributes":[{"value":"/ Builder-style method for adding a `flex` spacer to the container.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":470498,"byte_end":470567,"line_start":493,"line_end":493,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3096},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":470814,"byte_end":470838,"line_start":502,"line_end":502,"column_start":12,"column_end":36},"name":"set_cross_axis_alignment","qualname":"<Flex<T>>::set_cross_axis_alignment","value":"pub fn set_cross_axis_alignment(&mut Self, CrossAxisAlignment)","parent":null,"children":[],"decl_id":null,"docs":" Set the childrens' [`CrossAxisAlignment`].","sig":null,"attributes":[{"value":"/ Set the childrens' [`CrossAxisAlignment`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":470687,"byte_end":470733,"line_start":499,"line_end":499,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":470738,"byte_end":470741,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ [`CrossAxisAlignment`]: enum.CrossAxisAlignment.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":470746,"byte_end":470802,"line_start":501,"line_end":501,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3097},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":471060,"byte_end":471083,"line_start":509,"line_end":509,"column_start":12,"column_end":35},"name":"set_main_axis_alignment","qualname":"<Flex<T>>::set_main_axis_alignment","value":"pub fn set_main_axis_alignment(&mut Self, MainAxisAlignment)","parent":null,"children":[],"decl_id":null,"docs":" Set the childrens' [`MainAxisAlignment`].","sig":null,"attributes":[{"value":"/ Set the childrens' [`MainAxisAlignment`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":470936,"byte_end":470981,"line_start":506,"line_end":506,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":470986,"byte_end":470989,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ [`MainAxisAlignment`]: enum.MainAxisAlignment.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":470994,"byte_end":471048,"line_start":508,"line_end":508,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3098},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":471286,"byte_end":471309,"line_start":515,"line_end":515,"column_start":12,"column_end":35},"name":"set_must_fill_main_axis","qualname":"<Flex<T>>::set_must_fill_main_axis","value":"pub fn set_must_fill_main_axis(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Set whether the container must expand to fill the available space on\n its main axis.\n","sig":null,"attributes":[{"value":"/ Set whether the container must expand to fill the available space on","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":471179,"byte_end":471251,"line_start":513,"line_end":513,"column_start":5,"column_end":77}},{"value":"/ its main axis.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":471256,"byte_end":471274,"line_start":514,"line_end":514,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3099},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":471519,"byte_end":471528,"line_start":524,"line_end":524,"column_start":12,"column_end":21},"name":"add_child","qualname":"<Flex<T>>::add_child","value":"pub fn add_child<impl Widget<T> + 'static: Widget<T> +\n'static>(&mut Self, impl Widget<T> + 'static)","parent":null,"children":[],"decl_id":null,"docs":" Add a non-flex child widget.","sig":null,"attributes":[{"value":"/ Add a non-flex child widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":471383,"byte_end":471415,"line_start":519,"line_end":519,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":471420,"byte_end":471423,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ See also [`with_child`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":471428,"byte_end":471456,"line_start":521,"line_end":521,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":471461,"byte_end":471464,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ [`with_child`]: #method.with_child","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":471469,"byte_end":471507,"line_start":523,"line_end":523,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3101},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":472655,"byte_end":472669,"line_start":553,"line_end":553,"column_start":12,"column_end":26},"name":"add_flex_child","qualname":"<Flex<T>>::add_flex_child","value":"pub fn add_flex_child<impl Widget<T> + 'static: Widget<T> + 'static,\nimpl Into<FlexParams>: Into<FlexParams>>(&mut Self, impl Widget<T> + 'static,\nimpl Into<FlexParams>)","parent":null,"children":[],"decl_id":null,"docs":" Add a flexible child widget.","sig":null,"attributes":[{"value":"/ Add a flexible child widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":471627,"byte_end":471659,"line_start":528,"line_end":528,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":471664,"byte_end":471667,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ This method is used when you need more control over the behaviour","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":471672,"byte_end":471741,"line_start":530,"line_end":530,"column_start":5,"column_end":74}},{"value":"/ of the widget you are adding. In the general case, this likely","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":471746,"byte_end":471812,"line_start":531,"line_end":531,"column_start":5,"column_end":71}},{"value":"/ means giving that child a 'flex factor', but it could also mean","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":471817,"byte_end":471884,"line_start":532,"line_end":532,"column_start":5,"column_end":72}},{"value":"/ giving the child a custom [`CrossAxisAlignment`], or a combination","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":471889,"byte_end":471959,"line_start":533,"line_end":533,"column_start":5,"column_end":75}},{"value":"/ of the two.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":471964,"byte_end":471979,"line_start":534,"line_end":534,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":471984,"byte_end":471987,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ This function takes a child widget and [`FlexParams`]; importantly","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":471992,"byte_end":472062,"line_start":536,"line_end":536,"column_start":5,"column_end":75}},{"value":"/ you can pass in a float as your [`FlexParams`] in most cases.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":472067,"byte_end":472132,"line_start":537,"line_end":537,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":472137,"byte_end":472140,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ For the builder-style varient, see [`with_flex_child`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":472145,"byte_end":472204,"line_start":539,"line_end":539,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":472209,"byte_end":472212,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":472217,"byte_end":472231,"line_start":541,"line_end":541,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":472236,"byte_end":472239,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":472244,"byte_end":472251,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/ use druid::widget::{Flex, FlexParams, Label, Slider, CrossAxisAlignment};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":472256,"byte_end":472333,"line_start":544,"line_end":544,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":472338,"byte_end":472341,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ let mut my_row = Flex::row();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":472346,"byte_end":472379,"line_start":546,"line_end":546,"column_start":5,"column_end":38}},{"value":"/ my_row.add_flex_child(Slider::new(), 1.0);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":472384,"byte_end":472430,"line_start":547,"line_end":547,"column_start":5,"column_end":51}},{"value":"/ my_row.add_flex_child(Slider::new(), FlexParams::new(1.0, CrossAxisAlignment::End));","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":472435,"byte_end":472523,"line_start":548,"line_end":548,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":472528,"byte_end":472535,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":472540,"byte_end":472543,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ [`FlexParams`]: struct.FlexParams.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":472548,"byte_end":472590,"line_start":551,"line_end":551,"column_start":5,"column_end":47}},{"value":"/ [`with_flex_child`]: #method.with_flex_child","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":472595,"byte_end":472643,"line_start":552,"line_end":552,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3104},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":473078,"byte_end":473096,"line_start":566,"line_end":566,"column_start":12,"column_end":30},"name":"add_default_spacer","qualname":"<Flex<T>>::add_default_spacer","value":"pub fn add_default_spacer(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Add a spacer widget with a standard size.","sig":null,"attributes":[{"value":"/ Add a spacer widget with a standard size.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":472884,"byte_end":472929,"line_start":562,"line_end":562,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":472934,"byte_end":472937,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ The actual value of this spacer depends on whether this container is","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":472942,"byte_end":473014,"line_start":564,"line_end":564,"column_start":5,"column_end":77}},{"value":"/ a row or column, as well as theme settings.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":473019,"byte_end":473066,"line_start":565,"line_end":565,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3105},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":473617,"byte_end":473627,"line_start":580,"line_end":580,"column_start":12,"column_end":22},"name":"add_spacer","qualname":"<Flex<T>>::add_spacer","value":"pub fn add_spacer<impl Into<KeyOrValue<f64>>: Into<KeyOrValue<f64>>>(&mut Self,\nimpl Into<KeyOrValue<f64>>)","parent":null,"children":[],"decl_id":null,"docs":" Add an empty spacer widget with the given size.","sig":null,"attributes":[{"value":"/ Add an empty spacer widget with the given size.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":473345,"byte_end":473396,"line_start":574,"line_end":574,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":473401,"byte_end":473404,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ If you are laying out standard controls in this container, you should","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":473409,"byte_end":473482,"line_start":576,"line_end":576,"column_start":5,"column_end":78}},{"value":"/ generally prefer to use [`add_default_spacer`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":473487,"byte_end":473538,"line_start":577,"line_end":577,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":473543,"byte_end":473546,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ [`add_default_spacer`]: #method.add_default_spacer","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":473551,"byte_end":473605,"line_start":579,"line_end":579,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3107},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":473904,"byte_end":473919,"line_start":589,"line_end":589,"column_start":12,"column_end":27},"name":"add_flex_spacer","qualname":"<Flex<T>>::add_flex_spacer","value":"pub fn add_flex_spacer(&mut Self, f64)","parent":null,"children":[],"decl_id":null,"docs":" Add an empty spacer widget with a specific `flex` factor.\n","sig":null,"attributes":[{"value":"/ Add an empty spacer widget with a specific `flex` factor.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":473831,"byte_end":473892,"line_start":588,"line_end":588,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":3146},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\identity_wrapper.rs","byte_start":491167,"byte_end":491182,"line_start":21,"line_end":21,"column_start":12,"column_end":27},"name":"IdentityWrapper","qualname":"::widget::identity_wrapper::IdentityWrapper","value":"IdentityWrapper {  }","parent":null,"children":[{"krate":0,"index":3148},{"krate":0,"index":3149}],"decl_id":null,"docs":" A wrapper that adds an identity to an otherwise anonymous widget.\n","sig":null,"attributes":[{"value":"/ A wrapper that adds an identity to an otherwise anonymous widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\identity_wrapper.rs","byte_start":491086,"byte_end":491155,"line_start":20,"line_end":20,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3152},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\identity_wrapper.rs","byte_start":491303,"byte_end":491307,"line_start":28,"line_end":28,"column_start":12,"column_end":16},"name":"wrap","qualname":"<IdentityWrapper<W>>::wrap","value":"pub fn wrap(W, WidgetId) -> IdentityWrapper<W>","parent":null,"children":[],"decl_id":null,"docs":" Assign an identity to a widget.\n","sig":null,"attributes":[{"value":"/ Assign an identity to a widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\identity_wrapper.rs","byte_start":491256,"byte_end":491291,"line_start":27,"line_end":27,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3187},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":494905,"byte_end":494910,"line_start":74,"line_end":74,"column_start":12,"column_end":17},"name":"Image","qualname":"::widget::image::Image","value":"Image {  }","parent":null,"children":[{"krate":0,"index":3188},{"krate":0,"index":3189},{"krate":0,"index":3190},{"krate":0,"index":3191},{"krate":0,"index":3192}],"decl_id":null,"docs":" A widget that renders a bitmap Image.","sig":null,"attributes":[{"value":"/ A widget that renders a bitmap Image.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":493097,"byte_end":493138,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":493139,"byte_end":493142,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Contains data about how to fill the given space and interpolate pixels.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":493143,"byte_end":493218,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ Configuration options are provided via the builder pattern.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":493219,"byte_end":493282,"line_start":29,"line_end":29,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":493283,"byte_end":493286,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Note: when [scaling a bitmap image], such as supporting multiple","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":493287,"byte_end":493355,"line_start":31,"line_end":31,"column_start":1,"column_end":69}},{"value":"/ screen sizes and resolutions, interpolation can lead to blurry","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":493356,"byte_end":493422,"line_start":32,"line_end":32,"column_start":1,"column_end":67}},{"value":"/ or pixelated images and so is not recommended for things like icons.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":493423,"byte_end":493495,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ Instead consider using [SVG files] and enabling the `svg` feature with `cargo`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":493496,"byte_end":493579,"line_start":34,"line_end":34,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":493580,"byte_end":493583,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ (See also: [`ImageBuf`], [`FillStrat`], [`InterpolationMode`])","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":493584,"byte_end":493650,"line_start":36,"line_end":36,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":493651,"byte_end":493654,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":493655,"byte_end":493668,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":493669,"byte_end":493672,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Create an image widget and configure it using builder methods","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":493673,"byte_end":493738,"line_start":40,"line_end":40,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":493739,"byte_end":493746,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use druid::{","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":493747,"byte_end":493763,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/     widget::{Image, FillStrat},","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":493764,"byte_end":493799,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/     piet::{ImageBuf, InterpolationMode},","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":493800,"byte_end":493844,"line_start":44,"line_end":44,"column_start":1,"column_end":45}},{"value":"/ };","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":493845,"byte_end":493851,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":493852,"byte_end":493855,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ let image_data = ImageBuf::empty();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":493856,"byte_end":493895,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/ let image_widget = Image::new(image_data)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":493896,"byte_end":493941,"line_start":48,"line_end":48,"column_start":1,"column_end":46}},{"value":"/     // set the fill strategy","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":493942,"byte_end":493974,"line_start":49,"line_end":49,"column_start":1,"column_end":33}},{"value":"/     .fill_mode(FillStrat::Fill)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":493975,"byte_end":494010,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/     // set the interpolation mode","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":494011,"byte_end":494048,"line_start":51,"line_end":51,"column_start":1,"column_end":38}},{"value":"/     .interpolation_mode(InterpolationMode::Bilinear);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":494049,"byte_end":494106,"line_start":52,"line_end":52,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":494107,"byte_end":494114,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ Create an image widget and configure it using setters","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":494115,"byte_end":494172,"line_start":54,"line_end":54,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":494173,"byte_end":494180,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use druid::{","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":494181,"byte_end":494197,"line_start":56,"line_end":56,"column_start":1,"column_end":17}},{"value":"/     widget::{Image, FillStrat},","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":494198,"byte_end":494233,"line_start":57,"line_end":57,"column_start":1,"column_end":36}},{"value":"/     piet::{ImageBuf, InterpolationMode},","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":494234,"byte_end":494278,"line_start":58,"line_end":58,"column_start":1,"column_end":45}},{"value":"/ };","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":494279,"byte_end":494285,"line_start":59,"line_end":59,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":494286,"byte_end":494289,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ let image_data = ImageBuf::empty();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":494290,"byte_end":494329,"line_start":61,"line_end":61,"column_start":1,"column_end":40}},{"value":"/ let mut image_widget = Image::new(image_data);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":494330,"byte_end":494380,"line_start":62,"line_end":62,"column_start":1,"column_end":51}},{"value":"/ // set the fill strategy","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":494381,"byte_end":494409,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/ image_widget.set_fill_mode(FillStrat::FitWidth);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":494410,"byte_end":494462,"line_start":64,"line_end":64,"column_start":1,"column_end":53}},{"value":"/ // set the interpolation mode","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":494463,"byte_end":494496,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/ image_widget.set_interpolation_mode(InterpolationMode::Bilinear);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":494497,"byte_end":494566,"line_start":66,"line_end":66,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":494567,"byte_end":494574,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":494575,"byte_end":494578,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [scaling a bitmap image]: ../struct.Scale.html#pixels-and-display-points","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":494579,"byte_end":494655,"line_start":69,"line_end":69,"column_start":1,"column_end":77}},{"value":"/ [SVG files]: https://en.wikipedia.org/wiki/Scalable_Vector_Graphics","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":494656,"byte_end":494727,"line_start":70,"line_end":70,"column_start":1,"column_end":72}},{"value":"/ [`ImageBuf`]: ../druid_shell/struct.ImageBuf.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":494728,"byte_end":494781,"line_start":71,"line_end":71,"column_start":1,"column_end":54}},{"value":"/ [`FillStrat`]: ../widget/enum.FillStrat.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":494782,"byte_end":494830,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/ [`InterpolationMode`]: ../piet/enum.InterpolationMode.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":494831,"byte_end":494893,"line_start":73,"line_end":73,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3194},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":495580,"byte_end":495583,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"new","qualname":"<Image>::new","value":"pub fn new(ImageBuf) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an image drawing widget from an image buffer.","sig":null,"attributes":[{"value":"/ Create an image drawing widget from an image buffer.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":495082,"byte_end":495138,"line_start":83,"line_end":83,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":495143,"byte_end":495146,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ By default, the Image will scale to fit its box constraints ([`FillStrat::Fill`])","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":495151,"byte_end":495236,"line_start":85,"line_end":85,"column_start":5,"column_end":90}},{"value":"/ and will be scaled bilinearly ([`InterpolationMode::Bilinear`])","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":495241,"byte_end":495308,"line_start":86,"line_end":86,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":495313,"byte_end":495316,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ The underlying `ImageBuf` uses `Arc` for buffer data, making it cheap to clone.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":495321,"byte_end":495404,"line_start":88,"line_end":88,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":495409,"byte_end":495412,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ [`FillStrat::Fill`]: crate::widget::FillStrat::Fill","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":495417,"byte_end":495472,"line_start":90,"line_end":90,"column_start":5,"column_end":60}},{"value":"/ [`InterpolationMode::Bilinear`]: crate::piet::InterpolationMode::Bilinear","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":495477,"byte_end":495554,"line_start":91,"line_end":91,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":495559,"byte_end":495568,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3195},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":495918,"byte_end":495927,"line_start":105,"line_end":105,"column_start":12,"column_end":21},"name":"fill_mode","qualname":"<Image>::fill_mode","value":"pub fn fill_mode(Self, FillStrat) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A builder-style method for specifying the fill strategy.\n","sig":null,"attributes":[{"value":"/ A builder-style method for specifying the fill strategy.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":495832,"byte_end":495892,"line_start":103,"line_end":103,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":495897,"byte_end":495906,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3196},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":496117,"byte_end":496130,"line_start":113,"line_end":113,"column_start":12,"column_end":25},"name":"set_fill_mode","qualname":"<Image>::set_fill_mode","value":"pub fn set_fill_mode(&mut Self, FillStrat)","parent":null,"children":[],"decl_id":null,"docs":" Modify the widget's fill strategy.\n","sig":null,"attributes":[{"value":"/ Modify the widget's fill strategy.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":496053,"byte_end":496091,"line_start":111,"line_end":111,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":496096,"byte_end":496105,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3197},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":496335,"byte_end":496353,"line_start":120,"line_end":120,"column_start":12,"column_end":30},"name":"interpolation_mode","qualname":"<Image>::interpolation_mode","value":"pub fn interpolation_mode(Self, InterpolationMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A builder-style method for specifying the interpolation strategy.\n","sig":null,"attributes":[{"value":"/ A builder-style method for specifying the interpolation strategy.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":496240,"byte_end":496309,"line_start":118,"line_end":118,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":496314,"byte_end":496323,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3198},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":496583,"byte_end":496605,"line_start":128,"line_end":128,"column_start":12,"column_end":34},"name":"set_interpolation_mode","qualname":"<Image>::set_interpolation_mode","value":"pub fn set_interpolation_mode(&mut Self, InterpolationMode)","parent":null,"children":[],"decl_id":null,"docs":" Modify the widget's interpolation mode.\n","sig":null,"attributes":[{"value":"/ Modify the widget's interpolation mode.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":496514,"byte_end":496557,"line_start":126,"line_end":126,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":496562,"byte_end":496571,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3199},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":496892,"byte_end":496901,"line_start":137,"line_end":137,"column_start":12,"column_end":21},"name":"clip_area","qualname":"<Image>::clip_area","value":"pub fn clip_area(Self, Option<Rect>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the area of the image that will be displayed.","sig":null,"attributes":[{"value":"/ Set the area of the image that will be displayed.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":496746,"byte_end":496799,"line_start":133,"line_end":133,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":496804,"byte_end":496807,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If `None`, then the whole image will be displayed.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":496812,"byte_end":496866,"line_start":135,"line_end":135,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":496871,"byte_end":496880,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3200},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":497191,"byte_end":497204,"line_start":147,"line_end":147,"column_start":12,"column_end":25},"name":"set_clip_area","qualname":"<Image>::set_clip_area","value":"pub fn set_clip_area(&mut Self, Option<Rect>)","parent":null,"children":[],"decl_id":null,"docs":" Set the area of the image that will be displayed.","sig":null,"attributes":[{"value":"/ Set the area of the image that will be displayed.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":497045,"byte_end":497098,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":497103,"byte_end":497106,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ If `None`, then the whole image will be displayed.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":497111,"byte_end":497165,"line_start":145,"line_end":145,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":497170,"byte_end":497179,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3201},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":497377,"byte_end":497391,"line_start":154,"line_end":154,"column_start":12,"column_end":26},"name":"set_image_data","qualname":"<Image>::set_image_data","value":"pub fn set_image_data(&mut Self, ImageBuf)","parent":null,"children":[],"decl_id":null,"docs":" Set new `ImageBuf`.\n","sig":null,"attributes":[{"value":"/ Set new `ImageBuf`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":497328,"byte_end":497351,"line_start":152,"line_end":152,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":497356,"byte_end":497365,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3218},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\invalidation.rs","byte_start":509769,"byte_end":509786,"line_start":20,"line_end":20,"column_start":12,"column_end":29},"name":"DebugInvalidation","qualname":"::widget::invalidation::DebugInvalidation","value":"DebugInvalidation {  }","parent":null,"children":[{"krate":0,"index":3221},{"krate":0,"index":3222},{"krate":0,"index":3223}],"decl_id":null,"docs":" A widget that draws semi-transparent rectangles of changing colors to help debug invalidation\n regions.\n","sig":null,"attributes":[{"value":"/ A widget that draws semi-transparent rectangles of changing colors to help debug invalidation","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\invalidation.rs","byte_start":509647,"byte_end":509744,"line_start":18,"line_end":18,"column_start":1,"column_end":98}},{"value":"/ regions.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\invalidation.rs","byte_start":509745,"byte_end":509757,"line_start":19,"line_end":19,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":3227},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\invalidation.rs","byte_start":509989,"byte_end":509992,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugInvalidation<T, W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps a widget in a `DebugInvalidation`.\n","sig":null,"attributes":[{"value":"/ Wraps a widget in a `DebugInvalidation`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\invalidation.rs","byte_start":509933,"byte_end":509977,"line_start":27,"line_end":27,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3278},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":514093,"byte_end":514098,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"Label","qualname":"::widget::label::Label","value":"Label {  }","parent":null,"children":[{"krate":0,"index":3280},{"krate":0,"index":3281},{"krate":0,"index":3282},{"krate":0,"index":3283}],"decl_id":null,"docs":" A label that displays static or dynamic text.","sig":null,"attributes":[{"value":"/ A label that displays static or dynamic text.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":512245,"byte_end":512294,"line_start":29,"line_end":29,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":512295,"byte_end":512298,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This type manages an inner [`RawLabel`], updating its text based on the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":512299,"byte_end":512374,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ current [`Data`] and [`Env`] as required.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":512375,"byte_end":512420,"line_start":32,"line_end":32,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":512421,"byte_end":512424,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ If your [`Data`] is *already* text, you may use a [`RawLabel`] directly.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":512425,"byte_end":512501,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ As a convenience, you can create a [`RawLabel`] with the [`Label::raw`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":512502,"byte_end":512577,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/ constructor method.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":512578,"byte_end":512601,"line_start":36,"line_end":36,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":512602,"byte_end":512605,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ A label is the easiest way to display text in Druid. A label is instantiated","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":512606,"byte_end":512686,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ with some [`LabelText`] type, such as an [`ArcStr`] or a [`LocalizedString`],","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":512687,"byte_end":512768,"line_start":39,"line_end":39,"column_start":1,"column_end":82}},{"value":"/ and also has methods for setting the default font, font-size, text color,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":512769,"byte_end":512846,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ and other attributes.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":512847,"byte_end":512872,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":512873,"byte_end":512876,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ In addition to being a [`Widget`], `Label` is also regularly used as a","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":512877,"byte_end":512951,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ component in other widgets that wish to display text; to facilitate this","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":512952,"byte_end":513028,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ it has a [`draw_at`] method that allows the caller to easily draw the label's","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513029,"byte_end":513110,"line_start":45,"line_end":45,"column_start":1,"column_end":82}},{"value":"/ text at the desired position on screen.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513111,"byte_end":513154,"line_start":46,"line_end":46,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513155,"byte_end":513158,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513159,"byte_end":513173,"line_start":48,"line_end":48,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513174,"byte_end":513177,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Make a label to say something **very** important:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513178,"byte_end":513231,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513232,"byte_end":513235,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513236,"byte_end":513243,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ # use druid::widget::{Label, SizedBox};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513244,"byte_end":513287,"line_start":53,"line_end":53,"column_start":1,"column_end":44}},{"value":"/ # use druid::*;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513288,"byte_end":513307,"line_start":54,"line_end":54,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513308,"byte_end":513311,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ let font = FontDescriptor::new(FontFamily::SYSTEM_UI)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513312,"byte_end":513369,"line_start":56,"line_end":56,"column_start":1,"column_end":58}},{"value":"/     .with_weight(FontWeight::BOLD)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513370,"byte_end":513408,"line_start":57,"line_end":57,"column_start":1,"column_end":39}},{"value":"/     .with_size(48.0);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513409,"byte_end":513434,"line_start":58,"line_end":58,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513435,"byte_end":513438,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let important_label = Label::new(\"WATCH OUT!\")","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513439,"byte_end":513489,"line_start":60,"line_end":60,"column_start":1,"column_end":51}},{"value":"/     .with_font(font)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513490,"byte_end":513514,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/     .with_text_color(Color::rgb(1.0, 0.2, 0.2));","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513515,"byte_end":513567,"line_start":62,"line_end":62,"column_start":1,"column_end":53}},{"value":"/ # // our data type T isn't known; this is just a trick for the compiler","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513568,"byte_end":513643,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/ # // to keep our example clean","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513644,"byte_end":513678,"line_start":64,"line_end":64,"column_start":1,"column_end":35}},{"value":"/ # let _ = SizedBox::<()>::new(important_label);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513679,"byte_end":513730,"line_start":65,"line_end":65,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513731,"byte_end":513738,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513739,"byte_end":513742,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`ArcStr`]: ../type.ArcStr.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513743,"byte_end":513778,"line_start":68,"line_end":68,"column_start":1,"column_end":36}},{"value":"/ [`Data`]: ../trait.Data.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513779,"byte_end":513811,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/ [`Env`]: ../struct.Env.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513812,"byte_end":513843,"line_start":70,"line_end":70,"column_start":1,"column_end":32}},{"value":"/ [`RawLabel`]: struct.RawLabel.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513844,"byte_end":513882,"line_start":71,"line_end":71,"column_start":1,"column_end":39}},{"value":"/ [`Label::raw`]: #method.raw","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513883,"byte_end":513914,"line_start":72,"line_end":72,"column_start":1,"column_end":32}},{"value":"/ [`LabelText`]: struct.LabelText.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513915,"byte_end":513955,"line_start":73,"line_end":73,"column_start":1,"column_end":41}},{"value":"/ [`LocalizedString`]: ../struct.LocalizedString.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":513956,"byte_end":514011,"line_start":74,"line_end":74,"column_start":1,"column_end":56}},{"value":"/ [`draw_at`]: #method.draw_at","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":514012,"byte_end":514044,"line_start":75,"line_end":75,"column_start":1,"column_end":33}},{"value":"/ [`Widget`]: ../trait.Widget.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":514045,"byte_end":514081,"line_start":76,"line_end":76,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3284},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":514564,"byte_end":514572,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"RawLabel","qualname":"::widget::label::RawLabel","value":"RawLabel {  }","parent":null,"children":[{"krate":0,"index":3286},{"krate":0,"index":3287}],"decl_id":null,"docs":" A widget that displays text data.","sig":null,"attributes":[{"value":"/ A widget that displays text data.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":514364,"byte_end":514401,"line_start":86,"line_end":86,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":514402,"byte_end":514405,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ This requires the `Data` to be `ArcStr`; to handle static, dynamic, or","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":514406,"byte_end":514480,"line_start":88,"line_end":88,"column_start":1,"column_end":75}},{"value":"/ localized text, use [`Label`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":514481,"byte_end":514515,"line_start":89,"line_end":89,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":514516,"byte_end":514519,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ [`Label`]: struct.Label.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":514520,"byte_end":514552,"line_start":91,"line_end":91,"column_start":1,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7156},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":514827,"byte_end":514835,"line_start":101,"line_end":101,"column_start":5,"column_end":13},"name":"WordWrap","qualname":"::widget::label::LineBreaking::WordWrap","value":"LineBreaking::WordWrap","parent":{"krate":0,"index":7155},"children":[],"decl_id":null,"docs":" Lines are broken at word boundaries.\n","sig":null,"attributes":[{"value":"/ Lines are broken at word boundaries.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":514782,"byte_end":514822,"line_start":100,"line_end":100,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7158},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":514896,"byte_end":514900,"line_start":103,"line_end":103,"column_start":5,"column_end":9},"name":"Clip","qualname":"::widget::label::LineBreaking::Clip","value":"LineBreaking::Clip","parent":{"krate":0,"index":7155},"children":[],"decl_id":null,"docs":" Lines are truncated to the width of the label.\n","sig":null,"attributes":[{"value":"/ Lines are truncated to the width of the label.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":514841,"byte_end":514891,"line_start":102,"line_end":102,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7160},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":514940,"byte_end":514948,"line_start":105,"line_end":105,"column_start":5,"column_end":13},"name":"Overflow","qualname":"::widget::label::LineBreaking::Overflow","value":"LineBreaking::Overflow","parent":{"krate":0,"index":7155},"children":[],"decl_id":null,"docs":" Lines overflow the label.\n","sig":null,"attributes":[{"value":"/ Lines overflow the label.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":514906,"byte_end":514935,"line_start":104,"line_end":104,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":7155},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":514763,"byte_end":514775,"line_start":99,"line_end":99,"column_start":10,"column_end":22},"name":"LineBreaking","qualname":"::widget::label::LineBreaking","value":"pub enum LineBreaking { WordWrap, Clip, Overflow, }","parent":null,"children":[{"krate":0,"index":7156},{"krate":0,"index":7158},{"krate":0,"index":7160}],"decl_id":null,"docs":" Options for handling lines that are too wide for the label.\n","sig":null,"attributes":[{"value":"/ Options for handling lines that are too wide for the label.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":514643,"byte_end":514706,"line_start":97,"line_end":97,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3290},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":515406,"byte_end":515415,"line_start":119,"line_end":119,"column_start":5,"column_end":14},"name":"Localized","qualname":"::widget::label::LabelText::Localized","value":"LabelText::Localized(LocalizedString<T>)","parent":{"krate":0,"index":3288},"children":[],"decl_id":null,"docs":" Localized string that will be resolved through `Env`.\n","sig":null,"attributes":[{"value":"/ Localized string that will be resolved through `Env`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":515344,"byte_end":515401,"line_start":118,"line_end":118,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3293},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":515462,"byte_end":515468,"line_start":121,"line_end":121,"column_start":5,"column_end":11},"name":"Static","qualname":"::widget::label::LabelText::Static","value":"LabelText::Static(Static)","parent":{"krate":0,"index":3288},"children":[],"decl_id":null,"docs":" Static text.\n","sig":null,"attributes":[{"value":"/ Static text.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":515441,"byte_end":515457,"line_start":120,"line_end":120,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3296},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":515596,"byte_end":515603,"line_start":124,"line_end":124,"column_start":5,"column_end":12},"name":"Dynamic","qualname":"::widget::label::LabelText::Dynamic","value":"LabelText::Dynamic(Dynamic<T>)","parent":{"krate":0,"index":3288},"children":[],"decl_id":null,"docs":" The provided closure is called on update, and its return\n value is used as the text for the label.\n","sig":null,"attributes":[{"value":"/ The provided closure is called on update, and its return","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":515482,"byte_end":515542,"line_start":122,"line_end":122,"column_start":5,"column_end":65}},{"value":"/ value is used as the text for the label.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":515547,"byte_end":515591,"line_start":123,"line_end":123,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":3288},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":515325,"byte_end":515334,"line_start":117,"line_end":117,"column_start":10,"column_end":19},"name":"LabelText","qualname":"::widget::label::LabelText","value":"pub enum LabelText<T> {\n    Localized(LocalizedString<T>),\n    Static(Static),\n    Dynamic(Dynamic<T>),\n}","parent":null,"children":[{"krate":0,"index":3290},{"krate":0,"index":3293},{"krate":0,"index":3296}],"decl_id":null,"docs":" The text for a [`Label`].","sig":null,"attributes":[{"value":"/ The text for a [`Label`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":514953,"byte_end":514982,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":514983,"byte_end":514986,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ This can be one of three things; either an [`ArcStr`], a [`LocalizedString`],","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":514987,"byte_end":515068,"line_start":110,"line_end":110,"column_start":1,"column_end":82}},{"value":"/ or a closure with the signature, `Fn(&T, &Env) -> String`, where `T` is","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":515069,"byte_end":515144,"line_start":111,"line_end":111,"column_start":1,"column_end":76}},{"value":"/ the `Data` at this point in the tree.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":515145,"byte_end":515186,"line_start":112,"line_end":112,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":515187,"byte_end":515190,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`ArcStr`]: ../type.ArcStr.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":515191,"byte_end":515226,"line_start":114,"line_end":114,"column_start":1,"column_end":36}},{"value":"/ [`LocalizedString`]: ../struct.LocalizedString.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":515227,"byte_end":515282,"line_start":115,"line_end":115,"column_start":1,"column_end":56}},{"value":"/ [`Label`]: struct.Label.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":515283,"byte_end":515315,"line_start":116,"line_end":116,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":3299},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":515670,"byte_end":515677,"line_start":128,"line_end":128,"column_start":12,"column_end":19},"name":"Dynamic","qualname":"::widget::label::Dynamic","value":"Dynamic {  }","parent":null,"children":[{"krate":0,"index":3301},{"krate":0,"index":3302}],"decl_id":null,"docs":" Text that is computed dynamically.\n","sig":null,"attributes":[{"value":"/ Text that is computed dynamically.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":515620,"byte_end":515658,"line_start":127,"line_end":127,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3303},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":515776,"byte_end":515782,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"name":"Static","qualname":"::widget::label::Static","value":"Static {  }","parent":null,"children":[{"krate":0,"index":3304},{"krate":0,"index":3305}],"decl_id":null,"docs":" Static text.\n","sig":null,"attributes":[{"value":"/ Static text.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":515748,"byte_end":515764,"line_start":133,"line_end":133,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3308},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":516188,"byte_end":516191,"line_start":147,"line_end":147,"column_start":12,"column_end":15},"name":"new","qualname":"<RawLabel<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `RawLabel`.\n","sig":null,"attributes":[{"value":"/ Create a new `RawLabel`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":516148,"byte_end":516176,"line_start":146,"line_end":146,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3309},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":516521,"byte_end":516536,"line_start":159,"line_end":159,"column_start":12,"column_end":27},"name":"with_text_color","qualname":"<RawLabel<T>>::with_text_color","value":"pub fn with_text_color<impl Into<KeyOrValue<Color>>: Into<KeyOrValue<Color>>>(Self,\nimpl Into<KeyOrValue<Color>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for setting the text color.","sig":null,"attributes":[{"value":"/ Builder-style method for setting the text color.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":516332,"byte_end":516384,"line_start":154,"line_end":154,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":516389,"byte_end":516392,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The argument can be either a `Color` or a [`Key<Color>`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":516397,"byte_end":516458,"line_start":156,"line_end":156,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":516463,"byte_end":516466,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ [`Key<Color>`]: ../struct.Key.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":516471,"byte_end":516509,"line_start":158,"line_end":158,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3311},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":516837,"byte_end":516851,"line_start":169,"line_end":169,"column_start":12,"column_end":26},"name":"with_text_size","qualname":"<RawLabel<T>>::with_text_size","value":"pub fn with_text_size<impl Into<KeyOrValue<f64>>: Into<KeyOrValue<f64>>>(Self,\nimpl Into<KeyOrValue<f64>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for setting the text size.","sig":null,"attributes":[{"value":"/ Builder-style method for setting the text size.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":516654,"byte_end":516705,"line_start":164,"line_end":164,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":516710,"byte_end":516713,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ The argument can be either an `f64` or a [`Key<f64>`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":516718,"byte_end":516776,"line_start":166,"line_end":166,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":516781,"byte_end":516784,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ [`Key<f64>`]: ../struct.Key.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":516789,"byte_end":516825,"line_start":168,"line_end":168,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3313},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":517316,"byte_end":517325,"line_start":182,"line_end":182,"column_start":12,"column_end":21},"name":"with_font","qualname":"<RawLabel<T>>::with_font","value":"pub fn with_font<impl Into<KeyOrValue<FontDescriptor>>: Into<KeyOrValue<FontDescriptor>>>(Self,\nimpl Into<KeyOrValue<FontDescriptor>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for setting the font.","sig":null,"attributes":[{"value":"/ Builder-style method for setting the font.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":516964,"byte_end":517010,"line_start":174,"line_end":174,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":517015,"byte_end":517018,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ The argument can be a [`FontDescriptor`] or a [`Key<FontDescriptor>`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":517023,"byte_end":517096,"line_start":176,"line_end":176,"column_start":5,"column_end":78}},{"value":"/ that refers to a font defined in the [`Env`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":517101,"byte_end":517150,"line_start":177,"line_end":177,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":517155,"byte_end":517158,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ [`Env`]: ../struct.Env.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":517163,"byte_end":517194,"line_start":179,"line_end":179,"column_start":5,"column_end":36}},{"value":"/ [`FontDescriptor`]: ../struct.FontDescriptor.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":517199,"byte_end":517252,"line_start":180,"line_end":180,"column_start":5,"column_end":58}},{"value":"/ [`Key<FontDescriptor>`]: ../struct.Key.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":517257,"byte_end":517304,"line_start":181,"line_end":181,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3315},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":517576,"byte_end":517596,"line_start":190,"line_end":190,"column_start":12,"column_end":32},"name":"with_line_break_mode","qualname":"<RawLabel<T>>::with_line_break_mode","value":"pub fn with_line_break_mode(Self, LineBreaking) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to set the [`LineBreaking`] behaviour.","sig":null,"attributes":[{"value":"/ Builder-style method to set the [`LineBreaking`] behaviour.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":517444,"byte_end":517507,"line_start":187,"line_end":187,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":517512,"byte_end":517515,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ [`LineBreaking`]: enum.LineBreaking.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":517520,"byte_end":517564,"line_start":189,"line_end":189,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3316},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":517826,"byte_end":517845,"line_start":198,"line_end":198,"column_start":12,"column_end":31},"name":"with_text_alignment","qualname":"<RawLabel<T>>::with_text_alignment","value":"pub fn with_text_alignment(Self, TextAlignment) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to set the [`TextAlignment`].","sig":null,"attributes":[{"value":"/ Builder-style method to set the [`TextAlignment`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":517701,"byte_end":517755,"line_start":195,"line_end":195,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":517760,"byte_end":517763,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ [`TextAlignment`]: enum.TextAlignment.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":517768,"byte_end":517814,"line_start":197,"line_end":197,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3317},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":518330,"byte_end":518344,"line_start":212,"line_end":212,"column_start":12,"column_end":26},"name":"set_text_color","qualname":"<RawLabel<T>>::set_text_color","value":"pub fn set_text_color<impl Into<KeyOrValue<Color>>: Into<KeyOrValue<Color>>>(&mut Self,\nimpl Into<KeyOrValue<Color>>)","parent":null,"children":[],"decl_id":null,"docs":" Set the text color.","sig":null,"attributes":[{"value":"/ Set the text color.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":517960,"byte_end":517983,"line_start":203,"line_end":203,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":517988,"byte_end":517991,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ The argument can be either a `Color` or a [`Key<Color>`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":517996,"byte_end":518057,"line_start":205,"line_end":205,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":518062,"byte_end":518065,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ If you change this property, you are responsible for calling","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":518070,"byte_end":518134,"line_start":207,"line_end":207,"column_start":5,"column_end":69}},{"value":"/ [`request_layout`] to ensure the label is updated.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":518139,"byte_end":518193,"line_start":208,"line_end":208,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":518198,"byte_end":518201,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ [`request_layout`]: ../struct.EventCtx.html#method.request_layout","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":518206,"byte_end":518275,"line_start":210,"line_end":210,"column_start":5,"column_end":74}},{"value":"/ [`Key<Color>`]: ../struct.Key.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":518280,"byte_end":518318,"line_start":211,"line_end":211,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3319},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":518813,"byte_end":518826,"line_start":225,"line_end":225,"column_start":12,"column_end":25},"name":"set_text_size","qualname":"<RawLabel<T>>::set_text_size","value":"pub fn set_text_size<impl Into<KeyOrValue<f64>>: Into<KeyOrValue<f64>>>(&mut Self,\nimpl Into<KeyOrValue<f64>>)","parent":null,"children":[],"decl_id":null,"docs":" Set the text size.","sig":null,"attributes":[{"value":"/ Set the text size.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":518449,"byte_end":518471,"line_start":216,"line_end":216,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":518476,"byte_end":518479,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ The argument can be either an `f64` or a [`Key<f64>`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":518484,"byte_end":518542,"line_start":218,"line_end":218,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":518547,"byte_end":518550,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ If you change this property, you are responsible for calling","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":518555,"byte_end":518619,"line_start":220,"line_end":220,"column_start":5,"column_end":69}},{"value":"/ [`request_layout`] to ensure the label is updated.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":518624,"byte_end":518678,"line_start":221,"line_end":221,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":518683,"byte_end":518686,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ [`request_layout`]: ../struct.EventCtx.html#method.request_layout","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":518691,"byte_end":518760,"line_start":223,"line_end":223,"column_start":5,"column_end":74}},{"value":"/ [`Key<f64>`]: ../struct.Key.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":518765,"byte_end":518801,"line_start":224,"line_end":224,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3321},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":519459,"byte_end":519467,"line_start":241,"line_end":241,"column_start":12,"column_end":20},"name":"set_font","qualname":"<RawLabel<T>>::set_font","value":"pub fn set_font<impl Into<KeyOrValue<FontDescriptor>>: Into<KeyOrValue<FontDescriptor>>>(&mut Self,\nimpl Into<KeyOrValue<FontDescriptor>>)","parent":null,"children":[],"decl_id":null,"docs":" Set the font.","sig":null,"attributes":[{"value":"/ Set the font.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":518926,"byte_end":518943,"line_start":229,"line_end":229,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":518948,"byte_end":518951,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The argument can be a [`FontDescriptor`] or a [`Key<FontDescriptor>`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":518956,"byte_end":519029,"line_start":231,"line_end":231,"column_start":5,"column_end":78}},{"value":"/ that refers to a font defined in the [`Env`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":519034,"byte_end":519083,"line_start":232,"line_end":232,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":519088,"byte_end":519091,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ If you change this property, you are responsible for calling","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":519096,"byte_end":519160,"line_start":234,"line_end":234,"column_start":5,"column_end":69}},{"value":"/ [`request_layout`] to ensure the label is updated.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":519165,"byte_end":519219,"line_start":235,"line_end":235,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":519224,"byte_end":519227,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ [`request_layout`]: ../struct.EventCtx.html#method.request_layout","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":519232,"byte_end":519301,"line_start":237,"line_end":237,"column_start":5,"column_end":74}},{"value":"/ [`Env`]: ../struct.Env.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":519306,"byte_end":519337,"line_start":238,"line_end":238,"column_start":5,"column_end":36}},{"value":"/ [`FontDescriptor`]: ../struct.FontDescriptor.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":519342,"byte_end":519395,"line_start":239,"line_end":239,"column_start":5,"column_end":58}},{"value":"/ [`Key<FontDescriptor>`]: ../struct.Key.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":519400,"byte_end":519447,"line_start":240,"line_end":240,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3323},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":519891,"byte_end":519910,"line_start":252,"line_end":252,"column_start":12,"column_end":31},"name":"set_line_break_mode","qualname":"<RawLabel<T>>::set_line_break_mode","value":"pub fn set_line_break_mode(&mut Self, LineBreaking)","parent":null,"children":[],"decl_id":null,"docs":" Set the [`LineBreaking`] behaviour.","sig":null,"attributes":[{"value":"/ Set the [`LineBreaking`] behaviour.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":519573,"byte_end":519612,"line_start":245,"line_end":245,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":519617,"byte_end":519620,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ If you change this property, you are responsible for calling","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":519625,"byte_end":519689,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/ [`request_layout`] to ensure the label is updated.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":519694,"byte_end":519748,"line_start":248,"line_end":248,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":519753,"byte_end":519756,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ [`request_layout`]: ../struct.EventCtx.html#method.request_layout","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":519761,"byte_end":519830,"line_start":250,"line_end":250,"column_start":5,"column_end":74}},{"value":"/ [`LineBreaking`]: enum.LineBreaking.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":519835,"byte_end":519879,"line_start":251,"line_end":251,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3324},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":520109,"byte_end":520127,"line_start":259,"line_end":259,"column_start":12,"column_end":30},"name":"set_text_alignment","qualname":"<RawLabel<T>>::set_text_alignment","value":"pub fn set_text_alignment(&mut Self, TextAlignment)","parent":null,"children":[],"decl_id":null,"docs":" Set the [`TextAlignment`] for this layout.","sig":null,"attributes":[{"value":"/ Set the [`TextAlignment`] for this layout.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":519992,"byte_end":520038,"line_start":256,"line_end":256,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":520043,"byte_end":520046,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ [`TextAlignment`]: enum.TextAlignment.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":520051,"byte_end":520097,"line_start":258,"line_end":258,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3325},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":520512,"byte_end":520519,"line_start":268,"line_end":268,"column_start":12,"column_end":19},"name":"draw_at","qualname":"<RawLabel<T>>::draw_at","value":"pub fn draw_at<impl Into<Point>: Into<Point>>(&Self, &mut PaintCtx,\nimpl Into<Point>)","parent":null,"children":[],"decl_id":null,"docs":" Draw this label's text at the provided `Point`, without internal padding.","sig":null,"attributes":[{"value":"/ Draw this label's text at the provided `Point`, without internal padding.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":520229,"byte_end":520306,"line_start":263,"line_end":263,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":520311,"byte_end":520314,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This is a convenience for widgets that want to use Label as a way","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":520319,"byte_end":520388,"line_start":265,"line_end":265,"column_start":5,"column_end":74}},{"value":"/ of managing a dynamic or localized string, but want finer control","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":520393,"byte_end":520462,"line_start":266,"line_end":266,"column_start":5,"column_end":74}},{"value":"/ over where the text is drawn.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":520467,"byte_end":520500,"line_start":267,"line_end":267,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3327},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":520717,"byte_end":520732,"line_start":273,"line_end":273,"column_start":12,"column_end":27},"name":"baseline_offset","qualname":"<RawLabel<T>>::baseline_offset","value":"pub fn baseline_offset(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Return the offset of the first baseline relative to the bottom of the widget.\n","sig":null,"attributes":[{"value":"/ Return the offset of the first baseline relative to the bottom of the widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":520624,"byte_end":520705,"line_start":272,"line_end":272,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":3330},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":521011,"byte_end":521014,"line_start":283,"line_end":283,"column_start":12,"column_end":15},"name":"raw","qualname":"<Label<T>>::raw","value":"pub fn raw() -> RawLabel<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`RawLabel`].","sig":null,"attributes":[{"value":"/ Create a new [`RawLabel`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":520914,"byte_end":520944,"line_start":280,"line_end":280,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":520949,"byte_end":520952,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ This can display text `Data` directly.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":520957,"byte_end":520999,"line_start":282,"line_end":282,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3333},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":521771,"byte_end":521774,"line_start":305,"line_end":305,"column_start":12,"column_end":15},"name":"new","qualname":"<Label<T>>::new","value":"pub fn new<impl Into<LabelText<T>>: Into<LabelText<T>>>(impl Into<LabelText<T>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Label` widget.","sig":null,"attributes":[{"value":"/ Construct a new `Label` widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":521096,"byte_end":521131,"line_start":289,"line_end":289,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":521136,"byte_end":521139,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":521144,"byte_end":521151,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/ use druid::LocalizedString;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":521156,"byte_end":521187,"line_start":292,"line_end":292,"column_start":5,"column_end":36}},{"value":"/ use druid::widget::Label;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":521192,"byte_end":521221,"line_start":293,"line_end":293,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":521226,"byte_end":521229,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ // Construct a new Label using static string.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":521234,"byte_end":521283,"line_start":295,"line_end":295,"column_start":5,"column_end":54}},{"value":"/ let _: Label<u32> = Label::new(\"Hello world\");","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":521288,"byte_end":521338,"line_start":296,"line_end":296,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":521343,"byte_end":521346,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ // Construct a new Label using localized string.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":521351,"byte_end":521403,"line_start":298,"line_end":298,"column_start":5,"column_end":57}},{"value":"/ let text = LocalizedString::new(\"hello-counter\").with_arg(\"count\", |data: &u32, _env| (*data).into());","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":521408,"byte_end":521514,"line_start":299,"line_end":299,"column_start":5,"column_end":111}},{"value":"/ let _: Label<u32> = Label::new(text);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":521519,"byte_end":521560,"line_start":300,"line_end":300,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":521565,"byte_end":521568,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ // Construct a new dynamic Label. Text will be updated when data changes.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":521573,"byte_end":521650,"line_start":302,"line_end":302,"column_start":5,"column_end":82}},{"value":"/ let _: Label<u32> = Label::new(|data: &u32, _env: &_| format!(\"Hello world: {}\", data));","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":521655,"byte_end":521747,"line_start":303,"line_end":303,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":521752,"byte_end":521759,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3335},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":522825,"byte_end":522832,"line_start":336,"line_end":336,"column_start":12,"column_end":19},"name":"dynamic","qualname":"<Label<T>>::dynamic","value":"pub fn dynamic<impl Fn(&T, &Env) -> String + 'static: Fn(&T, &Env) -> String +\n'static>(impl Fn(&T, &Env) -> String + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new dynamic label.","sig":null,"attributes":[{"value":"/ Construct a new dynamic label.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":522054,"byte_end":522088,"line_start":316,"line_end":316,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":522093,"byte_end":522096,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ The contents of this label are generated from the data using a closure.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":522101,"byte_end":522176,"line_start":318,"line_end":318,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":522181,"byte_end":522184,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ This is provided as a convenience; a closure can also be passed to [`new`],","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":522189,"byte_end":522268,"line_start":320,"line_end":320,"column_start":5,"column_end":84}},{"value":"/ but due to limitations of the implementation of that method, the types in","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":522273,"byte_end":522350,"line_start":321,"line_end":321,"column_start":5,"column_end":82}},{"value":"/ the closure need to be annotated, which is not true for this method.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":522355,"byte_end":522427,"line_start":322,"line_end":322,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":522432,"byte_end":522435,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":522440,"byte_end":522454,"line_start":324,"line_end":324,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":522459,"byte_end":522462,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ The following are equivalent.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":522467,"byte_end":522500,"line_start":326,"line_end":326,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":522505,"byte_end":522508,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":522513,"byte_end":522520,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use druid::Env;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":522525,"byte_end":522544,"line_start":329,"line_end":329,"column_start":5,"column_end":24}},{"value":"/ use druid::widget::Label;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":522549,"byte_end":522578,"line_start":330,"line_end":330,"column_start":5,"column_end":34}},{"value":"/ let label1: Label<u32> = Label::new(|data: &u32, _: &Env| format!(\"total is {}\", data));","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":522583,"byte_end":522675,"line_start":331,"line_end":331,"column_start":5,"column_end":97}},{"value":"/ let label2: Label<u32> = Label::dynamic(|data, _| format!(\"total is {}\", data));","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":522680,"byte_end":522764,"line_start":332,"line_end":332,"column_start":5,"column_end":89}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":522769,"byte_end":522776,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":522781,"byte_end":522784,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ [`new`]: #method.new","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":522789,"byte_end":522813,"line_start":335,"line_end":335,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3337},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":523031,"byte_end":523035,"line_start":342,"line_end":342,"column_start":12,"column_end":16},"name":"text","qualname":"<Label<T>>::text","value":"pub fn text(&Self) -> ArcStr","parent":null,"children":[],"decl_id":null,"docs":" Return the current value of the label's text.\n","sig":null,"attributes":[{"value":"/ Return the current value of the label's text.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":522970,"byte_end":523019,"line_start":341,"line_end":341,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3338},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":523514,"byte_end":523522,"line_start":356,"line_end":356,"column_start":12,"column_end":20},"name":"set_text","qualname":"<Label<T>>::set_text","value":"pub fn set_text<impl Into<LabelText<T>>: Into<LabelText<T>>>(&mut Self,\nimpl Into<LabelText<T>>)","parent":null,"children":[],"decl_id":null,"docs":" Set the label's text.","sig":null,"attributes":[{"value":"/ Set the label's text.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":523099,"byte_end":523124,"line_start":346,"line_end":346,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":523129,"byte_end":523132,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":523137,"byte_end":523147,"line_start":348,"line_end":348,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":523152,"byte_end":523155,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ If you change this property, at runtime, you **must** ensure that [`update`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":523160,"byte_end":523240,"line_start":350,"line_end":350,"column_start":5,"column_end":85}},{"value":"/ is called in order to correctly recompute the text. If you are unsure,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":523245,"byte_end":523319,"line_start":351,"line_end":351,"column_start":5,"column_end":79}},{"value":"/ call [`request_update`] explicitly.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":523324,"byte_end":523363,"line_start":352,"line_end":352,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":523368,"byte_end":523371,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ [`update`]: ../trait.Widget.html#tymethod.update","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":523376,"byte_end":523428,"line_start":354,"line_end":354,"column_start":5,"column_end":57}},{"value":"/ [`request_update`]: ../struct.EventCtx.html#method.request_update","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":523433,"byte_end":523502,"line_start":355,"line_end":355,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3340},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":523844,"byte_end":523859,"line_start":366,"line_end":366,"column_start":12,"column_end":27},"name":"with_text_color","qualname":"<Label<T>>::with_text_color","value":"pub fn with_text_color<impl Into<KeyOrValue<Color>>: Into<KeyOrValue<Color>>>(Self,\nimpl Into<KeyOrValue<Color>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for setting the text color.","sig":null,"attributes":[{"value":"/ Builder-style method for setting the text color.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":523655,"byte_end":523707,"line_start":361,"line_end":361,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":523712,"byte_end":523715,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ The argument can be either a `Color` or a [`Key<Color>`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":523720,"byte_end":523781,"line_start":363,"line_end":363,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":523786,"byte_end":523789,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ [`Key<Color>`]: ../struct.Key.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":523794,"byte_end":523832,"line_start":365,"line_end":365,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3342},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":524166,"byte_end":524180,"line_start":376,"line_end":376,"column_start":12,"column_end":26},"name":"with_text_size","qualname":"<Label<T>>::with_text_size","value":"pub fn with_text_size<impl Into<KeyOrValue<f64>>: Into<KeyOrValue<f64>>>(Self,\nimpl Into<KeyOrValue<f64>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for setting the text size.","sig":null,"attributes":[{"value":"/ Builder-style method for setting the text size.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":523983,"byte_end":524034,"line_start":371,"line_end":371,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":524039,"byte_end":524042,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The argument can be either an `f64` or a [`Key<f64>`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":524047,"byte_end":524105,"line_start":373,"line_end":373,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":524110,"byte_end":524113,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ [`Key<f64>`]: ../struct.Key.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":524118,"byte_end":524154,"line_start":375,"line_end":375,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3344},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":524651,"byte_end":524660,"line_start":389,"line_end":389,"column_start":12,"column_end":21},"name":"with_font","qualname":"<Label<T>>::with_font","value":"pub fn with_font<impl Into<KeyOrValue<FontDescriptor>>: Into<KeyOrValue<FontDescriptor>>>(Self,\nimpl Into<KeyOrValue<FontDescriptor>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for setting the font.","sig":null,"attributes":[{"value":"/ Builder-style method for setting the font.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":524299,"byte_end":524345,"line_start":381,"line_end":381,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":524350,"byte_end":524353,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ The argument can be a [`FontDescriptor`] or a [`Key<FontDescriptor>`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":524358,"byte_end":524431,"line_start":383,"line_end":383,"column_start":5,"column_end":78}},{"value":"/ that refers to a font defined in the [`Env`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":524436,"byte_end":524485,"line_start":384,"line_end":384,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":524490,"byte_end":524493,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ [`Env`]: ../struct.Env.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":524498,"byte_end":524529,"line_start":386,"line_end":386,"column_start":5,"column_end":36}},{"value":"/ [`FontDescriptor`]: ../struct.FontDescriptor.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":524534,"byte_end":524587,"line_start":387,"line_end":387,"column_start":5,"column_end":58}},{"value":"/ [`Key<FontDescriptor>`]: ../struct.Key.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":524592,"byte_end":524639,"line_start":388,"line_end":388,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3346},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":524917,"byte_end":524937,"line_start":397,"line_end":397,"column_start":12,"column_end":32},"name":"with_line_break_mode","qualname":"<Label<T>>::with_line_break_mode","value":"pub fn with_line_break_mode(Self, LineBreaking) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to set the [`LineBreaking`] behaviour.","sig":null,"attributes":[{"value":"/ Builder-style method to set the [`LineBreaking`] behaviour.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":524785,"byte_end":524848,"line_start":394,"line_end":394,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":524853,"byte_end":524856,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ [`LineBreaking`]: enum.LineBreaking.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":524861,"byte_end":524905,"line_start":396,"line_end":396,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3347},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":525173,"byte_end":525192,"line_start":405,"line_end":405,"column_start":12,"column_end":31},"name":"with_text_alignment","qualname":"<Label<T>>::with_text_alignment","value":"pub fn with_text_alignment(Self, TextAlignment) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to set the [`TextAlignment`].","sig":null,"attributes":[{"value":"/ Builder-style method to set the [`TextAlignment`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":525048,"byte_end":525102,"line_start":402,"line_end":402,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":525107,"byte_end":525110,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ [`TextAlignment`]: enum.TextAlignment.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":525115,"byte_end":525161,"line_start":404,"line_end":404,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":525596,"byte_end":525603,"line_start":415,"line_end":415,"column_start":12,"column_end":19},"name":"draw_at","qualname":"<Label<T>>::draw_at","value":"pub fn draw_at<impl Into<Point>: Into<Point>>(&Self, &mut PaintCtx,\nimpl Into<Point>)","parent":null,"children":[],"decl_id":null,"docs":" Draw this label's text at the provided `Point`, without internal padding.","sig":null,"attributes":[{"value":"/ Draw this label's text at the provided `Point`, without internal padding.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":525313,"byte_end":525390,"line_start":410,"line_end":410,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":525395,"byte_end":525398,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ This is a convenience for widgets that want to use Label as a way","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":525403,"byte_end":525472,"line_start":412,"line_end":412,"column_start":5,"column_end":74}},{"value":"/ of managing a dynamic or localized string, but want finer control","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":525477,"byte_end":525546,"line_start":413,"line_end":413,"column_start":5,"column_end":74}},{"value":"/ over where the text is drawn.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":525551,"byte_end":525584,"line_start":414,"line_end":414,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3358},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":526323,"byte_end":526340,"line_start":446,"line_end":446,"column_start":12,"column_end":29},"name":"with_display_text","qualname":"<LabelText<T>>::with_display_text","value":"pub fn with_display_text<V, impl FnMut(&str) -> V: FnMut(&str) ->\nV>(&Self, impl FnMut(&str) -> V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Call callback with the text that should be displayed.\n","sig":null,"attributes":[{"value":"/ Call callback with the text that should be displayed.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":526254,"byte_end":526311,"line_start":445,"line_end":445,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3361},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":526648,"byte_end":526660,"line_start":455,"line_end":455,"column_start":12,"column_end":24},"name":"display_text","qualname":"<LabelText<T>>::display_text","value":"pub fn display_text(&Self) -> ArcStr","parent":null,"children":[],"decl_id":null,"docs":" Return the current resolved text.\n","sig":null,"attributes":[{"value":"/ Return the current resolved text.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":526599,"byte_end":526636,"line_start":454,"line_end":454,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3362},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":527063,"byte_end":527070,"line_start":467,"line_end":467,"column_start":12,"column_end":19},"name":"resolve","qualname":"<LabelText<T>>::resolve","value":"pub fn resolve(&mut Self, &T, &Env) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Update the localization, if necessary.\n This ensures that localized strings are up to date.","sig":null,"attributes":[{"value":"/ Update the localization, if necessary.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":526891,"byte_end":526933,"line_start":463,"line_end":463,"column_start":5,"column_end":47}},{"value":"/ This ensures that localized strings are up to date.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":526938,"byte_end":526993,"line_start":464,"line_end":464,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":526998,"byte_end":527001,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if the string has changed.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":527006,"byte_end":527051,"line_start":466,"line_end":466,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3415},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":533503,"byte_end":533511,"line_start":46,"line_end":46,"column_start":12,"column_end":20},"name":"LensWrap","qualname":"::widget::lens_wrap::LensWrap","value":"LensWrap {  }","parent":null,"children":[{"krate":0,"index":3420},{"krate":0,"index":3421},{"krate":0,"index":3422},{"krate":0,"index":3423}],"decl_id":null,"docs":" A wrapper for its widget subtree to have access to a part\n of its parent's data.","sig":null,"attributes":[{"value":"/ A wrapper for its widget subtree to have access to a part","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":532531,"byte_end":532592,"line_start":26,"line_end":26,"column_start":1,"column_end":62}},{"value":"/ of its parent's data.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":532593,"byte_end":532618,"line_start":27,"line_end":27,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":532619,"byte_end":532622,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Every widget in druid is instantiated with access to data of some","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":532623,"byte_end":532692,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"/ type; the root widget has access to the entire application data.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":532693,"byte_end":532761,"line_start":30,"line_end":30,"column_start":1,"column_end":69}},{"value":"/ Often, a part of the widget hierarchy is only concerned with a part","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":532762,"byte_end":532833,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ of that data. The `LensWrap` widget is a way to \"focus\" the data","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":532834,"byte_end":532902,"line_start":32,"line_end":32,"column_start":1,"column_end":69}},{"value":"/ reference down, for the subtree. One advantage is performance;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":532903,"byte_end":532969,"line_start":33,"line_end":33,"column_start":1,"column_end":67}},{"value":"/ data changes that don't intersect the scope of the lens aren't","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":532970,"byte_end":533036,"line_start":34,"line_end":34,"column_start":1,"column_end":67}},{"value":"/ propagated.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":533037,"byte_end":533052,"line_start":35,"line_end":35,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":533053,"byte_end":533056,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Another advantage is generality and reuse. If a widget (or tree of","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":533057,"byte_end":533127,"line_start":37,"line_end":37,"column_start":1,"column_end":71}},{"value":"/ widgets) is designed to work with some chunk of data, then with a","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":533128,"byte_end":533197,"line_start":38,"line_end":38,"column_start":1,"column_end":70}},{"value":"/ lens that same code can easily be reused across all occurrences of","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":533198,"byte_end":533268,"line_start":39,"line_end":39,"column_start":1,"column_end":71}},{"value":"/ that chunk within the application state.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":533269,"byte_end":533313,"line_start":40,"line_end":40,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":533314,"byte_end":533317,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This wrapper takes a [`Lens`] as an argument, which is a specification","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":533318,"byte_end":533392,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ of a struct field, or some other way of narrowing the scope.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":533393,"byte_end":533457,"line_start":43,"line_end":43,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":533458,"byte_end":533461,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`Lens`]: trait.Lens.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":533462,"byte_end":533491,"line_start":45,"line_end":45,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3429},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":533992,"byte_end":533995,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"new","qualname":"<LensWrap<T, U, L, W>>::new","value":"pub fn new(W, L) -> LensWrap<T, U, L, W>","parent":null,"children":[],"decl_id":null,"docs":" Wrap a widget with a lens.","sig":null,"attributes":[{"value":"/ Wrap a widget with a lens.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":533805,"byte_end":533835,"line_start":57,"line_end":57,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":533840,"byte_end":533843,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ When the lens has type `Lens<T, U>`, the inner widget has data","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":533848,"byte_end":533914,"line_start":59,"line_end":59,"column_start":5,"column_end":71}},{"value":"/ of type `U`, and the wrapped widget has data of type `T`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":533919,"byte_end":533980,"line_start":60,"line_end":60,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":3510},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\list.rs","byte_start":536691,"byte_end":536695,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"List","qualname":"::widget::list::List","value":"List {  }","parent":null,"children":[{"krate":0,"index":3512},{"krate":0,"index":3513},{"krate":0,"index":3514},{"krate":0,"index":3515}],"decl_id":null,"docs":" A list widget for a variable-size collection of items.\n","sig":null,"attributes":[{"value":"/ A list widget for a variable-size collection of items.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\list.rs","byte_start":536621,"byte_end":536679,"line_start":31,"line_end":31,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3518},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\list.rs","byte_start":537006,"byte_end":537009,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<List<T>>::new","value":"pub fn new<W: Widget<T> + 'static, impl Fn() -> W + 'static: Fn() -> W +\n'static>(impl Fn() -> W + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new list widget. Closure will be called every time when a new child\n needs to be constructed.\n","sig":null,"attributes":[{"value":"/ Create a new list widget. Closure will be called every time when a new child","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\list.rs","byte_start":536881,"byte_end":536961,"line_start":40,"line_end":40,"column_start":5,"column_end":85}},{"value":"/ needs to be constructed.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\list.rs","byte_start":536966,"byte_end":536994,"line_start":41,"line_end":41,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3522},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\list.rs","byte_start":537371,"byte_end":537381,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"horizontal","qualname":"<List<T>>::horizontal","value":"pub fn horizontal(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the widget to display the list horizontally, not vertically.\n","sig":null,"attributes":[{"value":"/ Sets the widget to display the list horizontally, not vertically.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\list.rs","byte_start":537290,"byte_end":537359,"line_start":51,"line_end":51,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3523},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\list.rs","byte_start":537513,"byte_end":537525,"line_start":58,"line_end":58,"column_start":12,"column_end":24},"name":"with_spacing","qualname":"<List<T>>::with_spacing","value":"pub fn with_spacing<impl Into<KeyOrValue<f64>>: Into<KeyOrValue<f64>>>(Self,\nimpl Into<KeyOrValue<f64>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the spacing between elements.\n","sig":null,"attributes":[{"value":"/ Set the spacing between elements.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\list.rs","byte_start":537464,"byte_end":537501,"line_start":57,"line_end":57,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3525},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\list.rs","byte_start":537695,"byte_end":537706,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"set_spacing","qualname":"<List<T>>::set_spacing","value":"pub fn set_spacing<impl Into<KeyOrValue<f64>>: Into<KeyOrValue<f64>>>(&mut Self,\nimpl Into<KeyOrValue<f64>>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the spacing between elements.\n","sig":null,"attributes":[{"value":"/ Set the spacing between elements.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\list.rs","byte_start":537646,"byte_end":537683,"line_start":63,"line_end":63,"column_start":5,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":3530},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\list.rs","byte_start":538613,"byte_end":538621,"line_start":89,"line_end":89,"column_start":11,"column_end":19},"name":"ListIter","qualname":"::widget::list::ListIter","value":"ListIter<T>: Data","parent":null,"children":[{"krate":0,"index":3532},{"krate":0,"index":3534},{"krate":0,"index":3536}],"decl_id":null,"docs":" This iterator enables writing List widget for any `Data`.\n","sig":null,"attributes":[{"value":"/ This iterator enables writing List widget for any `Data`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\list.rs","byte_start":538541,"byte_end":538602,"line_start":88,"line_end":88,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3532},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\list.rs","byte_start":538678,"byte_end":538686,"line_start":91,"line_end":91,"column_start":8,"column_end":16},"name":"for_each","qualname":"::widget::list::ListIter::for_each","value":"pub fn for_each<impl FnMut(&T, usize): FnMut(&T, usize) ->\n()>(&Self, impl FnMut(&T, usize))","parent":{"krate":0,"index":3530},"children":[],"decl_id":null,"docs":" Iterate over each data child.\n","sig":null,"attributes":[{"value":"/ Iterate over each data child.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\list.rs","byte_start":538637,"byte_end":538670,"line_start":90,"line_end":90,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3534},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\list.rs","byte_start":538812,"byte_end":538824,"line_start":94,"line_end":94,"column_start":8,"column_end":20},"name":"for_each_mut","qualname":"::widget::list::ListIter::for_each_mut","value":"pub fn for_each_mut<impl FnMut(&mut T, usize): FnMut(&mut T, usize) ->\n()>(&mut Self, impl FnMut(&mut T, usize))","parent":{"krate":0,"index":3530},"children":[],"decl_id":null,"docs":" Iterate over each data child. Keep track of changed data and update self.\n","sig":null,"attributes":[{"value":"/ Iterate over each data child. Keep track of changed data and update self.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\list.rs","byte_start":538727,"byte_end":538804,"line_start":93,"line_end":93,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":3536},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\list.rs","byte_start":538904,"byte_end":538912,"line_start":97,"line_end":97,"column_start":8,"column_end":16},"name":"data_len","qualname":"::widget::list::ListIter::data_len","value":"pub fn data_len(&Self) -> usize","parent":{"krate":0,"index":3530},"children":[],"decl_id":null,"docs":" Return data length.\n","sig":null,"attributes":[{"value":"/ Return data length.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\list.rs","byte_start":538873,"byte_end":538896,"line_start":96,"line_end":96,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":3580},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":545955,"byte_end":545962,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"Padding","qualname":"::widget::padding::Padding","value":"Padding {  }","parent":null,"children":[{"krate":0,"index":3582},{"krate":0,"index":3583},{"krate":0,"index":3584},{"krate":0,"index":3585},{"krate":0,"index":3586}],"decl_id":null,"docs":" A widget that just adds padding around its child.\n","sig":null,"attributes":[{"value":"/ A widget that just adds padding around its child.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":545890,"byte_end":545943,"line_start":20,"line_end":20,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3589},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":547220,"byte_end":547223,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<Padding<T>>::new","value":"pub fn new<impl Into<Insets>: Into<Insets>,\nimpl Widget<T> + 'static: Widget<T> +\n'static>(impl Into<Insets>, impl Widget<T> + 'static) -> Padding<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new widget with the specified padding. This can either be an instance\n of [`kurbo::Insets`], a f64 for uniform padding, a 2-tuple for axis-uniform padding\n or 4-tuple with (left, top, right, bottom) values.","sig":null,"attributes":[{"value":"/ Create a new widget with the specified padding. This can either be an instance","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":546104,"byte_end":546186,"line_start":31,"line_end":31,"column_start":5,"column_end":87}},{"value":"/ of [`kurbo::Insets`], a f64 for uniform padding, a 2-tuple for axis-uniform padding","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":546191,"byte_end":546278,"line_start":32,"line_end":32,"column_start":5,"column_end":92}},{"value":"/ or 4-tuple with (left, top, right, bottom) values.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":546283,"byte_end":546337,"line_start":33,"line_end":33,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":546342,"byte_end":546345,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":546350,"byte_end":546364,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":546369,"byte_end":546372,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Uniform padding:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":546377,"byte_end":546397,"line_start":37,"line_end":37,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":546402,"byte_end":546405,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":546410,"byte_end":546417,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ use druid::widget::{Label, Padding};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":546422,"byte_end":546462,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/ use druid::kurbo::Insets;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":546467,"byte_end":546496,"line_start":41,"line_end":41,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":546501,"byte_end":546504,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let _: Padding<()> = Padding::new(10.0, Label::new(\"uniform!\"));","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":546509,"byte_end":546577,"line_start":43,"line_end":43,"column_start":5,"column_end":73}},{"value":"/ let _: Padding<()> = Padding::new(Insets::uniform(10.0), Label::new(\"uniform!\"));","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":546582,"byte_end":546667,"line_start":44,"line_end":44,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":546672,"byte_end":546679,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":546684,"byte_end":546687,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Uniform padding across each axis:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":546692,"byte_end":546729,"line_start":47,"line_end":47,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":546734,"byte_end":546737,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":546742,"byte_end":546749,"line_start":49,"line_end":49,"column_start":5,"column_end":12}},{"value":"/ use druid::widget::{Label, Padding};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":546754,"byte_end":546794,"line_start":50,"line_end":50,"column_start":5,"column_end":45}},{"value":"/ use druid::kurbo::Insets;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":546799,"byte_end":546828,"line_start":51,"line_end":51,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":546833,"byte_end":546836,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ let child: Label<()> = Label::new(\"I need my space!\");","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":546841,"byte_end":546899,"line_start":53,"line_end":53,"column_start":5,"column_end":63}},{"value":"/ let _: Padding<()> = Padding::new((10.0, 20.0), Label::new(\"more y than x!\"));","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":546904,"byte_end":546986,"line_start":54,"line_end":54,"column_start":5,"column_end":87}},{"value":"/ // equivalent:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":546991,"byte_end":547009,"line_start":55,"line_end":55,"column_start":5,"column_end":23}},{"value":"/ let _: Padding<()> = Padding::new(Insets::uniform_xy(10.0, 20.0), Label::new(\"ditto :)\"));","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":547014,"byte_end":547108,"line_start":56,"line_end":56,"column_start":5,"column_end":99}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":547113,"byte_end":547120,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":547125,"byte_end":547128,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ [`kurbo::Insets`]: https://docs.rs/kurbo/0.5.3/kurbo/struct.Insets.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":547133,"byte_end":547208,"line_start":59,"line_end":59,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":3624},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":551656,"byte_end":551663,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"Painter","qualname":"::widget::painter::Painter","value":"","parent":null,"children":[],"decl_id":null,"docs":" A widget that only handles painting.","sig":null,"attributes":[{"value":"/ A widget that only handles painting.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":549518,"byte_end":549558,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":549559,"byte_end":549562,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This is useful in a situation where layout is controlled elsewhere and you","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":549563,"byte_end":549641,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ do not need to handle events, but you would like to customize appearance.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":549642,"byte_end":549719,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":549720,"byte_end":549723,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ **When is paint called?**","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":549724,"byte_end":549753,"line_start":24,"line_end":24,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":549754,"byte_end":549757,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The `Painter` widget will call its [`paint`]  method anytime its [`Data`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":549758,"byte_end":549835,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ is changed. If you would like it to repaint at other times (such as when","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":549836,"byte_end":549912,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ hot or active state changes) you will need to call [`request_paint`] further","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":549913,"byte_end":549993,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ up the tree, perhaps in a [`Controller`] widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":549994,"byte_end":550046,"line_start":29,"line_end":29,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550047,"byte_end":550050,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550051,"byte_end":550065,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550066,"byte_end":550069,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Changing background color based on some part of data:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550070,"byte_end":550127,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550128,"byte_end":550131,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550132,"byte_end":550139,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ use druid::{Env, PaintCtx,Rect, RenderContext};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550140,"byte_end":550191,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/ use druid::widget::Painter;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550192,"byte_end":550223,"line_start":37,"line_end":37,"column_start":1,"column_end":32}},{"value":"/ # const ENABLED_BG_COLOR: druid::Key<druid::Color> = druid::Key::new(\"fake key\");","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550224,"byte_end":550309,"line_start":38,"line_end":38,"column_start":1,"column_end":86}},{"value":"/ # const DISABLED_BG_COLOR: druid::Key<druid::Color> = druid::Key::new(\"fake key 2\");","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550310,"byte_end":550398,"line_start":39,"line_end":39,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550399,"byte_end":550402,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ struct MyData { is_enabled: bool }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550403,"byte_end":550441,"line_start":41,"line_end":41,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550442,"byte_end":550445,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let my_painter = Painter::new(|ctx, data: &MyData, env| {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550446,"byte_end":550507,"line_start":43,"line_end":43,"column_start":1,"column_end":62}},{"value":"/     let bounds = ctx.size().to_rect();","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550508,"byte_end":550550,"line_start":44,"line_end":44,"column_start":1,"column_end":43}},{"value":"/     if data.is_enabled {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550551,"byte_end":550579,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/         ctx.fill(bounds, &env.get(ENABLED_BG_COLOR));","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550580,"byte_end":550637,"line_start":46,"line_end":46,"column_start":1,"column_end":58}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550638,"byte_end":550654,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550655,"byte_end":550658,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/         ctx.fill(bounds, &env.get(DISABLED_BG_COLOR));","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550659,"byte_end":550717,"line_start":49,"line_end":49,"column_start":1,"column_end":59}},{"value":"/     }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550718,"byte_end":550727,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550728,"byte_end":550735,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550736,"byte_end":550743,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550744,"byte_end":550747,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ Using painter to make a simple widget that will draw a selected color","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550748,"byte_end":550821,"line_start":54,"line_end":54,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550822,"byte_end":550825,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550826,"byte_end":550829,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550830,"byte_end":550837,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use druid::{Color, Env, PaintCtx,Rect, RenderContext};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550838,"byte_end":550896,"line_start":58,"line_end":58,"column_start":1,"column_end":59}},{"value":"/ use druid::widget::Painter;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550897,"byte_end":550928,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550929,"byte_end":550932,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ const CORNER_RADIUS: f64 = 4.0;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550933,"byte_end":550968,"line_start":61,"line_end":61,"column_start":1,"column_end":36}},{"value":"/ const STROKE_WIDTH: f64 = 2.0;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":550969,"byte_end":551003,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":551004,"byte_end":551007,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let colorwell: Painter<Color> = Painter::new(|ctx, data: &Color, env| {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":551008,"byte_end":551083,"line_start":64,"line_end":64,"column_start":1,"column_end":76}},{"value":"/     // Shrink the bounds a little, to ensure that our stroke remains within","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":551084,"byte_end":551163,"line_start":65,"line_end":65,"column_start":1,"column_end":80}},{"value":"/     // the paint bounds.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":551164,"byte_end":551192,"line_start":66,"line_end":66,"column_start":1,"column_end":29}},{"value":"/     let bounds = ctx.size().to_rect().inset(-STROKE_WIDTH / 2.0);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":551193,"byte_end":551262,"line_start":67,"line_end":67,"column_start":1,"column_end":70}},{"value":"/     let rounded = bounds.to_rounded_rect(CORNER_RADIUS);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":551263,"byte_end":551323,"line_start":68,"line_end":68,"column_start":1,"column_end":61}},{"value":"/     ctx.fill(rounded, data);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":551324,"byte_end":551356,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/     ctx.stroke(rounded, &env.get(druid::theme::PRIMARY_DARK), STROKE_WIDTH);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":551357,"byte_end":551437,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/ });","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":551438,"byte_end":551445,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":551446,"byte_end":551453,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":551454,"byte_end":551457,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ [`paint`]: ../trait.Widget.html#tymethod.paint","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":551458,"byte_end":551508,"line_start":74,"line_end":74,"column_start":1,"column_end":51}},{"value":"/ [`Data`]: ../trait.Data.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":551509,"byte_end":551541,"line_start":75,"line_end":75,"column_start":1,"column_end":33}},{"value":"/ [`request_paint`]: ../EventCtx.html#method.request_paint","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":551542,"byte_end":551602,"line_start":76,"line_end":76,"column_start":1,"column_end":61}},{"value":"/ [`Controller`]: trait.Controller.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":551603,"byte_end":551644,"line_start":77,"line_end":77,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3630},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":552121,"byte_end":552126,"line_start":91,"line_end":91,"column_start":5,"column_end":10},"name":"Color","qualname":"::widget::painter::BackgroundBrush::Color","value":"BackgroundBrush::Color(Color)","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3633},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":552139,"byte_end":552147,"line_start":92,"line_end":92,"column_start":5,"column_end":13},"name":"ColorKey","qualname":"::widget::painter::BackgroundBrush::ColorKey","value":"BackgroundBrush::ColorKey(Key<Color>)","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3636},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":552165,"byte_end":552171,"line_start":93,"line_end":93,"column_start":5,"column_end":11},"name":"Linear","qualname":"::widget::painter::BackgroundBrush::Linear","value":"BackgroundBrush::Linear(LinearGradient)","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3639},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":552193,"byte_end":552199,"line_start":94,"line_end":94,"column_start":5,"column_end":11},"name":"Radial","qualname":"::widget::painter::BackgroundBrush::Radial","value":"BackgroundBrush::Radial(RadialGradient)","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3642},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":552221,"byte_end":552226,"line_start":95,"line_end":95,"column_start":5,"column_end":10},"name":"Fixed","qualname":"::widget::painter::BackgroundBrush::Fixed","value":"BackgroundBrush::Fixed(FixedGradient)","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3645},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":552247,"byte_end":552254,"line_start":96,"line_end":96,"column_start":5,"column_end":12},"name":"Painter","qualname":"::widget::painter::BackgroundBrush::Painter","value":"BackgroundBrush::Painter(Painter<T>)","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3628},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":552096,"byte_end":552111,"line_start":90,"line_end":90,"column_start":10,"column_end":25},"name":"BackgroundBrush","qualname":"::widget::painter::BackgroundBrush","value":"pub enum BackgroundBrush<T> {\n    Color(Color),\n    ColorKey(Key<Color>),\n    Linear(LinearGradient),\n    Radial(RadialGradient),\n    Fixed(FixedGradient),\n    Painter(Painter<T>),\n}","parent":null,"children":[{"krate":0,"index":3630},{"krate":0,"index":3633},{"krate":0,"index":3636},{"krate":0,"index":3639},{"krate":0,"index":3642},{"krate":0,"index":3645}],"decl_id":null,"docs":" Something that can be used as the background for a widget.","sig":null,"attributes":[{"value":"/ Something that can be used as the background for a widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":551710,"byte_end":551772,"line_start":80,"line_end":80,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":551773,"byte_end":551776,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ This represents anything that can be painted inside a widgets [`paint`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":551777,"byte_end":551852,"line_start":82,"line_end":82,"column_start":1,"column_end":76}},{"value":"/ method; that is, it may have access to the [`Data`] and the [`Env`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":551853,"byte_end":551925,"line_start":83,"line_end":83,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":551926,"byte_end":551929,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ [`paint`]: ../trait.Widget.html#tymethod.paint","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":551930,"byte_end":551980,"line_start":85,"line_end":85,"column_start":1,"column_end":51}},{"value":"/ [`Data`]: ../trait.Data.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":551981,"byte_end":552013,"line_start":86,"line_end":86,"column_start":1,"column_end":33}},{"value":"/ [`Env`]: ../struct.Env.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":552014,"byte_end":552045,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":552046,"byte_end":552063,"line_start":88,"line_end":88,"column_start":1,"column_end":18}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":552064,"byte_end":552086,"line_start":89,"line_end":89,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3650},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":552429,"byte_end":552432,"line_start":103,"line_end":103,"column_start":12,"column_end":15},"name":"new","qualname":"<Painter<T>>::new","value":"pub fn new<impl FnMut(&mut PaintCtx, &T, &Env) + 'static: FnMut(&mut PaintCtx,\n&T, &Env) -> () + 'static>(impl FnMut(&mut PaintCtx, &T, &Env) + 'static)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Painter` with the provided [`paint`] fn.","sig":null,"attributes":[{"value":"/ Create a new `Painter` with the provided [`paint`] fn.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":552296,"byte_end":552354,"line_start":100,"line_end":100,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":552359,"byte_end":552362,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`paint`]: ../trait.Widget.html#tymethod.paint","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":552367,"byte_end":552417,"line_start":102,"line_end":102,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3654},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":552697,"byte_end":552702,"line_start":112,"line_end":112,"column_start":12,"column_end":17},"name":"paint","qualname":"<BackgroundBrush<T>>::paint","value":"pub fn paint(&mut Self, &mut PaintCtx, &T, &Env)","parent":null,"children":[],"decl_id":null,"docs":" Draw this `BackgroundBrush` into a provided [`PaintCtx`].","sig":null,"attributes":[{"value":"/ Draw this `BackgroundBrush` into a provided [`PaintCtx`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":552570,"byte_end":552631,"line_start":109,"line_end":109,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":552636,"byte_end":552639,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ [`PaintCtx`]: ../struct.PaintCtx.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":552644,"byte_end":552685,"line_start":111,"line_end":111,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":3697},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\parse.rs","byte_start":555923,"byte_end":555928,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Parse","qualname":"::widget::parse::Parse","value":"Parse {  }","parent":null,"children":[{"krate":0,"index":3699},{"krate":0,"index":3700}],"decl_id":null,"docs":" Converts a `Widget<String>` to a `Widget<Option<T>>`, mapping parse errors to None\n","sig":null,"attributes":[{"value":"/ Converts a `Widget<String>` to a `Widget<Option<T>>`, mapping parse errors to None","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\parse.rs","byte_start":555825,"byte_end":555911,"line_start":22,"line_end":22,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":3703},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\parse.rs","byte_start":556038,"byte_end":556041,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<Parse<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Parse` widget.\n","sig":null,"attributes":[{"value":"/ Create a new `Parse` widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\parse.rs","byte_start":555994,"byte_end":556026,"line_start":29,"line_end":29,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":7172},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\progress_bar.rs","byte_start":558471,"byte_end":558482,"line_start":24,"line_end":24,"column_start":12,"column_end":23},"name":"ProgressBar","qualname":"::widget::progress_bar::ProgressBar","value":"","parent":null,"children":[],"decl_id":null,"docs":" A progress bar, displaying a numeric progress value.","sig":null,"attributes":[{"value":"/ A progress bar, displaying a numeric progress value.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\progress_bar.rs","byte_start":558288,"byte_end":558344,"line_start":20,"line_end":20,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\progress_bar.rs","byte_start":558345,"byte_end":558348,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This type impls `Widget<f64>`, expecting a float in the range `0.0..1.0`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\progress_bar.rs","byte_start":558349,"byte_end":558426,"line_start":22,"line_end":22,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3732},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\progress_bar.rs","byte_start":558551,"byte_end":558554,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<ProgressBar>::new","value":"pub fn new() -> ProgressBar","parent":null,"children":[],"decl_id":null,"docs":" Return a new `ProgressBar`.\n","sig":null,"attributes":[{"value":"/ Return a new `ProgressBar`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\progress_bar.rs","byte_start":558508,"byte_end":558539,"line_start":27,"line_end":27,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7180},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\radio.rs","byte_start":561750,"byte_end":561760,"line_start":26,"line_end":26,"column_start":12,"column_end":22},"name":"RadioGroup","qualname":"::widget::radio::RadioGroup","value":"","parent":null,"children":[],"decl_id":null,"docs":" A group of radio buttons\n","sig":null,"attributes":[{"value":"/ A group of radio buttons","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\radio.rs","byte_start":561686,"byte_end":561714,"line_start":24,"line_end":24,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3773},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\radio.rs","byte_start":561887,"byte_end":561890,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<RadioGroup>::new","value":"pub fn new<T: Data + PartialEq,\nimpl Into<LabelText<T>> + 'static: Into<LabelText<T>> + 'static,\nimpl IntoIterator<Item = (impl Into<LabelText<T>> + 'static, T)>: IntoIterator<Item\n=\n(impl Into<LabelText<T>> + 'static,\nT)>>(impl IntoIterator<Item = (impl Into<LabelText<T>> + 'static, T)>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Given a vector of `(label_text, enum_variant)` tuples, create a group of Radio buttons\n","sig":null,"attributes":[{"value":"/ Given a vector of `(label_text, enum_variant)` tuples, create a group of Radio buttons","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\radio.rs","byte_start":561785,"byte_end":561875,"line_start":29,"line_end":29,"column_start":5,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":3778},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\radio.rs","byte_start":562464,"byte_end":562469,"line_start":48,"line_end":48,"column_start":12,"column_end":17},"name":"Radio","qualname":"::widget::radio::Radio","value":"Radio {  }","parent":null,"children":[{"krate":0,"index":3780},{"krate":0,"index":3781}],"decl_id":null,"docs":" A single radio button\n","sig":null,"attributes":[{"value":"/ A single radio button","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\radio.rs","byte_start":562427,"byte_end":562452,"line_start":47,"line_end":47,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3784},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\radio.rs","byte_start":562628,"byte_end":562631,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"new","qualname":"<Radio<T>>::new","value":"pub fn new<impl Into<LabelText<T>>: Into<LabelText<T>>>(impl Into<LabelText<T>>,\nT) -> Radio<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a lone Radio button from label text and an enum variant\n","sig":null,"attributes":[{"value":"/ Create a lone Radio button from label text and an enum variant","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\radio.rs","byte_start":562550,"byte_end":562616,"line_start":54,"line_end":54,"column_start":5,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":3811},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":566026,"byte_end":566037,"line_start":12,"line_end":12,"column_start":11,"column_end":22},"name":"ScopePolicy","qualname":"::widget::scope::ScopePolicy","value":"ScopePolicy","parent":null,"children":[{"krate":0,"index":3812},{"krate":0,"index":3813},{"krate":0,"index":3814},{"krate":0,"index":3815}],"decl_id":null,"docs":" A policy that controls how a [`Scope`] will interact with its surrounding\n application data. Specifically, how to create an initial State from the\n input, and how to synchronise the two using a [`ScopeTransfer`].","sig":null,"attributes":[{"value":"/ A policy that controls how a [`Scope`] will interact with its surrounding","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":565708,"byte_end":565785,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ application data. Specifically, how to create an initial State from the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":565786,"byte_end":565861,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ input, and how to synchronise the two using a [`ScopeTransfer`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":565862,"byte_end":565930,"line_start":8,"line_end":8,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":565931,"byte_end":565934,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`Scope`]: struct.Scope.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":565935,"byte_end":565967,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`ScopeTransfer`]: trait.ScopeTransfer.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":565968,"byte_end":566015,"line_start":11,"line_end":11,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":3812},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":566131,"byte_end":566133,"line_start":14,"line_end":14,"column_start":10,"column_end":12},"name":"In","qualname":"::widget::scope::ScopePolicy::In","value":"type In: Data;","parent":{"krate":0,"index":3811},"children":[],"decl_id":null,"docs":" The type of data that comes in from the surrounding application or scope.\n","sig":null,"attributes":[{"value":"/ The type of data that comes in from the surrounding application or scope.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":566044,"byte_end":566121,"line_start":13,"line_end":13,"column_start":5,"column_end":82}}]},{"kind":"Type","id":{"krate":0,"index":3813},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":566306,"byte_end":566311,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"State","qualname":"::widget::scope::ScopePolicy::State","value":"type State: Data;","parent":{"krate":0,"index":3811},"children":[],"decl_id":null,"docs":" The type of data that the `Scope` will maintain internally.\n This will usually be larger than the input data, and will embed the input data.\n","sig":null,"attributes":[{"value":"/ The type of data that the `Scope` will maintain internally.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":566145,"byte_end":566208,"line_start":15,"line_end":15,"column_start":5,"column_end":68}},{"value":"/ This will usually be larger than the input data, and will embed the input data.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":566213,"byte_end":566296,"line_start":16,"line_end":16,"column_start":5,"column_end":88}}]},{"kind":"Type","id":{"krate":0,"index":3814},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":566421,"byte_end":566429,"line_start":19,"line_end":19,"column_start":10,"column_end":18},"name":"Transfer","qualname":"::widget::scope::ScopePolicy::Transfer","value":"type Transfer: ScopeTransfer<In = Self::In, State = Self::State>;","parent":{"krate":0,"index":3811},"children":[],"decl_id":null,"docs":" The type of transfer that will be used to synchronise internal and application state\n","sig":null,"attributes":[{"value":"/ The type of transfer that will be used to synchronise internal and application state","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":566323,"byte_end":566411,"line_start":18,"line_end":18,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3815},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":566660,"byte_end":566666,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"create","qualname":"::widget::scope::ScopePolicy::create","value":"pub fn create(Self, &Self::In) -> (Self::State, Self::Transfer)","parent":{"krate":0,"index":3811},"children":[],"decl_id":null,"docs":" Make a new state and transfer from the input.","sig":null,"attributes":[{"value":"/ Make a new state and transfer from the input.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":566486,"byte_end":566535,"line_start":20,"line_end":20,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":566540,"byte_end":566543,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ This consumes the policy, so non-cloneable items can make their way","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":566548,"byte_end":566619,"line_start":22,"line_end":22,"column_start":5,"column_end":76}},{"value":"/ into the state this way.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":566624,"byte_end":566652,"line_start":23,"line_end":23,"column_start":5,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":3816},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":567054,"byte_end":567067,"line_start":35,"line_end":35,"column_start":11,"column_end":24},"name":"ScopeTransfer","qualname":"::widget::scope::ScopeTransfer","value":"ScopeTransfer","parent":null,"children":[{"krate":0,"index":3817},{"krate":0,"index":3818},{"krate":0,"index":3819},{"krate":0,"index":3820}],"decl_id":null,"docs":" A `ScopeTransfer` knows how to synchronise input data with its counterpart\n within a [`Scope`].","sig":null,"attributes":[{"value":"/ A `ScopeTransfer` knows how to synchronise input data with its counterpart","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":566728,"byte_end":566806,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ within a [`Scope`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":566807,"byte_end":566830,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":566831,"byte_end":566834,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ It is separate from the policy mainly to allow easy use of lenses to do","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":566835,"byte_end":566910,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ synchronisation, with a custom [`ScopePolicy`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":566911,"byte_end":566962,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":566963,"byte_end":566966,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Scope`]: struct.Scope.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":566967,"byte_end":566999,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/ [`ScopePolicy`]: trait.ScopePolicy.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":567000,"byte_end":567043,"line_start":34,"line_end":34,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":3817},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":567161,"byte_end":567163,"line_start":37,"line_end":37,"column_start":10,"column_end":12},"name":"In","qualname":"::widget::scope::ScopeTransfer::In","value":"type In: Data;","parent":{"krate":0,"index":3816},"children":[],"decl_id":null,"docs":" The type of data that comes in from the surrounding application or scope.\n","sig":null,"attributes":[{"value":"/ The type of data that comes in from the surrounding application or scope.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":567074,"byte_end":567151,"line_start":36,"line_end":36,"column_start":5,"column_end":82}}]},{"kind":"Type","id":{"krate":0,"index":3818},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":567246,"byte_end":567251,"line_start":39,"line_end":39,"column_start":10,"column_end":15},"name":"State","qualname":"::widget::scope::ScopeTransfer::State","value":"type State: Data;","parent":{"krate":0,"index":3816},"children":[],"decl_id":null,"docs":" The type of data that the Scope will maintain internally.\n","sig":null,"attributes":[{"value":"/ The type of data that the Scope will maintain internally.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":567175,"byte_end":567236,"line_start":38,"line_end":38,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3819},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":567346,"byte_end":567356,"line_start":42,"line_end":42,"column_start":8,"column_end":18},"name":"read_input","qualname":"::widget::scope::ScopeTransfer::read_input","value":"pub fn read_input(&Self, &mut Self::State, &Self::In)","parent":{"krate":0,"index":3816},"children":[],"decl_id":null,"docs":" Replace the input we have within our State with a new one from outside\n","sig":null,"attributes":[{"value":"/ Replace the input we have within our State with a new one from outside","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":567264,"byte_end":567338,"line_start":41,"line_end":41,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3820},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":567501,"byte_end":567517,"line_start":45,"line_end":45,"column_start":8,"column_end":24},"name":"write_back_input","qualname":"::widget::scope::ScopeTransfer::write_back_input","value":"pub fn write_back_input(&Self, &Self::State, &mut Self::In)","parent":{"krate":0,"index":3816},"children":[],"decl_id":null,"docs":" Take the modifications we have made and write them back\n to our input.\n","sig":null,"attributes":[{"value":"/ Take the modifications we have made and write them back","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":567412,"byte_end":567471,"line_start":43,"line_end":43,"column_start":5,"column_end":64}},{"value":"/ to our input.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":567476,"byte_end":567493,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":3821},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":567717,"byte_end":567735,"line_start":51,"line_end":51,"column_start":12,"column_end":30},"name":"DefaultScopePolicy","qualname":"::widget::scope::DefaultScopePolicy","value":"DefaultScopePolicy {  }","parent":null,"children":[{"krate":0,"index":3824},{"krate":0,"index":3825}],"decl_id":null,"docs":" A default implementation of [`ScopePolicy`] that takes a function and a transfer.","sig":null,"attributes":[{"value":"/ A default implementation of [`ScopePolicy`] that takes a function and a transfer.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":567572,"byte_end":567657,"line_start":48,"line_end":48,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":567658,"byte_end":567661,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`ScopePolicy`]: trait.ScopePolicy.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":567662,"byte_end":567705,"line_start":50,"line_end":50,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3829},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":568054,"byte_end":568057,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<DefaultScopePolicy<F, Transfer>>::new","value":"pub fn new(F, Transfer) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `ScopePolicy` from a factory function and a `ScopeTransfer`.\n","sig":null,"attributes":[{"value":"/ Create a `ScopePolicy` from a factory function and a `ScopeTransfer`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":567969,"byte_end":568042,"line_start":59,"line_end":59,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3835},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":568442,"byte_end":568451,"line_start":73,"line_end":73,"column_start":12,"column_end":21},"name":"from_lens","qualname":"<DefaultScopePolicy<F, LensScopeTransfer<L, In, State>>>::from_lens","value":"pub fn from_lens(F, L) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `ScopePolicy` from a factory function and a lens onto that\n `Scope`'s state.\n","sig":null,"attributes":[{"value":"/ Create a `ScopePolicy` from a factory function and a lens onto that","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":568334,"byte_end":568405,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/ `Scope`'s state.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":568410,"byte_end":568430,"line_start":72,"line_end":72,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":3843},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":569058,"byte_end":569075,"line_start":93,"line_end":93,"column_start":12,"column_end":29},"name":"LensScopeTransfer","qualname":"::widget::scope::LensScopeTransfer","value":"LensScopeTransfer {  }","parent":null,"children":[{"krate":0,"index":3847},{"krate":0,"index":3848},{"krate":0,"index":3849}],"decl_id":null,"docs":" A `ScopeTransfer` that uses a Lens to synchronise between a large internal\n state and a small input.\n","sig":null,"attributes":[{"value":"/ A `ScopeTransfer` that uses a Lens to synchronise between a large internal","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":568939,"byte_end":569017,"line_start":91,"line_end":91,"column_start":1,"column_end":79}},{"value":"/ state and a small input.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":569018,"byte_end":569046,"line_start":92,"line_end":92,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3854},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":569362,"byte_end":569365,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"new","qualname":"<LensScopeTransfer<L, In, State>>::new","value":"pub fn new(L) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `ScopeTransfer` from a Lens onto a portion of the `Scope`'s state.\n","sig":null,"attributes":[{"value":"/ Create a `ScopeTransfer` from a Lens onto a portion of the `Scope`'s state.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":569271,"byte_end":569350,"line_start":100,"line_end":100,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":3872},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572658,"byte_end":572663,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"Scope","qualname":"::widget::scope::Scope","value":"Scope {  }","parent":null,"children":[{"krate":0,"index":3875},{"krate":0,"index":3876}],"decl_id":null,"docs":" A widget that allows encapsulation of application state.","sig":null,"attributes":[{"value":"/ A widget that allows encapsulation of application state.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":570281,"byte_end":570341,"line_start":141,"line_end":141,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":570342,"byte_end":570345,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ This is useful in circumstances where","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":570346,"byte_end":570387,"line_start":143,"line_end":143,"column_start":1,"column_end":42}},{"value":"/ * A (potentially reusable) widget is composed of a tree of multiple cooperating child widgets","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":570388,"byte_end":570485,"line_start":144,"line_end":144,"column_start":1,"column_end":98}},{"value":"/ * Those widgets communicate amongst themselves using Druid's reactive data mechanisms","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":570486,"byte_end":570575,"line_start":145,"line_end":145,"column_start":1,"column_end":90}},{"value":"/ * It is undesirable to complicate the surrounding application state with the internal details","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":570576,"byte_end":570673,"line_start":146,"line_end":146,"column_start":1,"column_end":98}},{"value":"/   of the widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":570674,"byte_end":570694,"line_start":147,"line_end":147,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":570695,"byte_end":570698,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":570699,"byte_end":570702,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ Examples include:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":570703,"byte_end":570724,"line_start":150,"line_end":150,"column_start":1,"column_end":22}},{"value":"/ * In a tabs widget composed of a tab bar, and a widget switching body, those widgets need to","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":570725,"byte_end":570821,"line_start":151,"line_end":151,"column_start":1,"column_end":97}},{"value":"/   cooperate on which tab is selected. However not every user of a tabs widget wishes to","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":570822,"byte_end":570913,"line_start":152,"line_end":152,"column_start":1,"column_end":92}},{"value":"/   encumber their application state with this internal detail - especially as many tabs widgets may","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":570914,"byte_end":571016,"line_start":153,"line_end":153,"column_start":1,"column_end":103}},{"value":"/   reasonably exist in an involved application.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":571017,"byte_end":571067,"line_start":154,"line_end":154,"column_start":1,"column_end":51}},{"value":"/ * In a table/grid widget composed of various internal widgets, many things need to be synchronised.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":571068,"byte_end":571171,"line_start":155,"line_end":155,"column_start":1,"column_end":104}},{"value":"/   Scroll position, heading moves, drag operations, sort/filter operations. For many applications","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":571172,"byte_end":571272,"line_start":156,"line_end":156,"column_start":1,"column_end":101}},{"value":"/   access to this internal data outside of the table widget isn't needed.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":571273,"byte_end":571349,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/   For this reason it may be useful to use a Scope to establish private state.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":571350,"byte_end":571431,"line_start":158,"line_end":158,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":571432,"byte_end":571435,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ A scope embeds some input state (from its surrounding application or parent scope)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":571436,"byte_end":571522,"line_start":160,"line_end":160,"column_start":1,"column_end":87}},{"value":"/ into a larger piece of internal state. This is controlled by a user provided policy.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":571523,"byte_end":571611,"line_start":161,"line_end":161,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":571612,"byte_end":571615,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ The ScopePolicy needs to do two things","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":571616,"byte_end":571658,"line_start":163,"line_end":163,"column_start":1,"column_end":43}},{"value":"/ a) Create a new scope from the initial value of its input,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":571659,"byte_end":571721,"line_start":164,"line_end":164,"column_start":1,"column_end":63}},{"value":"/ b) Provide two way synchronisation between the input and the state via a ScopeTransfer","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":571722,"byte_end":571812,"line_start":165,"line_end":165,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":571813,"byte_end":571816,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ Convenience methods are provided to make a policy from a function and a lens.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":571817,"byte_end":571898,"line_start":167,"line_end":167,"column_start":1,"column_end":82}},{"value":"/ It may sometimes be advisable to implement ScopePolicy directly if you need to","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":571899,"byte_end":571981,"line_start":168,"line_end":168,"column_start":1,"column_end":83}},{"value":"/ mention the type of a Scope.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":571982,"byte_end":572014,"line_start":169,"line_end":169,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572015,"byte_end":572018,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572019,"byte_end":572033,"line_start":171,"line_end":171,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572034,"byte_end":572041,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ use druid::{Data, Lens, WidgetExt};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572042,"byte_end":572081,"line_start":173,"line_end":173,"column_start":1,"column_end":40}},{"value":"/ use druid::widget::{TextBox, Scope};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572082,"byte_end":572122,"line_start":174,"line_end":174,"column_start":1,"column_end":41}},{"value":"/ #[derive(Clone, Data, Lens)]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572123,"byte_end":572155,"line_start":175,"line_end":175,"column_start":1,"column_end":33}},{"value":"/ struct AppState {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572156,"byte_end":572177,"line_start":176,"line_end":176,"column_start":1,"column_end":22}},{"value":"/     name: String,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572178,"byte_end":572199,"line_start":177,"line_end":177,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572200,"byte_end":572205,"line_start":178,"line_end":178,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572206,"byte_end":572209,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Data, Lens)]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572210,"byte_end":572242,"line_start":180,"line_end":180,"column_start":1,"column_end":33}},{"value":"/ struct PrivateState {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572243,"byte_end":572268,"line_start":181,"line_end":181,"column_start":1,"column_end":26}},{"value":"/     text: String,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572269,"byte_end":572290,"line_start":182,"line_end":182,"column_start":1,"column_end":22}},{"value":"/     other: u32,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572291,"byte_end":572310,"line_start":183,"line_end":183,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572311,"byte_end":572316,"line_start":184,"line_end":184,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572317,"byte_end":572320,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ impl PrivateState {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572321,"byte_end":572344,"line_start":186,"line_end":186,"column_start":1,"column_end":24}},{"value":"/     pub fn new(text: String) -> Self {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572345,"byte_end":572387,"line_start":187,"line_end":187,"column_start":1,"column_end":43}},{"value":"/         PrivateState { text, other: 0 }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572388,"byte_end":572431,"line_start":188,"line_end":188,"column_start":1,"column_end":44}},{"value":"/     }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572432,"byte_end":572441,"line_start":189,"line_end":189,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572442,"byte_end":572447,"line_start":190,"line_end":190,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572448,"byte_end":572451,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572452,"byte_end":572467,"line_start":192,"line_end":192,"column_start":1,"column_end":16}},{"value":"/     let scope = Scope::from_lens(","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572468,"byte_end":572505,"line_start":193,"line_end":193,"column_start":1,"column_end":38}},{"value":"/         PrivateState::new,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572506,"byte_end":572536,"line_start":194,"line_end":194,"column_start":1,"column_end":31}},{"value":"/         PrivateState::text,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572537,"byte_end":572568,"line_start":195,"line_end":195,"column_start":1,"column_end":32}},{"value":"/         TextBox::new().lens(PrivateState::text),","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572569,"byte_end":572621,"line_start":196,"line_end":196,"column_start":1,"column_end":53}},{"value":"/     );","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572622,"byte_end":572632,"line_start":197,"line_end":197,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572633,"byte_end":572638,"line_start":198,"line_end":198,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572639,"byte_end":572646,"line_start":199,"line_end":199,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3880},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572906,"byte_end":572909,"line_start":207,"line_end":207,"column_start":12,"column_end":15},"name":"new","qualname":"<Scope<SP, W>>::new","value":"pub fn new(SP, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new scope from a policy and an inner widget\n","sig":null,"attributes":[{"value":"/ Create a new scope from a policy and an inner widget","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572838,"byte_end":572894,"line_start":206,"line_end":206,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3889},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":574536,"byte_end":574549,"line_start":257,"line_end":257,"column_start":12,"column_end":25},"name":"from_function","qualname":"<Scope<DefaultScopePolicy<F, Transfer>, W>>::from_function","value":"pub fn from_function(F, Transfer, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new policy from a function creating the state, and a ScopeTransfer synchronising it\n","sig":null,"attributes":[{"value":"/ Create a new policy from a function creating the state, and a ScopeTransfer synchronising it","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":574428,"byte_end":574524,"line_start":256,"line_end":256,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":3896},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":574946,"byte_end":574955,"line_start":266,"line_end":266,"column_start":12,"column_end":21},"name":"from_lens","qualname":"<Scope<DefaultScopePolicy<F, LensScopeTransfer<L, In, State>>, W>>::from_lens","value":"pub fn from_lens(F, L, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new policy from a function creating the state, and a Lens synchronising it\n","sig":null,"attributes":[{"value":"/ Create a new policy from a function creating the state, and a Lens synchronising it","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":574847,"byte_end":574934,"line_start":265,"line_end":265,"column_start":5,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":3926},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":577607,"byte_end":577613,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"name":"Scroll","qualname":"::widget::scroll::Scroll","value":"Scroll {  }","parent":null,"children":[{"krate":0,"index":3929},{"krate":0,"index":3930}],"decl_id":null,"docs":" A container that scrolls its contents.","sig":null,"attributes":[{"value":"/ A container that scrolls its contents.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":577044,"byte_end":577086,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":577087,"byte_end":577090,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This container holds a single child, and uses the wheel to scroll it","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":577091,"byte_end":577163,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ when the child's bounds are larger than the viewport.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":577164,"byte_end":577221,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":577222,"byte_end":577225,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The child is laid out with completely unconstrained layout bounds by","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":577226,"byte_end":577298,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ default. Restrict to a specific axis with [`vertical`] or [`horizontal`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":577299,"byte_end":577376,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ When restricted to scrolling on a specific axis the child's size is","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":577377,"byte_end":577448,"line_start":28,"line_end":28,"column_start":1,"column_end":72}},{"value":"/ locked on the opposite axis.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":577449,"byte_end":577481,"line_start":29,"line_end":29,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":577482,"byte_end":577485,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`vertical`]: struct.Scroll.html#method.vertical","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":577486,"byte_end":577538,"line_start":31,"line_end":31,"column_start":1,"column_end":53}},{"value":"/ [`horizontal`]: struct.Scroll.html#method.horizontal","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":577539,"byte_end":577595,"line_start":32,"line_end":32,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3934},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":578024,"byte_end":578027,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<Scroll<T, W>>::new","value":"pub fn new(W) -> Scroll<T, W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new scroll container.","sig":null,"attributes":[{"value":"/ Create a new scroll container.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":577730,"byte_end":577764,"line_start":39,"line_end":39,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":577769,"byte_end":577772,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ This method will allow scrolling in all directions if child's bounds","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":577777,"byte_end":577849,"line_start":41,"line_end":41,"column_start":5,"column_end":77}},{"value":"/ are larger than the viewport. Use [vertical](#method.vertical) and","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":577854,"byte_end":577924,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ [horizontal](#method.horizontal) methods to limit scrolling to a specific axis.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":577929,"byte_end":578012,"line_start":43,"line_end":43,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":3935},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":578269,"byte_end":578277,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"vertical","qualname":"<Scroll<T, W>>::vertical","value":"pub fn vertical(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Restrict scrolling to the vertical axis while locking child width.\n","sig":null,"attributes":[{"value":"/ Restrict scrolling to the vertical axis while locking child width.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":578187,"byte_end":578257,"line_start":51,"line_end":51,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3936},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":578506,"byte_end":578516,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"horizontal","qualname":"<Scroll<T, W>>::horizontal","value":"pub fn horizontal(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Restrict scrolling to the horizontal axis while locking child height.\n","sig":null,"attributes":[{"value":"/ Restrict scrolling to the horizontal axis while locking child height.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":578421,"byte_end":578494,"line_start":58,"line_end":58,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3937},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":578716,"byte_end":578721,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"child","qualname":"<Scroll<T, W>>::child","value":"pub fn child(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the child widget.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the child widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":578660,"byte_end":578704,"line_start":65,"line_end":65,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3938},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":578838,"byte_end":578847,"line_start":71,"line_end":71,"column_start":12,"column_end":21},"name":"child_mut","qualname":"<Scroll<T, W>>::child_mut","value":"pub fn child_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the child widget.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the child widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":578774,"byte_end":578826,"line_start":70,"line_end":70,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3939},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":578965,"byte_end":578975,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"child_size","qualname":"<Scroll<T, W>>::child_size","value":"pub fn child_size(&Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the child widget.\n","sig":null,"attributes":[{"value":"/ Returns the size of the child widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":578912,"byte_end":578953,"line_start":75,"line_end":75,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3940},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":579087,"byte_end":579093,"line_start":81,"line_end":81,"column_start":12,"column_end":18},"name":"offset","qualname":"<Scroll<T, W>>::offset","value":"pub fn offset(&Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns the current scroll offset.\n","sig":null,"attributes":[{"value":"/ Returns the current scroll offset.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":579037,"byte_end":579075,"line_start":80,"line_end":80,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3941},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":579270,"byte_end":579279,"line_start":88,"line_end":88,"column_start":12,"column_end":21},"name":"scroll_by","qualname":"<Scroll<T, W>>::scroll_by","value":"pub fn scroll_by(&mut Self, Vec2) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Scroll `delta` units.","sig":null,"attributes":[{"value":"/ Scroll `delta` units.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":579168,"byte_end":579193,"line_start":85,"line_end":85,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":579198,"byte_end":579201,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if the scroll offset has changed.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":579206,"byte_end":579258,"line_start":87,"line_end":87,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3942},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":579586,"byte_end":579595,"line_start":96,"line_end":96,"column_start":12,"column_end":21},"name":"scroll_to","qualname":"<Scroll<T, W>>::scroll_to","value":"pub fn scroll_to(&mut Self, Rect) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Scroll the minimal distance to show the target rect.","sig":null,"attributes":[{"value":"/ Scroll the minimal distance to show the target rect.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":579357,"byte_end":579413,"line_start":92,"line_end":92,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":579418,"byte_end":579421,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ If the target region is larger than the viewport, we will display the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":579426,"byte_end":579499,"line_start":94,"line_end":94,"column_start":5,"column_end":78}},{"value":"/ portion that fits, prioritizing the portion closest to the origin.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":579504,"byte_end":579574,"line_start":95,"line_end":95,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":3963},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":582942,"byte_end":582950,"line_start":31,"line_end":31,"column_start":12,"column_end":20},"name":"SizedBox","qualname":"::widget::sized_box::SizedBox","value":"SizedBox {  }","parent":null,"children":[{"krate":0,"index":3965},{"krate":0,"index":3966},{"krate":0,"index":3967}],"decl_id":null,"docs":" A widget with predefined size.","sig":null,"attributes":[{"value":"/ A widget with predefined size.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":582404,"byte_end":582438,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":582439,"byte_end":582442,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ If given a child, this widget forces its child to have a specific width and/or height","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":582443,"byte_end":582532,"line_start":24,"line_end":24,"column_start":1,"column_end":90}},{"value":"/ (assuming values are permitted by this widget's parent). If either the width or height is not set,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":582533,"byte_end":582635,"line_start":25,"line_end":25,"column_start":1,"column_end":103}},{"value":"/ this widget will size itself to match the child's size in that dimension.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":582636,"byte_end":582713,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":582714,"byte_end":582717,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ If not given a child, SizedBox will try to size itself as close to the specified height","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":582718,"byte_end":582809,"line_start":28,"line_end":28,"column_start":1,"column_end":92}},{"value":"/ and width as possible given the parent's constraints. If height or width is not set,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":582810,"byte_end":582898,"line_start":29,"line_end":29,"column_start":1,"column_end":89}},{"value":"/ it will be treated as zero.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":582899,"byte_end":582930,"line_start":30,"line_end":30,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3970},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":583155,"byte_end":583158,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<SizedBox<T>>::new","value":"pub fn new<impl Widget<T> + 'static: Widget<T> +\n'static>(impl Widget<T> + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct container with child, and both width and height not set.\n","sig":null,"attributes":[{"value":"/ Construct container with child, and both width and height not set.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":583073,"byte_end":583143,"line_start":38,"line_end":38,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3972},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":583416,"byte_end":583421,"line_start":48,"line_end":48,"column_start":12,"column_end":17},"name":"empty","qualname":"<SizedBox<T>>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct container without child, and both width and height not set.\n","sig":null,"attributes":[{"value":"/ Construct container without child, and both width and height not set.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":583331,"byte_end":583404,"line_start":47,"line_end":47,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3973},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":583584,"byte_end":583589,"line_start":57,"line_end":57,"column_start":12,"column_end":17},"name":"width","qualname":"<SizedBox<T>>::width","value":"pub fn width(Self, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set container's width.\n","sig":null,"attributes":[{"value":"/ Set container's width.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":583546,"byte_end":583572,"line_start":56,"line_end":56,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3974},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":583719,"byte_end":583725,"line_start":63,"line_end":63,"column_start":12,"column_end":18},"name":"height","qualname":"<SizedBox<T>>::height","value":"pub fn height(Self, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set container's height.\n","sig":null,"attributes":[{"value":"/ Set container's height.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":583680,"byte_end":583707,"line_start":62,"line_end":62,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3975},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":584194,"byte_end":584200,"line_start":76,"line_end":76,"column_start":12,"column_end":18},"name":"expand","qualname":"<SizedBox<T>>::expand","value":"pub fn expand(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Expand container to fit the parent.","sig":null,"attributes":[{"value":"/ Expand container to fit the parent.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":583819,"byte_end":583858,"line_start":68,"line_end":68,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":583863,"byte_end":583866,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Only call this method if you want your widget to occupy all available","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":583871,"byte_end":583944,"line_start":70,"line_end":70,"column_start":5,"column_end":78}},{"value":"/ space. If you only care about expanding in one of width or height, use","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":583949,"byte_end":584023,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ [`expand_width`] or [`expand_height`] instead.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":584028,"byte_end":584078,"line_start":72,"line_end":72,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":584083,"byte_end":584086,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`expand_height`]: #method.expand_height","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":584091,"byte_end":584135,"line_start":74,"line_end":74,"column_start":5,"column_end":49}},{"value":"/ [`expand_width`]: #method.expand_width","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":584140,"byte_end":584182,"line_start":75,"line_end":75,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3976},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":584436,"byte_end":584448,"line_start":85,"line_end":85,"column_start":12,"column_end":24},"name":"expand_width","qualname":"<SizedBox<T>>::expand_width","value":"pub fn expand_width(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Expand the container on the x-axis.","sig":null,"attributes":[{"value":"/ Expand the container on the x-axis.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":584320,"byte_end":584359,"line_start":82,"line_end":82,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":584364,"byte_end":584367,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This will force the child to have maximum width.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":584372,"byte_end":584424,"line_start":84,"line_end":84,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3977},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":584647,"byte_end":584660,"line_start":93,"line_end":93,"column_start":12,"column_end":25},"name":"expand_height","qualname":"<SizedBox<T>>::expand_height","value":"pub fn expand_height(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Expand the container on the y-axis.","sig":null,"attributes":[{"value":"/ Expand the container on the y-axis.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":584530,"byte_end":584569,"line_start":90,"line_end":90,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":584574,"byte_end":584577,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This will force the child to have maximum height.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":584582,"byte_end":584635,"line_start":92,"line_end":92,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":7186},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\slider.rs","byte_start":589131,"byte_end":589137,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"Slider","qualname":"::widget::slider::Slider","value":"Slider {  }","parent":null,"children":[{"krate":0,"index":7187},{"krate":0,"index":7188},{"krate":0,"index":7189},{"krate":0,"index":7190},{"krate":0,"index":7191}],"decl_id":null,"docs":" A slider, allowing interactive update of a numeric value.","sig":null,"attributes":[{"value":"/ A slider, allowing interactive update of a numeric value.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\slider.rs","byte_start":588922,"byte_end":588983,"line_start":25,"line_end":25,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\slider.rs","byte_start":588984,"byte_end":588987,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This slider implements `Widget<f64>`, and works on values clamped","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\slider.rs","byte_start":588988,"byte_end":589057,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/ in the range `min..max`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\slider.rs","byte_start":589058,"byte_end":589086,"line_start":28,"line_end":28,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4017},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\slider.rs","byte_start":589291,"byte_end":589294,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<Slider>::new","value":"pub fn new() -> Slider","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Slider`.\n","sig":null,"attributes":[{"value":"/ Create a new `Slider`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\slider.rs","byte_start":589253,"byte_end":589279,"line_start":39,"line_end":39,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4018},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\slider.rs","byte_start":589645,"byte_end":589655,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"with_range","qualname":"<Slider>::with_range","value":"pub fn with_range(Self, f64, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to set the range covered by this slider.","sig":null,"attributes":[{"value":"/ Builder-style method to set the range covered by this slider.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\slider.rs","byte_start":589519,"byte_end":589584,"line_start":50,"line_end":50,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\slider.rs","byte_start":589589,"byte_end":589592,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ The default range is `0.0..1.0`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\slider.rs","byte_start":589597,"byte_end":589633,"line_start":52,"line_end":52,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4056},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\spinner.rs","byte_start":595984,"byte_end":595991,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"Spinner","qualname":"::widget::spinner::Spinner","value":"Spinner {  }","parent":null,"children":[{"krate":0,"index":4057},{"krate":0,"index":4058}],"decl_id":null,"docs":" An animated spinner widget for showing a loading state.","sig":null,"attributes":[{"value":"/ An animated spinner widget for showing a loading state.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\spinner.rs","byte_start":595751,"byte_end":595810,"line_start":23,"line_end":23,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\spinner.rs","byte_start":595811,"byte_end":595814,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ To customize the spinner's size, you can place it inside a [`SizedBox`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\spinner.rs","byte_start":595815,"byte_end":595890,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ that has a fixed width and height.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\spinner.rs","byte_start":595891,"byte_end":595929,"line_start":26,"line_end":26,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\spinner.rs","byte_start":595930,"byte_end":595933,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`SizedBox`]: struct.SizedBox.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\spinner.rs","byte_start":595934,"byte_end":595972,"line_start":28,"line_end":28,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4060},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\spinner.rs","byte_start":596097,"byte_end":596100,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<Spinner>::new","value":"pub fn new() -> Spinner","parent":null,"children":[],"decl_id":null,"docs":" Create a spinner widget\n","sig":null,"attributes":[{"value":"/ Create a spinner widget","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\spinner.rs","byte_start":596058,"byte_end":596085,"line_start":35,"line_end":35,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4061},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\spinner.rs","byte_start":596348,"byte_end":596358,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"with_color","qualname":"<Spinner>::with_color","value":"pub fn with_color<impl Into<KeyOrValue<Color>>: Into<KeyOrValue<Color>>>(Self,\nimpl Into<KeyOrValue<Color>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for setting the spinner's color.","sig":null,"attributes":[{"value":"/ Builder-style method for setting the spinner's color.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\spinner.rs","byte_start":596154,"byte_end":596211,"line_start":40,"line_end":40,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\spinner.rs","byte_start":596216,"byte_end":596219,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ The argument can be either a `Color` or a [`Key<Color>`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\spinner.rs","byte_start":596224,"byte_end":596285,"line_start":42,"line_end":42,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\spinner.rs","byte_start":596290,"byte_end":596293,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ [`Key<Color>`]: ../struct.Key.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\spinner.rs","byte_start":596298,"byte_end":596336,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4063},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\spinner.rs","byte_start":596640,"byte_end":596649,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"set_color","qualname":"<Spinner>::set_color","value":"pub fn set_color<impl Into<KeyOrValue<Color>>: Into<KeyOrValue<Color>>>(&mut Self,\nimpl Into<KeyOrValue<Color>>)","parent":null,"children":[],"decl_id":null,"docs":" Set the spinner's color.","sig":null,"attributes":[{"value":"/ Set the spinner's color.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\spinner.rs","byte_start":596475,"byte_end":596503,"line_start":50,"line_end":50,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\spinner.rs","byte_start":596508,"byte_end":596511,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ The argument can be either a `Color` or a [`Key<Color>`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\spinner.rs","byte_start":596516,"byte_end":596577,"line_start":52,"line_end":52,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\spinner.rs","byte_start":596582,"byte_end":596585,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ [`Key<Color>`]: ../struct.Key.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\spinner.rs","byte_start":596590,"byte_end":596628,"line_start":54,"line_end":54,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":4104},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":600035,"byte_end":600040,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Split","qualname":"::widget::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":4106},{"krate":0,"index":4107},{"krate":0,"index":4108},{"krate":0,"index":4109},{"krate":0,"index":4110},{"krate":0,"index":4111},{"krate":0,"index":4112},{"krate":0,"index":4113},{"krate":0,"index":4114},{"krate":0,"index":4115}],"decl_id":null,"docs":" A container containing two other widgets, splitting the area either horizontally or vertically.\n","sig":null,"attributes":[{"value":"/ A container containing two other widgets, splitting the area either horizontally or vertically.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":599924,"byte_end":600023,"line_start":22,"line_end":22,"column_start":1,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":4121},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":601315,"byte_end":601322,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"columns","qualname":"<Split<T>>::columns","value":"pub fn columns<impl Widget<T> + 'static: Widget<T> + 'static,\nimpl Widget<T> + 'static: Widget<T> +\n'static>(impl Widget<T> + 'static, impl Widget<T> + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new split panel, with the horizontal axis split in two by a vertical bar.\n The children are laid out left and right.\n","sig":null,"attributes":[{"value":"/ Create a new split panel, with the horizontal axis split in two by a vertical bar.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":601167,"byte_end":601253,"line_start":60,"line_end":60,"column_start":5,"column_end":91}},{"value":"/ The children are laid out left and right.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":601258,"byte_end":601303,"line_start":61,"line_end":61,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4124},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":601609,"byte_end":601613,"line_start":68,"line_end":68,"column_start":12,"column_end":16},"name":"rows","qualname":"<Split<T>>::rows","value":"pub fn rows<impl Widget<T> + 'static: Widget<T> + 'static,\nimpl Widget<T> + 'static: Widget<T> +\n'static>(impl Widget<T> + 'static, impl Widget<T> + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new split panel, with the vertical axis split in two by a horizontal bar.\n The children are laid out up and down.\n","sig":null,"attributes":[{"value":"/ Create a new split panel, with the vertical axis split in two by a horizontal bar.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":601464,"byte_end":601550,"line_start":66,"line_end":66,"column_start":5,"column_end":91}},{"value":"/ The children are laid out up and down.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":601555,"byte_end":601597,"line_start":67,"line_end":67,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4127},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":601957,"byte_end":601968,"line_start":76,"line_end":76,"column_start":12,"column_end":23},"name":"split_point","qualname":"<Split<T>>::split_point","value":"pub fn split_point(Self, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to set the split point as a fraction of the split axis.","sig":null,"attributes":[{"value":"/ Builder-style method to set the split point as a fraction of the split axis.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":601753,"byte_end":601833,"line_start":72,"line_end":72,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":601838,"byte_end":601841,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ The value must be between `0.0` and `1.0`, inclusive.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":601846,"byte_end":601903,"line_start":74,"line_end":74,"column_start":5,"column_end":62}},{"value":"/ The default split point is `0.5`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":601908,"byte_end":601945,"line_start":75,"line_end":75,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4128},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":602433,"byte_end":602441,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"name":"min_size","qualname":"<Split<T>>::min_size","value":"pub fn min_size(Self, f64, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to set the minimum size for both sides of the split axis.","sig":null,"attributes":[{"value":"/ Builder-style method to set the minimum size for both sides of the split axis.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":602212,"byte_end":602294,"line_start":85,"line_end":85,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":602299,"byte_end":602302,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ The value must be greater than or equal to `0.0`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":602307,"byte_end":602360,"line_start":87,"line_end":87,"column_start":5,"column_end":58}},{"value":"/ The value will be rounded up to the nearest integer.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":602365,"byte_end":602421,"line_start":88,"line_end":88,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4129},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":602863,"byte_end":602871,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"bar_size","qualname":"<Split<T>>::bar_size","value":"pub fn bar_size(Self, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to set the size of the splitter bar.","sig":null,"attributes":[{"value":"/ Builder-style method to set the size of the splitter bar.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":602629,"byte_end":602690,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":602695,"byte_end":602698,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The value must be positive or zero.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":602703,"byte_end":602742,"line_start":98,"line_end":98,"column_start":5,"column_end":44}},{"value":"/ The value will be rounded up to the nearest integer.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":602747,"byte_end":602803,"line_start":99,"line_end":99,"column_start":5,"column_end":61}},{"value":"/ The default splitter bar size is `6.0`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":602808,"byte_end":602851,"line_start":100,"line_end":100,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4130},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":603704,"byte_end":603716,"line_start":119,"line_end":119,"column_start":12,"column_end":24},"name":"min_bar_area","qualname":"<Split<T>>::min_bar_area","value":"pub fn min_bar_area(Self, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to set the minimum size of the splitter bar area.","sig":null,"attributes":[{"value":"/ Builder-style method to set the minimum size of the splitter bar area.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":603042,"byte_end":603116,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":603121,"byte_end":603124,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ The minimum splitter bar area defines the minimum size of the area","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":603129,"byte_end":603199,"line_start":109,"line_end":109,"column_start":5,"column_end":75}},{"value":"/ where mouse hit detection is done for the splitter bar.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":603204,"byte_end":603263,"line_start":110,"line_end":110,"column_start":5,"column_end":64}},{"value":"/ The final area is either this or the splitter bar size, whichever is greater.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":603268,"byte_end":603349,"line_start":111,"line_end":111,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":603354,"byte_end":603357,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This can be useful when you want to use a very narrow visual splitter bar,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":603362,"byte_end":603440,"line_start":113,"line_end":113,"column_start":5,"column_end":83}},{"value":"/ but don't want to sacrifice user experience by making it hard to click on.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":603445,"byte_end":603523,"line_start":114,"line_end":114,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":603528,"byte_end":603531,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The value must be positive or zero.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":603536,"byte_end":603575,"line_start":116,"line_end":116,"column_start":5,"column_end":44}},{"value":"/ The value will be rounded up to the nearest integer.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":603580,"byte_end":603636,"line_start":117,"line_end":117,"column_start":5,"column_end":61}},{"value":"/ The default minimum splitter bar area is `6.0`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":603641,"byte_end":603692,"line_start":118,"line_end":118,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4131},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":604002,"byte_end":604011,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"draggable","qualname":"<Split<T>>::draggable","value":"pub fn draggable(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to set whether the split point can be changed by dragging.\n","sig":null,"attributes":[{"value":"/ Builder-style method to set whether the split point can be changed by dragging.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":603907,"byte_end":603990,"line_start":125,"line_end":125,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":4132},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":604303,"byte_end":604312,"line_start":134,"line_end":134,"column_start":12,"column_end":21},"name":"solid_bar","qualname":"<Split<T>>::solid_bar","value":"pub fn solid_bar(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to set whether the splitter bar is drawn as a solid rectangle.","sig":null,"attributes":[{"value":"/ Builder-style method to set whether the splitter bar is drawn as a solid rectangle.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":604109,"byte_end":604196,"line_start":131,"line_end":131,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":604201,"byte_end":604204,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ If this is `false` (the default), the bar will be drawn as two parallel lines.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":604209,"byte_end":604291,"line_start":133,"line_end":133,"column_start":5,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":4186},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\stepper.rs","byte_start":617615,"byte_end":617622,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"Stepper","qualname":"::widget::stepper::Stepper","value":"Stepper {  }","parent":null,"children":[{"krate":0,"index":4187},{"krate":0,"index":4188},{"krate":0,"index":4189},{"krate":0,"index":4190},{"krate":0,"index":4191},{"krate":0,"index":4192},{"krate":0,"index":4193}],"decl_id":null,"docs":" A stepper widget for step-wise increasing and decreasing a value.\n","sig":null,"attributes":[{"value":"/ A stepper widget for step-wise increasing and decreasing a value.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\stepper.rs","byte_start":617534,"byte_end":617603,"line_start":30,"line_end":30,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4195},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\stepper.rs","byte_start":617885,"byte_end":617888,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<Stepper>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Stepper`.\n","sig":null,"attributes":[{"value":"/ Create a new `Stepper`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\stepper.rs","byte_start":617846,"byte_end":617873,"line_start":43,"line_end":43,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4196},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\stepper.rs","byte_start":618289,"byte_end":618299,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"with_range","qualname":"<Stepper>::with_range","value":"pub fn with_range(Self, f64, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the range covered by this slider.","sig":null,"attributes":[{"value":"/ Set the range covered by this slider.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\stepper.rs","byte_start":618167,"byte_end":618208,"line_start":56,"line_end":56,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\stepper.rs","byte_start":618213,"byte_end":618216,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The default range is `std::f64::MIN..std::f64::MAX`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\stepper.rs","byte_start":618221,"byte_end":618277,"line_start":58,"line_end":58,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4197},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\stepper.rs","byte_start":618537,"byte_end":618546,"line_start":68,"line_end":68,"column_start":12,"column_end":21},"name":"with_step","qualname":"<Stepper>::with_step","value":"pub fn with_step(Self, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the steppers amount by which the value increases or decreases.","sig":null,"attributes":[{"value":"/ Set the steppers amount by which the value increases or decreases.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\stepper.rs","byte_start":618412,"byte_end":618482,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\stepper.rs","byte_start":618487,"byte_end":618490,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ The default step is `1.0`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\stepper.rs","byte_start":618495,"byte_end":618525,"line_start":67,"line_end":67,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4198},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\stepper.rs","byte_start":618995,"byte_end":619010,"line_start":81,"line_end":81,"column_start":12,"column_end":27},"name":"with_wraparound","qualname":"<Stepper>::with_wraparound","value":"pub fn with_wraparound(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether the stepper should wrap around the minimum/maximum values.","sig":null,"attributes":[{"value":"/ Set whether the stepper should wrap around the minimum/maximum values.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\stepper.rs","byte_start":618628,"byte_end":618702,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\stepper.rs","byte_start":618707,"byte_end":618710,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ When wraparound is enabled incrementing above max behaves like this:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\stepper.rs","byte_start":618715,"byte_end":618787,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/ - if the previous value is < max it becomes max","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\stepper.rs","byte_start":618792,"byte_end":618843,"line_start":76,"line_end":76,"column_start":5,"column_end":56}},{"value":"/ - if the previous value is = max it becomes min","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\stepper.rs","byte_start":618848,"byte_end":618899,"line_start":77,"line_end":77,"column_start":5,"column_end":56}},{"value":"/ Same logic applies for decrementing","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\stepper.rs","byte_start":618904,"byte_end":618943,"line_start":78,"line_end":78,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\stepper.rs","byte_start":618948,"byte_end":618951,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ The default is `false`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\stepper.rs","byte_start":618956,"byte_end":618983,"line_start":80,"line_end":80,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":7198},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\switch.rs","byte_start":625219,"byte_end":625225,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"Switch","qualname":"::widget::switch::Switch","value":"Switch {  }","parent":null,"children":[{"krate":0,"index":7199},{"krate":0,"index":7200},{"krate":0,"index":7201},{"krate":0,"index":7202},{"krate":0,"index":7203},{"krate":0,"index":7204}],"decl_id":null,"docs":" A switch that toggles a `bool`.\n","sig":null,"attributes":[{"value":"/ A switch that toggles a `bool`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\switch.rs","byte_start":625148,"byte_end":625183,"line_start":28,"line_end":28,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4250},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\switch.rs","byte_start":625872,"byte_end":625875,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"new","qualname":"<Switch>::new","value":"pub fn new() -> Switch","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Switch`.\n","sig":null,"attributes":[{"value":"/ Create a new `Switch`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\switch.rs","byte_start":625834,"byte_end":625860,"line_start":54,"line_end":54,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":4340},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":635981,"byte_end":635988,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"TabInfo","qualname":"::widget::tabs::TabInfo","value":"TabInfo { name, can_close }","parent":null,"children":[{"krate":0,"index":4342},{"krate":0,"index":4343}],"decl_id":null,"docs":" Information about a tab that may be used by the TabPolicy to\n drive the visual presentation and behaviour of its label\n","sig":null,"attributes":[{"value":"/ Information about a tab that may be used by the TabPolicy to","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":635844,"byte_end":635908,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/ drive the visual presentation and behaviour of its label","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":635909,"byte_end":635969,"line_start":36,"line_end":36,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":4342},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":636030,"byte_end":636034,"line_start":39,"line_end":39,"column_start":9,"column_end":13},"name":"name","qualname":"::widget::tabs::TabInfo::name","value":"widget::label::LabelText<Input>","parent":{"krate":0,"index":4340},"children":[],"decl_id":null,"docs":" Name of the tab\n","sig":null,"attributes":[{"value":"/ Name of the tab","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":636002,"byte_end":636021,"line_start":38,"line_end":38,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":4343},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":636112,"byte_end":636121,"line_start":41,"line_end":41,"column_start":9,"column_end":18},"name":"can_close","qualname":"::widget::tabs::TabInfo::can_close","value":"bool","parent":{"krate":0,"index":4340},"children":[],"decl_id":null,"docs":" Should the user be able to close the tab?\n","sig":null,"attributes":[{"value":"/ Should the user be able to close the tab?","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":636058,"byte_end":636103,"line_start":40,"line_end":40,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4346},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":636201,"byte_end":636204,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"new","qualname":"<TabInfo<Input>>::new","value":"pub fn new<impl Into<LabelText<Input>>: Into<LabelText<Input>>>(impl Into<LabelText<Input>>,\nbool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new TabInfo\n","sig":null,"attributes":[{"value":"/ Create a new TabInfo","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":636165,"byte_end":636189,"line_start":45,"line_end":45,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":4348},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":636453,"byte_end":636463,"line_start":55,"line_end":55,"column_start":11,"column_end":21},"name":"TabsPolicy","qualname":"::widget::tabs::TabsPolicy","value":"TabsPolicy: Data","parent":null,"children":[{"krate":0,"index":4349},{"krate":0,"index":4350},{"krate":0,"index":4351},{"krate":0,"index":4352},{"krate":0,"index":4353},{"krate":0,"index":4354},{"krate":0,"index":4355},{"krate":0,"index":4356},{"krate":0,"index":4357},{"krate":0,"index":4358},{"krate":0,"index":4359},{"krate":0,"index":4360},{"krate":0,"index":4361}],"decl_id":null,"docs":" A policy that determines how a Tabs instance derives its tabs from its app data.\n","sig":null,"attributes":[{"value":"/ A policy that determines how a Tabs instance derives its tabs from its app data.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":636358,"byte_end":636442,"line_start":54,"line_end":54,"column_start":1,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":4349},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":636512,"byte_end":636515,"line_start":57,"line_end":57,"column_start":10,"column_end":13},"name":"Key","qualname":"::widget::tabs::TabsPolicy::Key","value":"type Key: Hash + Eq + Clone;","parent":{"krate":0,"index":4348},"children":[],"decl_id":null,"docs":" The identity of a tab.\n","sig":null,"attributes":[{"value":"/ The identity of a tab.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":636476,"byte_end":636502,"line_start":56,"line_end":56,"column_start":5,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":4350},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":636688,"byte_end":636693,"line_start":62,"line_end":62,"column_start":10,"column_end":15},"name":"Input","qualname":"::widget::tabs::TabsPolicy::Input","value":"type Input: Data;","parent":{"krate":0,"index":4348},"children":[],"decl_id":null,"docs":" The input data that will:\n a) be used to determine the tabs present\n b) be the input data for all of the child widgets.\n","sig":null,"attributes":[{"value":"/ The input data that will:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":636541,"byte_end":636570,"line_start":59,"line_end":59,"column_start":5,"column_end":34}},{"value":"/ a) be used to determine the tabs present","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":636575,"byte_end":636619,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/ b) be the input data for all of the child widgets.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":636624,"byte_end":636678,"line_start":61,"line_end":61,"column_start":5,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":4351},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":636836,"byte_end":636846,"line_start":66,"line_end":66,"column_start":10,"column_end":20},"name":"BodyWidget","qualname":"::widget::tabs::TabsPolicy::BodyWidget","value":"type BodyWidget: Widget<Self::Input>;","parent":{"krate":0,"index":4348},"children":[],"decl_id":null,"docs":" The common type for all body widgets in this set of tabs.\n A flexible default is Box<dyn Widget<Self::Input>>\n","sig":null,"attributes":[{"value":"/ The common type for all body widgets in this set of tabs.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":636706,"byte_end":636767,"line_start":64,"line_end":64,"column_start":5,"column_end":66}},{"value":"/ A flexible default is Box<dyn Widget<Self::Input>>","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":636772,"byte_end":636826,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":4352},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":636994,"byte_end":637005,"line_start":70,"line_end":70,"column_start":10,"column_end":21},"name":"LabelWidget","qualname":"::widget::tabs::TabsPolicy::LabelWidget","value":"type LabelWidget: Widget<Self::Input>;","parent":{"krate":0,"index":4348},"children":[],"decl_id":null,"docs":" The common type for all label widgets in this set of tabs\n Usually this would be Label<Self::Input>\n","sig":null,"attributes":[{"value":"/ The common type for all label widgets in this set of tabs","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":636874,"byte_end":636935,"line_start":68,"line_end":68,"column_start":5,"column_end":66}},{"value":"/ Usually this would be Label<Self::Input>","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":636940,"byte_end":636984,"line_start":69,"line_end":69,"column_start":5,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":4353},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":637434,"byte_end":637439,"line_start":77,"line_end":77,"column_start":10,"column_end":15},"name":"Build","qualname":"::widget::tabs::TabsPolicy::Build","value":"type Build;","parent":{"krate":0,"index":4348},"children":[],"decl_id":null,"docs":" The information required to build up this policy.\n This is to support policies where at least some tabs are provided up front during widget\n construction. If the Build type implements the AddTab trait, the add_tab and with_tab\n methods will be available on the Tabs instance to allow the\n It can be filled in with () by implementations that do not require it.\n","sig":null,"attributes":[{"value":"/ The information required to build up this policy.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":637033,"byte_end":637086,"line_start":72,"line_end":72,"column_start":5,"column_end":58}},{"value":"/ This is to support policies where at least some tabs are provided up front during widget","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":637091,"byte_end":637183,"line_start":73,"line_end":73,"column_start":5,"column_end":97}},{"value":"/ construction. If the Build type implements the AddTab trait, the add_tab and with_tab","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":637188,"byte_end":637277,"line_start":74,"line_end":74,"column_start":5,"column_end":94}},{"value":"/ methods will be available on the Tabs instance to allow the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":637282,"byte_end":637345,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/ It can be filled in with () by implementations that do not require it.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":637350,"byte_end":637424,"line_start":76,"line_end":76,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":4354},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":637584,"byte_end":637596,"line_start":81,"line_end":81,"column_start":8,"column_end":20},"name":"tabs_changed","qualname":"::widget::tabs::TabsPolicy::tabs_changed","value":"pub fn tabs_changed(&Self, &Self::Input, &Self::Input) -> bool","parent":{"krate":0,"index":4348},"children":[],"decl_id":null,"docs":" Examining the input data, has the set of tabs present changed?\n Expected to be cheap, eg pointer or numeric comparison.\n","sig":null,"attributes":[{"value":"/ Examining the input data, has the set of tabs present changed?","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":637446,"byte_end":637512,"line_start":79,"line_end":79,"column_start":5,"column_end":71}},{"value":"/ Expected to be cheap, eg pointer or numeric comparison.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":637517,"byte_end":637576,"line_start":80,"line_end":80,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":4355},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":637721,"byte_end":637725,"line_start":84,"line_end":84,"column_start":8,"column_end":12},"name":"tabs","qualname":"::widget::tabs::TabsPolicy::tabs","value":"pub fn tabs(&Self, &Self::Input) -> Vec<Self::Key>","parent":{"krate":0,"index":4348},"children":[],"decl_id":null,"docs":" From the input data, return the new set of tabs\n","sig":null,"attributes":[{"value":"/ From the input data, return the new set of tabs","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":637662,"byte_end":637713,"line_start":83,"line_end":83,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4356},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":637877,"byte_end":637885,"line_start":87,"line_end":87,"column_start":8,"column_end":16},"name":"tab_info","qualname":"::widget::tabs::TabsPolicy::tab_info","value":"pub fn tab_info(&Self, Self::Key, &Self::Input) -> TabInfo<Self::Input>","parent":{"krate":0,"index":4348},"children":[],"decl_id":null,"docs":" For this tab key, return the relevant tab information that will drive label construction\n","sig":null,"attributes":[{"value":"/ For this tab key, return the relevant tab information that will drive label construction","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":637777,"byte_end":637869,"line_start":86,"line_end":86,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":4357},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":638011,"byte_end":638019,"line_start":90,"line_end":90,"column_start":8,"column_end":16},"name":"tab_body","qualname":"::widget::tabs::TabsPolicy::tab_body","value":"pub fn tab_body(&Self, Self::Key, &Self::Input) -> Self::BodyWidget","parent":{"krate":0,"index":4348},"children":[],"decl_id":null,"docs":" For this tab key, return the body widget\n","sig":null,"attributes":[{"value":"/ For this tab key, return the body widget","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":637959,"byte_end":638003,"line_start":89,"line_end":89,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4358},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":638253,"byte_end":638262,"line_start":94,"line_end":94,"column_start":8,"column_end":17},"name":"tab_label","qualname":"::widget::tabs::TabsPolicy::tab_label","value":"pub fn tab_label(&Self, Self::Key, TabInfo<Self::Input>, &Self::Input)\n-> Self::LabelWidget","parent":{"krate":0,"index":4348},"children":[],"decl_id":null,"docs":" Label widget for the tab.\n Usually implemented with a call to default_make_label ( can't default here because Self::LabelWidget isn't determined)\n","sig":null,"attributes":[{"value":"/ Label widget for the tab.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":638089,"byte_end":638118,"line_start":92,"line_end":92,"column_start":5,"column_end":34}},{"value":"/ Usually implemented with a call to default_make_label ( can't default here because Self::LabelWidget isn't determined)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":638123,"byte_end":638245,"line_start":93,"line_end":93,"column_start":5,"column_end":127}}]},{"kind":"Method","id":{"krate":0,"index":4359},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":638505,"byte_end":638514,"line_start":103,"line_end":103,"column_start":8,"column_end":17},"name":"close_tab","qualname":"::widget::tabs::TabsPolicy::close_tab","value":"pub fn close_tab(&Self, Self::Key, &mut Self::Input)","parent":{"krate":0,"index":4348},"children":[],"decl_id":null,"docs":" Change the data to reflect the user requesting to close a tab.\n","sig":null,"attributes":[{"value":"/ Change the data to reflect the user requesting to close a tab.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":638400,"byte_end":638466,"line_start":101,"line_end":101,"column_start":5,"column_end":71}},{"value":"allow(unused_variables)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":638471,"byte_end":638497,"line_start":102,"line_end":102,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4360},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":638785,"byte_end":638790,"line_start":108,"line_end":108,"column_start":8,"column_end":13},"name":"build","qualname":"::widget::tabs::TabsPolicy::build","value":"pub fn build(Self::Build) -> Self","parent":{"krate":0,"index":4348},"children":[],"decl_id":null,"docs":" Construct an instance of this TabsFromData from its Build type.\n The main use case for this is StaticTabs, where the tabs are provided by the app developer up front.\n","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":638570,"byte_end":638596,"line_start":105,"line_end":105,"column_start":5,"column_end":31}},{"value":"/ Construct an instance of this TabsFromData from its Build type.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":638601,"byte_end":638668,"line_start":106,"line_end":106,"column_start":5,"column_end":72}},{"value":"/ The main use case for this is StaticTabs, where the tabs are provided by the app developer up front.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":638673,"byte_end":638777,"line_start":107,"line_end":107,"column_start":5,"column_end":109}}]},{"kind":"Method","id":{"krate":0,"index":4361},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":639031,"byte_end":639049,"line_start":113,"line_end":113,"column_start":8,"column_end":26},"name":"default_make_label","qualname":"::widget::tabs::TabsPolicy::default_make_label","value":"pub fn default_make_label(TabInfo<Self::Input>) -> Label<Self::Input>","parent":{"krate":0,"index":4348},"children":[],"decl_id":null,"docs":" A default implementation for make label, if you do not wish to construct a custom widget.\n","sig":null,"attributes":[{"value":"/ A default implementation for make label, if you do not wish to construct a custom widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":638930,"byte_end":639023,"line_start":112,"line_end":112,"column_start":5,"column_end":98}}]},{"kind":"Struct","id":{"krate":0,"index":7209},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":639319,"byte_end":639329,"line_start":121,"line_end":121,"column_start":12,"column_end":22},"name":"StaticTabs","qualname":"::widget::tabs::StaticTabs","value":"StaticTabs {  }","parent":null,"children":[{"krate":0,"index":7211}],"decl_id":null,"docs":" A TabsPolicy that allows the app developer to provide static tabs up front when building the\n widget.\n","sig":null,"attributes":[{"value":"/ A TabsPolicy that allows the app developer to provide static tabs up front when building the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":639182,"byte_end":639278,"line_start":118,"line_end":118,"column_start":1,"column_end":97}},{"value":"/ widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":639279,"byte_end":639290,"line_start":119,"line_end":119,"column_start":1,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4382},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":641507,"byte_end":641513,"line_start":195,"line_end":195,"column_start":11,"column_end":17},"name":"AddTab","qualname":"::widget::tabs::AddTab","value":"AddTab: TabsPolicy","parent":null,"children":[{"krate":0,"index":4383}],"decl_id":null,"docs":" AddTabs is an extension to TabsPolicy.\n If a policy implements AddTab, then the add_tab and with_tab methods will be available on\n the Tabs instance.\n","sig":null,"attributes":[{"value":"/ AddTabs is an extension to TabsPolicy.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":641337,"byte_end":641379,"line_start":192,"line_end":192,"column_start":1,"column_end":43}},{"value":"/ If a policy implements AddTab, then the add_tab and with_tab methods will be available on","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":641380,"byte_end":641473,"line_start":193,"line_end":193,"column_start":1,"column_end":94}},{"value":"/ the Tabs instance.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":641474,"byte_end":641496,"line_start":194,"line_end":194,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":4383},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":641572,"byte_end":641579,"line_start":197,"line_end":197,"column_start":8,"column_end":15},"name":"add_tab","qualname":"::widget::tabs::AddTab::add_tab","value":"pub fn add_tab<impl Into<LabelText<Self::Input>>: Into<LabelText<Self::Input>>,\nimpl Widget<Self::Input> + 'static: Widget<Self::Input> +\n'static>(&mut Self::Build, impl Into<LabelText<Self::Input>>,\nimpl Widget<Self::Input> + 'static)","parent":{"krate":0,"index":4382},"children":[],"decl_id":null,"docs":" Add a tab to the build type.\n","sig":null,"attributes":[{"value":"/ Add a tab to the build type.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":641532,"byte_end":641564,"line_start":196,"line_end":196,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":7215},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":642199,"byte_end":642208,"line_start":218,"line_end":218,"column_start":12,"column_end":21},"name":"TabsState","qualname":"::widget::tabs::TabsState","value":"TabsState {  }","parent":null,"children":[{"krate":0,"index":7217},{"krate":0,"index":7218},{"krate":0,"index":7219}],"decl_id":null,"docs":" This is the current state of the tabs widget as a whole.\n This expands the input data to include a policy that determines how tabs are derived,\n and the index of the currently selected tab\n","sig":null,"attributes":[{"value":"/ This is the current state of the tabs widget as a whole.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":641960,"byte_end":642020,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"/ This expands the input data to include a policy that determines how tabs are derived,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":642021,"byte_end":642110,"line_start":215,"line_end":215,"column_start":1,"column_end":90}},{"value":"/ and the index of the currently selected tab","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":642111,"byte_end":642158,"line_start":216,"line_end":216,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4393},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":642371,"byte_end":642374,"line_start":226,"line_end":226,"column_start":12,"column_end":15},"name":"new","qualname":"<TabsState<TP>>::new","value":"pub fn new(TP::Input, usize, TP) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new TabsState\n","sig":null,"attributes":[{"value":"/ Create a new TabsState","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":642333,"byte_end":642359,"line_start":225,"line_end":225,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7278},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":657379,"byte_end":657386,"line_start":699,"line_end":699,"column_start":5,"column_end":12},"name":"Instant","qualname":"::widget::tabs::TabsTransition::Instant","value":"TabsTransition::Instant","parent":{"krate":0,"index":7277},"children":[],"decl_id":null,"docs":" Change tabs instantly with no animation\n","sig":null,"attributes":[{"value":"/ Change tabs instantly with no animation","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":657331,"byte_end":657374,"line_start":698,"line_end":698,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7280},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":657492,"byte_end":657497,"line_start":701,"line_end":701,"column_start":5,"column_end":10},"name":"Slide","qualname":"::widget::tabs::TabsTransition::Slide","value":"TabsTransition::Slide(Nanos)","parent":{"krate":0,"index":7277},"children":[],"decl_id":null,"docs":" Slide tabs across in the appropriate direction. The argument is the duration in nanoseconds\n","sig":null,"attributes":[{"value":"/ Slide tabs across in the appropriate direction. The argument is the duration in nanoseconds","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":657392,"byte_end":657487,"line_start":700,"line_end":700,"column_start":5,"column_end":100}}]},{"kind":"Enum","id":{"krate":0,"index":7277},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":657310,"byte_end":657324,"line_start":697,"line_end":697,"column_start":10,"column_end":24},"name":"TabsTransition","qualname":"::widget::tabs::TabsTransition","value":"pub enum TabsTransition { Instant, Slide(Nanos), }","parent":null,"children":[{"krate":0,"index":7278},{"krate":0,"index":7280}],"decl_id":null,"docs":" Determines whether the tabs will have a transition animation when a new tab is selected.\n","sig":null,"attributes":[{"value":"/ Determines whether the tabs will have a transition animation when a new tab is selected.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":657149,"byte_end":657241,"line_start":695,"line_end":695,"column_start":1,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7297},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":658154,"byte_end":658161,"line_start":723,"line_end":723,"column_start":5,"column_end":12},"name":"Leading","qualname":"::widget::tabs::TabsEdge::Leading","value":"TabsEdge::Leading","parent":{"krate":0,"index":7296},"children":[],"decl_id":null,"docs":" For horizontal tabs, top. For vertical tabs, left.\n","sig":null,"attributes":[{"value":"/ For horizontal tabs, top. For vertical tabs, left.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":658095,"byte_end":658149,"line_start":722,"line_end":722,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7299},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":658230,"byte_end":658238,"line_start":725,"line_end":725,"column_start":5,"column_end":13},"name":"Trailing","qualname":"::widget::tabs::TabsEdge::Trailing","value":"TabsEdge::Trailing","parent":{"krate":0,"index":7296},"children":[],"decl_id":null,"docs":" For horizontal tabs, bottom. For vertical tabs, right.\n","sig":null,"attributes":[{"value":"/ For horizontal tabs, bottom. For vertical tabs, right.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":658167,"byte_end":658225,"line_start":724,"line_end":724,"column_start":5,"column_end":63}}]},{"kind":"Enum","id":{"krate":0,"index":7296},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":658080,"byte_end":658088,"line_start":721,"line_end":721,"column_start":10,"column_end":18},"name":"TabsEdge","qualname":"::widget::tabs::TabsEdge","value":"pub enum TabsEdge { Leading, Trailing, }","parent":null,"children":[{"krate":0,"index":7297},{"krate":0,"index":7299}],"decl_id":null,"docs":" Determines where the tab bar should be placed relative to the cross axis\n","sig":null,"attributes":[{"value":"/ Determines where the tab bar should be placed relative to the cross axis","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":657947,"byte_end":658023,"line_start":719,"line_end":719,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":4477},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":658340,"byte_end":658350,"line_start":734,"line_end":734,"column_start":12,"column_end":22},"name":"InitialTab","qualname":"::widget::tabs::InitialTab","value":"InitialTab {  }","parent":null,"children":[{"krate":0,"index":4479},{"krate":0,"index":4480}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4496},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659620,"byte_end":659624,"line_start":785,"line_end":785,"column_start":12,"column_end":16},"name":"Tabs","qualname":"::widget::tabs::Tabs","value":"Tabs {  }","parent":null,"children":[{"krate":0,"index":4498},{"krate":0,"index":4499},{"krate":0,"index":4500},{"krate":0,"index":4501}],"decl_id":null,"docs":" A tabs widget.","sig":null,"attributes":[{"value":"/ A tabs widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":658991,"byte_end":659009,"line_start":761,"line_end":761,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659010,"byte_end":659013,"line_start":762,"line_end":762,"column_start":1,"column_end":4}},{"value":"/ The tabs can be provided up front, using Tabs::new() and add_tab()/with_tab().","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659014,"byte_end":659096,"line_start":763,"line_end":763,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659097,"byte_end":659100,"line_start":764,"line_end":764,"column_start":1,"column_end":4}},{"value":"/ Or, the tabs can be derived from the input data by implementing TabsPolicy, and providing it to","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659101,"byte_end":659200,"line_start":765,"line_end":765,"column_start":1,"column_end":100}},{"value":"/ Tabs::from_policy()","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659201,"byte_end":659224,"line_start":766,"line_end":766,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659225,"byte_end":659228,"line_start":767,"line_end":767,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659229,"byte_end":659236,"line_start":768,"line_end":768,"column_start":1,"column_end":8}},{"value":"/ use druid::widget::{Tabs, Label, WidgetExt};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659237,"byte_end":659285,"line_start":769,"line_end":769,"column_start":1,"column_end":49}},{"value":"/ use druid::{Data, Lens};","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659286,"byte_end":659314,"line_start":770,"line_end":770,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659315,"byte_end":659318,"line_start":771,"line_end":771,"column_start":1,"column_end":4}},{"value":"/ #[derive(Data, Clone, Lens)]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659319,"byte_end":659351,"line_start":772,"line_end":772,"column_start":1,"column_end":33}},{"value":"/ struct AppState{","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659352,"byte_end":659372,"line_start":773,"line_end":773,"column_start":1,"column_end":21}},{"value":"/     name: String","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659373,"byte_end":659393,"line_start":774,"line_end":774,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659394,"byte_end":659399,"line_start":775,"line_end":775,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659400,"byte_end":659403,"line_start":776,"line_end":776,"column_start":1,"column_end":4}},{"value":"/ let tabs = Tabs::new()","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659404,"byte_end":659430,"line_start":777,"line_end":777,"column_start":1,"column_end":27}},{"value":"/     .with_tab(\"Connection\", Label::new(\"Connection information\"))","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659431,"byte_end":659500,"line_start":778,"line_end":778,"column_start":1,"column_end":70}},{"value":"/     .with_tab(\"Proxy\", Label::new(\"Proxy settings\"))","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659501,"byte_end":659557,"line_start":779,"line_end":779,"column_start":1,"column_end":57}},{"value":"/     .lens(AppState::name);","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659558,"byte_end":659588,"line_start":780,"line_end":780,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659589,"byte_end":659592,"line_start":781,"line_end":781,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659593,"byte_end":659596,"line_start":782,"line_end":782,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659597,"byte_end":659604,"line_start":783,"line_end":783,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659605,"byte_end":659608,"line_start":784,"line_end":784,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":4504},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659927,"byte_end":659930,"line_start":795,"line_end":795,"column_start":12,"column_end":15},"name":"new","qualname":"<Tabs<StaticTabs<T>>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new Tabs widget, using the static tabs policy.\n Use with_tab or add_tab to configure the set of tabs available.\n","sig":null,"attributes":[{"value":"/ Create a new Tabs widget, using the static tabs policy.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659784,"byte_end":659843,"line_start":793,"line_end":793,"column_start":5,"column_end":64}},{"value":"/ Use with_tab or add_tab to configure the set of tabs available.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659848,"byte_end":659915,"line_start":794,"line_end":794,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":4511},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":660466,"byte_end":660476,"line_start":818,"line_end":818,"column_start":12,"column_end":22},"name":"for_policy","qualname":"<Tabs<TP>>::for_policy","value":"pub fn for_policy(TP) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a Tabs widget using the provided policy.\n This is useful for tabs derived from data.\n","sig":null,"attributes":[{"value":"/ Create a Tabs widget using the provided policy.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":660352,"byte_end":660403,"line_start":816,"line_end":816,"column_start":5,"column_end":56}},{"value":"/ This is useful for tabs derived from data.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":660408,"byte_end":660454,"line_start":817,"line_end":817,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4513},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":661049,"byte_end":661058,"line_start":835,"line_end":835,"column_start":12,"column_end":21},"name":"with_axis","qualname":"<Tabs<TP>>::with_axis","value":"pub fn with_axis(Self, Axis) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lay out the tab bar along the provided axis.\n","sig":null,"attributes":[{"value":"/ Lay out the tab bar along the provided axis.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":660989,"byte_end":661037,"line_start":834,"line_end":834,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4514},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":661213,"byte_end":661222,"line_start":841,"line_end":841,"column_start":12,"column_end":21},"name":"with_edge","qualname":"<Tabs<TP>>::with_edge","value":"pub fn with_edge(Self, TabsEdge) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Put the tab bar on the specified edge of the cross axis.\n","sig":null,"attributes":[{"value":"/ Put the tab bar on the specified edge of the cross axis.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":661141,"byte_end":661201,"line_start":840,"line_end":840,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":4515},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":661369,"byte_end":661384,"line_start":847,"line_end":847,"column_start":12,"column_end":27},"name":"with_transition","qualname":"<Tabs<TP>>::with_transition","value":"pub fn with_transition(Self, TabsTransition) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Use the provided transition when tabs change\n","sig":null,"attributes":[{"value":"/ Use the provided transition when tabs change","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":661309,"byte_end":661357,"line_start":846,"line_end":846,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4516},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":661630,"byte_end":661638,"line_start":854,"line_end":854,"column_start":12,"column_end":20},"name":"with_tab","qualname":"<Tabs<TP>>::with_tab","value":"pub fn with_tab<impl Into<LabelText<TP::Input>>: Into<LabelText<TP::Input>>,\nimpl Widget<TP::Input> + 'static: Widget<TP::Input> +\n'static>(Self, impl Into<LabelText<TP::Input>>,\nimpl Widget<TP::Input> + 'static) -> Tabs<TP> where TP: AddTab","parent":null,"children":[],"decl_id":null,"docs":" Available when the policy implements AddTab - e.g StaticTabs.\n Return this Tabs widget with the named tab added.\n","sig":null,"attributes":[{"value":"/ Available when the policy implements AddTab - e.g StaticTabs.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":661495,"byte_end":661560,"line_start":852,"line_end":852,"column_start":5,"column_end":70}},{"value":"/ Return this Tabs widget with the named tab added.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":661565,"byte_end":661618,"line_start":853,"line_end":853,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4519},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":662002,"byte_end":662009,"line_start":868,"line_end":868,"column_start":12,"column_end":19},"name":"add_tab","qualname":"<Tabs<TP>>::add_tab","value":"pub fn add_tab<impl Into<LabelText<TP::Input>>: Into<LabelText<TP::Input>>,\nimpl Widget<TP::Input> + 'static: Widget<TP::Input> +\n'static>(&mut Self, impl Into<LabelText<TP::Input>>,\nimpl Widget<TP::Input> + 'static) where TP: AddTab","parent":null,"children":[],"decl_id":null,"docs":" Available when the policy implements AddTab - e.g StaticTabs.\n Return this Tabs widget with the named tab added.\n","sig":null,"attributes":[{"value":"/ Available when the policy implements AddTab - e.g StaticTabs.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":661867,"byte_end":661932,"line_start":866,"line_end":866,"column_start":5,"column_end":70}},{"value":"/ Return this Tabs widget with the named tab added.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":661937,"byte_end":661990,"line_start":867,"line_end":867,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":7311},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":667283,"byte_end":667290,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"TextBox","qualname":"::widget::textbox::TextBox","value":"TextBox {  }","parent":null,"children":[{"krate":0,"index":7313},{"krate":0,"index":7314},{"krate":0,"index":7315},{"krate":0,"index":7316},{"krate":0,"index":7317},{"krate":0,"index":7318},{"krate":0,"index":7319},{"krate":0,"index":7320},{"krate":0,"index":7321},{"krate":0,"index":7322},{"krate":0,"index":7323},{"krate":0,"index":7324}],"decl_id":null,"docs":" A widget that allows user text input.","sig":null,"attributes":[{"value":"/ A widget that allows user text input.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":666901,"byte_end":666942,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":666943,"byte_end":666946,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Editing values","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":666947,"byte_end":666967,"line_start":40,"line_end":40,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":666968,"byte_end":666971,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ If the text you are editing represents a value of some other type, such","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":666972,"byte_end":667047,"line_start":42,"line_end":42,"column_start":1,"column_end":76}},{"value":"/ as a number, you should use a [`ValueTextBox`] and an appropriate","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":667048,"byte_end":667117,"line_start":43,"line_end":43,"column_start":1,"column_end":70}},{"value":"/ [`Formatter`]. You can create a [`ValueTextBox`] by passing the appropriate","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":667118,"byte_end":667197,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ [`Formatter`] to [`TextBox::with_formatter`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":667198,"byte_end":667247,"line_start":45,"line_end":45,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":4624},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":668898,"byte_end":668910,"line_start":86,"line_end":86,"column_start":12,"column_end":24},"name":"ValueTextBox","qualname":"::widget::textbox::ValueTextBox","value":"ValueTextBox {  }","parent":null,"children":[{"krate":0,"index":4626},{"krate":0,"index":4627},{"krate":0,"index":4628},{"krate":0,"index":4629},{"krate":0,"index":4630},{"krate":0,"index":4631},{"krate":0,"index":4632},{"krate":0,"index":4633},{"krate":0,"index":4634},{"krate":0,"index":4635}],"decl_id":null,"docs":" A `TextBox` that uses a [`Formatter`] to handle formatting and validation\n of its data.","sig":null,"attributes":[{"value":"/ A `TextBox` that uses a [`Formatter`] to handle formatting and validation","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":668027,"byte_end":668104,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/ of its data.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":668105,"byte_end":668121,"line_start":70,"line_end":70,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":668122,"byte_end":668125,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ There are a number of ways to customize the behaviour of the text box","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":668126,"byte_end":668199,"line_start":72,"line_end":72,"column_start":1,"column_end":74}},{"value":"/ in relation to the provided [`Formatter`]:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":668200,"byte_end":668246,"line_start":73,"line_end":73,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":668247,"byte_end":668250,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ - [`ValueTextBox::validate_while_editing`] takes a flag that determines whether","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":668251,"byte_end":668334,"line_start":75,"line_end":75,"column_start":1,"column_end":84}},{"value":"/ or not the textbox can display text that is not valid, while editing is","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":668335,"byte_end":668410,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ in progress. (Text will still be validated when the user attempts to complete","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":668411,"byte_end":668492,"line_start":77,"line_end":77,"column_start":1,"column_end":82}},{"value":"/ editing.)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":668493,"byte_end":668506,"line_start":78,"line_end":78,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":668507,"byte_end":668510,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ - [`ValueTextBox::update_data_while_editing`] takes a flag that determines","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":668511,"byte_end":668589,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ whether the output value is updated during editing, when possible.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":668590,"byte_end":668660,"line_start":81,"line_end":81,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":668661,"byte_end":668664,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ - [`ValueTextBox::delegate`] allows you to provide some implementation of","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":668665,"byte_end":668742,"line_start":83,"line_end":83,"column_start":1,"column_end":78}},{"value":"/ the [`ValidationDelegate`] trait, which receives a callback during editing;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":668743,"byte_end":668822,"line_start":84,"line_end":84,"column_start":1,"column_end":80}},{"value":"/ this can be used to report errors further back up the tree.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":668823,"byte_end":668886,"line_start":85,"line_end":85,"column_start":1,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":4636},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":669557,"byte_end":669575,"line_start":104,"line_end":104,"column_start":11,"column_end":29},"name":"ValidationDelegate","qualname":"::widget::textbox::ValidationDelegate","value":"ValidationDelegate","parent":null,"children":[{"krate":0,"index":4637}],"decl_id":null,"docs":" A type that can be registered to receive callbacks as the state of a\n [`ValueTextBox`] changes.\n","sig":null,"attributes":[{"value":"/ A type that can be registered to receive callbacks as the state of a","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":669444,"byte_end":669516,"line_start":102,"line_end":102,"column_start":1,"column_end":73}},{"value":"/ [`ValueTextBox`] changes.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":669517,"byte_end":669546,"line_start":103,"line_end":103,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4637},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":669693,"byte_end":669698,"line_start":107,"line_end":107,"column_start":8,"column_end":13},"name":"event","qualname":"::widget::textbox::ValidationDelegate::event","value":"pub fn event(&mut Self, &mut EventCtx, TextBoxEvent, &str)","parent":{"krate":0,"index":4636},"children":[],"decl_id":null,"docs":" Called with a [`TextBoxEvent`] whenever the validation state of a\n [`ValueTextBox`] changes.\n","sig":null,"attributes":[{"value":"/ Called with a [`TextBoxEvent`] whenever the validation state of a","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":669582,"byte_end":669651,"line_start":105,"line_end":105,"column_start":5,"column_end":74}},{"value":"/ [`ValueTextBox`] changes.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":669656,"byte_end":669685,"line_start":106,"line_end":106,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4639},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":669883,"byte_end":669888,"line_start":113,"line_end":113,"column_start":5,"column_end":10},"name":"Began","qualname":"::widget::textbox::TextBoxEvent::Began","value":"TextBoxEvent::Began","parent":{"krate":0,"index":4638},"children":[],"decl_id":null,"docs":" The textbox began editing.\n","sig":null,"attributes":[{"value":"/ The textbox began editing.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":669848,"byte_end":669878,"line_start":112,"line_end":112,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4641},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":669967,"byte_end":669974,"line_start":115,"line_end":115,"column_start":5,"column_end":12},"name":"Changed","qualname":"::widget::textbox::TextBoxEvent::Changed","value":"TextBoxEvent::Changed","parent":{"krate":0,"index":4638},"children":[],"decl_id":null,"docs":" An edit occured which was considered valid by the [`Formatter`].\n","sig":null,"attributes":[{"value":"/ An edit occured which was considered valid by the [`Formatter`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":669894,"byte_end":669962,"line_start":114,"line_end":114,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4643},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":670045,"byte_end":670061,"line_start":117,"line_end":117,"column_start":5,"column_end":21},"name":"PartiallyInvalid","qualname":"::widget::textbox::TextBoxEvent::PartiallyInvalid","value":"TextBoxEvent::PartiallyInvalid(ValidationError)","parent":{"krate":0,"index":4638},"children":[],"decl_id":null,"docs":" An edit occured which was rejected by the [`Formatter`].\n","sig":null,"attributes":[{"value":"/ An edit occured which was rejected by the [`Formatter`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":669980,"byte_end":670040,"line_start":116,"line_end":116,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4646},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":670159,"byte_end":670166,"line_start":119,"line_end":119,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::widget::textbox::TextBoxEvent::Invalid","value":"TextBoxEvent::Invalid(ValidationError)","parent":{"krate":0,"index":4638},"children":[],"decl_id":null,"docs":" The user attempted to finish editing, but the input was not valid.\n","sig":null,"attributes":[{"value":"/ The user attempted to finish editing, but the input was not valid.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":670084,"byte_end":670154,"line_start":118,"line_end":118,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4649},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":670242,"byte_end":670250,"line_start":121,"line_end":121,"column_start":5,"column_end":13},"name":"Complete","qualname":"::widget::textbox::TextBoxEvent::Complete","value":"TextBoxEvent::Complete","parent":{"krate":0,"index":4638},"children":[],"decl_id":null,"docs":" The user finished editing, with valid input.\n","sig":null,"attributes":[{"value":"/ The user finished editing, with valid input.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":670189,"byte_end":670237,"line_start":120,"line_end":120,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4651},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":670287,"byte_end":670293,"line_start":123,"line_end":123,"column_start":5,"column_end":11},"name":"Cancel","qualname":"::widget::textbox::TextBoxEvent::Cancel","value":"TextBoxEvent::Cancel","parent":{"krate":0,"index":4638},"children":[],"decl_id":null,"docs":" Editing was cancelled.\n","sig":null,"attributes":[{"value":"/ Editing was cancelled.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":670256,"byte_end":670282,"line_start":122,"line_end":122,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":4638},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":669829,"byte_end":669841,"line_start":111,"line_end":111,"column_start":10,"column_end":22},"name":"TextBoxEvent","qualname":"::widget::textbox::TextBoxEvent","value":"pub enum TextBoxEvent {\n    Began,\n    Changed,\n    PartiallyInvalid(ValidationError),\n    Invalid(ValidationError),\n    Complete,\n    Cancel,\n}","parent":null,"children":[{"krate":0,"index":4639},{"krate":0,"index":4641},{"krate":0,"index":4643},{"krate":0,"index":4646},{"krate":0,"index":4649},{"krate":0,"index":4651}],"decl_id":null,"docs":" Events sent to a [`ValidationDelegate`].\n","sig":null,"attributes":[{"value":"/ Events sent to a [`ValidationDelegate`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":669775,"byte_end":669819,"line_start":110,"line_end":110,"column_start":1,"column_end":45}}]},{"kind":"Const","id":{"krate":0,"index":4654},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":670534,"byte_end":670546,"line_start":133,"line_end":133,"column_start":15,"column_end":27},"name":"PERFORM_EDIT","qualname":"::widget::textbox::TextBox::<()>::PERFORM_EDIT","value":"Selector<EditAction>","parent":{"krate":0,"index":4653},"children":[],"decl_id":null,"docs":" Perform an `EditAction`.","sig":null,"attributes":[{"value":"/ Perform an `EditAction`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":670321,"byte_end":670349,"line_start":127,"line_end":127,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":670354,"byte_end":670357,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ You can send a [`Command`] to a textbox containing an [`EditAction`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":670362,"byte_end":670434,"line_start":129,"line_end":129,"column_start":5,"column_end":77}},{"value":"/ that the textbox should perform.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":670439,"byte_end":670475,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":670480,"byte_end":670483,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [`Command`]: crate::Command","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":670488,"byte_end":670519,"line_start":132,"line_end":132,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4657},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":670704,"byte_end":670707,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"new","qualname":"<TextBox<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new TextBox widget.\n","sig":null,"attributes":[{"value":"/ Create a new TextBox widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":670660,"byte_end":670692,"line_start":138,"line_end":138,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4658},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":671380,"byte_end":671389,"line_start":159,"line_end":159,"column_start":12,"column_end":21},"name":"multiline","qualname":"<TextBox<T>>::multiline","value":"pub fn multiline() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new multi-line `TextBox`.\n","sig":null,"attributes":[{"value":"/ Create a new multi-line `TextBox`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":671330,"byte_end":671368,"line_start":158,"line_end":158,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4659},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":671614,"byte_end":671630,"line_start":167,"line_end":167,"column_start":12,"column_end":28},"name":"with_placeholder","qualname":"<TextBox<T>>::with_placeholder","value":"pub fn with_placeholder<impl Into<String>: Into<String>>(Self,\nimpl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to set the `TextBox`'s placeholder text.\n","sig":null,"attributes":[{"value":"/ Builder-style method to set the `TextBox`'s placeholder text.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":671537,"byte_end":671602,"line_start":166,"line_end":166,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4661},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":671945,"byte_end":671959,"line_start":177,"line_end":177,"column_start":12,"column_end":26},"name":"with_text_size","qualname":"<TextBox<T>>::with_text_size","value":"pub fn with_text_size<impl Into<KeyOrValue<f64>>: Into<KeyOrValue<f64>>>(Self,\nimpl Into<KeyOrValue<f64>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for setting the text size.","sig":null,"attributes":[{"value":"/ Builder-style method for setting the text size.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":671762,"byte_end":671813,"line_start":172,"line_end":172,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":671818,"byte_end":671821,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The argument can be either an `f64` or a [`Key<f64>`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":671826,"byte_end":671884,"line_start":174,"line_end":174,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":671889,"byte_end":671892,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ [`Key<f64>`]: ../struct.Key.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":671897,"byte_end":671933,"line_start":176,"line_end":176,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":4663},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":672917,"byte_end":672936,"line_start":200,"line_end":200,"column_start":12,"column_end":31},"name":"with_text_alignment","qualname":"<TextBox<T>>::with_text_alignment","value":"pub fn with_text_alignment(Self, TextAlignment) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to set the [`TextAlignment`].","sig":null,"attributes":[{"value":"/ Builder-style method to set the [`TextAlignment`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":672072,"byte_end":672126,"line_start":182,"line_end":182,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":672131,"byte_end":672134,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ This is only relevant when the `TextBox` is *not* [`multiline`],","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":672139,"byte_end":672207,"line_start":184,"line_end":184,"column_start":5,"column_end":73}},{"value":"/ in which case it determines how the text is positioned inside the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":672212,"byte_end":672281,"line_start":185,"line_end":185,"column_start":5,"column_end":74}},{"value":"/ `TextBox` when it does not fill the available space.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":672286,"byte_end":672342,"line_start":186,"line_end":186,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":672347,"byte_end":672350,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Note:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":672355,"byte_end":672366,"line_start":188,"line_end":188,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":672371,"byte_end":672374,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This does not behave exactly like [`TextAlignment`] does when used","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":672379,"byte_end":672449,"line_start":190,"line_end":190,"column_start":5,"column_end":75}},{"value":"/ with label; in particular this does not account for reading direction.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":672454,"byte_end":672528,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ This means that `TextAlignment::Start` (the default) always means","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":672533,"byte_end":672602,"line_start":192,"line_end":192,"column_start":5,"column_end":74}},{"value":"/ *left aligned*, and `TextAlignment::End` always means *right aligned*.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":672607,"byte_end":672681,"line_start":193,"line_end":193,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":672686,"byte_end":672689,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ This should be considered a bug, but it will not be fixed until proper","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":672694,"byte_end":672768,"line_start":195,"line_end":195,"column_start":5,"column_end":79}},{"value":"/ BiDi support is implemented.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":672773,"byte_end":672805,"line_start":196,"line_end":196,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":672810,"byte_end":672813,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ [`TextAlignment`]: enum.TextAlignment.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":672818,"byte_end":672864,"line_start":198,"line_end":198,"column_start":5,"column_end":51}},{"value":"/ [`multiline`]: #method.multiline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":672869,"byte_end":672905,"line_start":199,"line_end":199,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":4664},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":673403,"byte_end":673412,"line_start":213,"line_end":213,"column_start":12,"column_end":21},"name":"with_font","qualname":"<TextBox<T>>::with_font","value":"pub fn with_font<impl Into<KeyOrValue<FontDescriptor>>: Into<KeyOrValue<FontDescriptor>>>(Self,\nimpl Into<KeyOrValue<FontDescriptor>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for setting the font.","sig":null,"attributes":[{"value":"/ Builder-style method for setting the font.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":673051,"byte_end":673097,"line_start":205,"line_end":205,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":673102,"byte_end":673105,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ The argument can be a [`FontDescriptor`] or a [`Key<FontDescriptor>`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":673110,"byte_end":673183,"line_start":207,"line_end":207,"column_start":5,"column_end":78}},{"value":"/ that refers to a font defined in the [`Env`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":673188,"byte_end":673237,"line_start":208,"line_end":208,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":673242,"byte_end":673245,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ [`Env`]: ../struct.Env.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":673250,"byte_end":673281,"line_start":210,"line_end":210,"column_start":5,"column_end":36}},{"value":"/ [`FontDescriptor`]: ../struct.FontDescriptor.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":673286,"byte_end":673339,"line_start":211,"line_end":211,"column_start":5,"column_end":58}},{"value":"/ [`Key<FontDescriptor>`]: ../struct.Key.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":673344,"byte_end":673391,"line_start":212,"line_end":212,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4666},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":673720,"byte_end":673735,"line_start":223,"line_end":223,"column_start":12,"column_end":27},"name":"with_text_color","qualname":"<TextBox<T>>::with_text_color","value":"pub fn with_text_color<impl Into<KeyOrValue<Color>>: Into<KeyOrValue<Color>>>(Self,\nimpl Into<KeyOrValue<Color>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for setting the text color.","sig":null,"attributes":[{"value":"/ Builder-style method for setting the text color.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":673531,"byte_end":673583,"line_start":218,"line_end":218,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":673588,"byte_end":673591,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ The argument can be either a `Color` or a [`Key<Color>`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":673596,"byte_end":673657,"line_start":220,"line_end":220,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":673662,"byte_end":673665,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ [`Key<Color>`]: ../struct.Key.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":673670,"byte_end":673708,"line_start":222,"line_end":222,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4668},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":673906,"byte_end":673921,"line_start":229,"line_end":229,"column_start":12,"column_end":27},"name":"set_placeholder","qualname":"<TextBox<T>>::set_placeholder","value":"pub fn set_placeholder<impl Into<String>: Into<String>>(&mut Self,\nimpl Into<String>)","parent":null,"children":[],"decl_id":null,"docs":" Set the `TextBox`'s placeholder text.\n","sig":null,"attributes":[{"value":"/ Set the `TextBox`'s placeholder text.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":673853,"byte_end":673894,"line_start":228,"line_end":228,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":4670},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":674187,"byte_end":674200,"line_start":238,"line_end":238,"column_start":12,"column_end":25},"name":"set_text_size","qualname":"<TextBox<T>>::set_text_size","value":"pub fn set_text_size<impl Into<KeyOrValue<f64>>: Into<KeyOrValue<f64>>>(&mut Self,\nimpl Into<KeyOrValue<f64>>)","parent":null,"children":[],"decl_id":null,"docs":" Set the text size.","sig":null,"attributes":[{"value":"/ Set the text size.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":674033,"byte_end":674055,"line_start":233,"line_end":233,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":674060,"byte_end":674063,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ The argument can be either an `f64` or a [`Key<f64>`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":674068,"byte_end":674126,"line_start":235,"line_end":235,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":674131,"byte_end":674134,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ [`Key<f64>`]: ../struct.Key.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":674139,"byte_end":674175,"line_start":237,"line_end":237,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":4672},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":674722,"byte_end":674730,"line_start":252,"line_end":252,"column_start":12,"column_end":20},"name":"set_font","qualname":"<TextBox<T>>::set_font","value":"pub fn set_font<impl Into<KeyOrValue<FontDescriptor>>: Into<KeyOrValue<FontDescriptor>>>(&mut Self,\nimpl Into<KeyOrValue<FontDescriptor>>)","parent":null,"children":[],"decl_id":null,"docs":" Set the font.","sig":null,"attributes":[{"value":"/ Set the font.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":674399,"byte_end":674416,"line_start":244,"line_end":244,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":674421,"byte_end":674424,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ The argument can be a [`FontDescriptor`] or a [`Key<FontDescriptor>`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":674429,"byte_end":674502,"line_start":246,"line_end":246,"column_start":5,"column_end":78}},{"value":"/ that refers to a font defined in the [`Env`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":674507,"byte_end":674556,"line_start":247,"line_end":247,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":674561,"byte_end":674564,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ [`Env`]: ../struct.Env.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":674569,"byte_end":674600,"line_start":249,"line_end":249,"column_start":5,"column_end":36}},{"value":"/ [`FontDescriptor`]: ../struct.FontDescriptor.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":674605,"byte_end":674658,"line_start":250,"line_end":250,"column_start":5,"column_end":58}},{"value":"/ [`Key<FontDescriptor>`]: ../struct.Key.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":674663,"byte_end":674710,"line_start":251,"line_end":251,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4674},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":675771,"byte_end":675789,"line_start":276,"line_end":276,"column_start":12,"column_end":30},"name":"set_text_alignment","qualname":"<TextBox<T>>::set_text_alignment","value":"pub fn set_text_alignment(&mut Self, TextAlignment)","parent":null,"children":[],"decl_id":null,"docs":" Set the [`TextAlignment`] for this `TextBox``.","sig":null,"attributes":[{"value":"/ Set the [`TextAlignment`] for this `TextBox``.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":674930,"byte_end":674980,"line_start":258,"line_end":258,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":674985,"byte_end":674988,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This is only relevant when the `TextBox` is *not* [`multiline`],","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":674993,"byte_end":675061,"line_start":260,"line_end":260,"column_start":5,"column_end":73}},{"value":"/ in which case it determines how the text is positioned inside the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":675066,"byte_end":675135,"line_start":261,"line_end":261,"column_start":5,"column_end":74}},{"value":"/ `TextBox` when it does not fill the available space.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":675140,"byte_end":675196,"line_start":262,"line_end":262,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":675201,"byte_end":675204,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Note:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":675209,"byte_end":675220,"line_start":264,"line_end":264,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":675225,"byte_end":675228,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This does not behave exactly like [`TextAlignment`] does when used","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":675233,"byte_end":675303,"line_start":266,"line_end":266,"column_start":5,"column_end":75}},{"value":"/ with label; in particular this does not account for reading direction.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":675308,"byte_end":675382,"line_start":267,"line_end":267,"column_start":5,"column_end":79}},{"value":"/ This means that `TextAlignment::Start` (the default) always means","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":675387,"byte_end":675456,"line_start":268,"line_end":268,"column_start":5,"column_end":74}},{"value":"/ *left aligned*, and `TextAlignment::End` always means *right aligned*.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":675461,"byte_end":675535,"line_start":269,"line_end":269,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":675540,"byte_end":675543,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This should be considered a bug, but it will not be fixed until proper","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":675548,"byte_end":675622,"line_start":271,"line_end":271,"column_start":5,"column_end":79}},{"value":"/ BiDi support is implemented.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":675627,"byte_end":675659,"line_start":272,"line_end":272,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":675664,"byte_end":675667,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ [`TextAlignment`]: enum.TextAlignment.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":675672,"byte_end":675718,"line_start":274,"line_end":274,"column_start":5,"column_end":51}},{"value":"/ [`multiline`]: #method.multiline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":675723,"byte_end":675759,"line_start":275,"line_end":275,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":4675},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":676246,"byte_end":676260,"line_start":289,"line_end":289,"column_start":12,"column_end":26},"name":"set_text_color","qualname":"<TextBox<T>>::set_text_color","value":"pub fn set_text_color<impl Into<KeyOrValue<Color>>: Into<KeyOrValue<Color>>>(&mut Self,\nimpl Into<KeyOrValue<Color>>)","parent":null,"children":[],"decl_id":null,"docs":" Set the text color.","sig":null,"attributes":[{"value":"/ Set the text color.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":675876,"byte_end":675899,"line_start":280,"line_end":280,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":675904,"byte_end":675907,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ The argument can be either a `Color` or a [`Key<Color>`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":675912,"byte_end":675973,"line_start":282,"line_end":282,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":675978,"byte_end":675981,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ If you change this property, you are responsible for calling","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":675986,"byte_end":676050,"line_start":284,"line_end":284,"column_start":5,"column_end":69}},{"value":"/ [`request_layout`] to ensure the label is updated.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":676055,"byte_end":676109,"line_start":285,"line_end":285,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":676114,"byte_end":676117,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ [`request_layout`]: ../struct.EventCtx.html#method.request_layout","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":676122,"byte_end":676191,"line_start":287,"line_end":287,"column_start":5,"column_end":74}},{"value":"/ [`Key<Color>`]: ../struct.Key.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":676196,"byte_end":676234,"line_start":288,"line_end":288,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4677},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":676560,"byte_end":676566,"line_start":297,"line_end":297,"column_start":12,"column_end":18},"name":"editor","qualname":"<TextBox<T>>::editor","value":"pub fn editor(&Self) -> &Editor<T>","parent":null,"children":[],"decl_id":null,"docs":" Return the [`Editor`] used by this `TextBox`.","sig":null,"attributes":[{"value":"/ Return the [`Editor`] used by this `TextBox`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":676378,"byte_end":676427,"line_start":293,"line_end":293,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":676432,"byte_end":676435,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This is only needed in advanced cases, such as if you want to customize","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":676440,"byte_end":676515,"line_start":295,"line_end":295,"column_start":5,"column_end":80}},{"value":"/ the drawing of the text.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":676520,"byte_end":676548,"line_start":296,"line_end":296,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":4678},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":676913,"byte_end":676926,"line_start":308,"line_end":308,"column_start":12,"column_end":25},"name":"text_position","qualname":"<TextBox<T>>::text_position","value":"pub fn text_position(&Self) -> Point","parent":null,"children":[],"decl_id":null,"docs":" The point, relative to the origin, where this text box draws its\n [`TextLayout`].","sig":null,"attributes":[{"value":"/ The point, relative to the origin, where this text box draws its","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":676622,"byte_end":676690,"line_start":301,"line_end":301,"column_start":5,"column_end":73}},{"value":"/ [`TextLayout`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":676695,"byte_end":676714,"line_start":302,"line_end":302,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":676719,"byte_end":676722,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ This is exposed in case the user wants to do additional drawing based","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":676727,"byte_end":676800,"line_start":304,"line_end":304,"column_start":5,"column_end":78}},{"value":"/ on properties of the text.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":676805,"byte_end":676835,"line_start":305,"line_end":305,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":676840,"byte_end":676843,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ This is not valid until `layout` has been called.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":676848,"byte_end":676901,"line_start":307,"line_end":307,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4680},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":677362,"byte_end":677376,"line_start":322,"line_end":322,"column_start":12,"column_end":26},"name":"with_formatter","qualname":"<TextBox<String>>::with_formatter","value":"pub fn with_formatter<T: Data, impl Formatter<T> + 'static: Formatter<T> +\n'static>(Self, impl Formatter<T> + 'static) -> ValueTextBox<T>","parent":null,"children":[],"decl_id":null,"docs":" Turn this `TextBox` into a [`ValueTextBox`], using the [`Formatter`] to\n manage the value.","sig":null,"attributes":[{"value":"/ Turn this `TextBox` into a [`ValueTextBox`], using the [`Formatter`] to","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":677003,"byte_end":677078,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ manage the value.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":677083,"byte_end":677104,"line_start":315,"line_end":315,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":677109,"byte_end":677112,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ For simple value formatting, you can use the [`ParseFormatter`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":677117,"byte_end":677185,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":677190,"byte_end":677193,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ [`ValueTextBox`]: ValueTextBox","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":677198,"byte_end":677232,"line_start":319,"line_end":319,"column_start":5,"column_end":39}},{"value":"/ [`Formatter`]: crate::text::format::Formatter","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":677237,"byte_end":677286,"line_start":320,"line_end":320,"column_start":5,"column_end":54}},{"value":"/ [`ParseFormatter`]: crate::text::format::ParseFormatter","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":677291,"byte_end":677350,"line_start":321,"line_end":321,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":4685},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":677625,"byte_end":677638,"line_start":332,"line_end":332,"column_start":12,"column_end":25},"name":"set_selection","qualname":"<TextBox<T>>::set_selection","value":"pub fn set_selection(&mut Self, Selection)","parent":null,"children":[],"decl_id":null,"docs":" Set the textbox's selection.\n","sig":null,"attributes":[{"value":"/ Set the textbox's selection.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":677581,"byte_end":677613,"line_start":331,"line_end":331,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4686},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":678015,"byte_end":678028,"line_start":341,"line_end":341,"column_start":12,"column_end":25},"name":"force_rebuild","qualname":"<TextBox<T>>::force_rebuild","value":"pub fn force_rebuild(&mut Self, T, &mut PietText, &Env)","parent":null,"children":[],"decl_id":null,"docs":" Set the text and force the editor to update.","sig":null,"attributes":[{"value":"/ Set the text and force the editor to update.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":677731,"byte_end":677779,"line_start":336,"line_end":336,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":677784,"byte_end":677787,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This should be rarely needed; the main use-case would be if you need","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":677792,"byte_end":677864,"line_start":338,"line_end":338,"column_start":5,"column_end":77}},{"value":"/ to manually set the text and then immediately do hit-testing or other","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":677869,"byte_end":677942,"line_start":339,"line_end":339,"column_start":5,"column_end":78}},{"value":"/ tasks that rely on having an up-to-date text layout.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":677947,"byte_end":678003,"line_start":340,"line_end":340,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4701},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":690149,"byte_end":690152,"line_start":635,"line_end":635,"column_start":12,"column_end":15},"name":"new","qualname":"<ValueTextBox<T>>::new","value":"pub fn new<impl Formatter<T> + 'static: Formatter<T> +\n'static>(TextBox<String>, impl Formatter<T> + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ValueTextBox` from a normal [`TextBox`] and a [`Formatter`].","sig":null,"attributes":[{"value":"/ Create a new `ValueTextBox` from a normal [`TextBox`] and a [`Formatter`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":689953,"byte_end":690031,"line_start":631,"line_end":631,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":690036,"byte_end":690039,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ [`TextBox`]: crate::widget::TextBox","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":690044,"byte_end":690083,"line_start":633,"line_end":633,"column_start":5,"column_end":44}},{"value":"/ [`Formatter`]: crate::text::format::Formatter","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":690088,"byte_end":690137,"line_start":634,"line_end":634,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4703},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":690728,"byte_end":690736,"line_start":652,"line_end":652,"column_start":12,"column_end":20},"name":"delegate","qualname":"<ValueTextBox<T>>::delegate","value":"pub fn delegate<impl ValidationDelegate + 'static: ValidationDelegate +\n'static>(Self, impl ValidationDelegate + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to set an optional [`ValidationDelegate`] on this\n textbox.\n","sig":null,"attributes":[{"value":"/ Builder-style method to set an optional [`ValidationDelegate`] on this","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":690625,"byte_end":690699,"line_start":650,"line_end":650,"column_start":5,"column_end":79}},{"value":"/ textbox.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":690704,"byte_end":690716,"line_start":651,"line_end":651,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4705},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":691212,"byte_end":691234,"line_start":663,"line_end":663,"column_start":12,"column_end":34},"name":"validate_while_editing","qualname":"<ValueTextBox<T>>::validate_while_editing","value":"pub fn validate_while_editing(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to set whether or not this text box validates\n its contents during editing.","sig":null,"attributes":[{"value":"/ Builder-style method to set whether or not this text box validates","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":690876,"byte_end":690946,"line_start":657,"line_end":657,"column_start":5,"column_end":75}},{"value":"/ its contents during editing.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":690951,"byte_end":690983,"line_start":658,"line_end":658,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":690988,"byte_end":690991,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ If `true` (the default) edits that fail validation","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":690996,"byte_end":691050,"line_start":660,"line_end":660,"column_start":5,"column_end":59}},{"value":"/ ([`Formatter::validate_partial_input`]) will be rejected. If `false`,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":691055,"byte_end":691128,"line_start":661,"line_end":661,"column_start":5,"column_end":78}},{"value":"/ those edits will be accepted, and the text box will be updated.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":691133,"byte_end":691200,"line_start":662,"line_end":662,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":4706},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":691555,"byte_end":691580,"line_start":672,"line_end":672,"column_start":12,"column_end":37},"name":"update_data_while_editing","qualname":"<ValueTextBox<T>>::update_data_while_editing","value":"pub fn update_data_while_editing(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to set whether or not this text box updates the\n incoming data during editing.","sig":null,"attributes":[{"value":"/ Builder-style method to set whether or not this text box updates the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":691343,"byte_end":691415,"line_start":668,"line_end":668,"column_start":5,"column_end":77}},{"value":"/ incoming data during editing.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":691420,"byte_end":691453,"line_start":669,"line_end":669,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":691458,"byte_end":691461,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ If `false` (the default) the data is only updated when editing completes.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":691466,"byte_end":691543,"line_start":671,"line_end":671,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":4740},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\view_switcher.rs","byte_start":701429,"byte_end":701441,"line_start":27,"line_end":27,"column_start":12,"column_end":24},"name":"ViewSwitcher","qualname":"::widget::view_switcher::ViewSwitcher","value":"ViewSwitcher {  }","parent":null,"children":[{"krate":0,"index":4743},{"krate":0,"index":4744},{"krate":0,"index":4745},{"krate":0,"index":4746}],"decl_id":null,"docs":" A widget that dynamically switches between two children.\n","sig":null,"attributes":[{"value":"/ A widget that dynamically switches between two children.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\view_switcher.rs","byte_start":701357,"byte_end":701417,"line_start":26,"line_end":26,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4750},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\view_switcher.rs","byte_start":702157,"byte_end":702160,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<ViewSwitcher<T, U>>::new","value":"pub fn new<impl Fn(&T, &Env) -> U + 'static: Fn(&T, &Env) -> U + 'static,\nimpl Fn(&U, &T, &Env) -> Box<dyn Widget<T>> + 'static: Fn(&U, &T, &Env) ->\nBox<dyn Widget<T>> +\n'static>(impl Fn(&T, &Env) -> U + 'static,\nimpl Fn(&U, &T, &Env) -> Box<dyn Widget<T>> + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new view switcher.","sig":null,"attributes":[{"value":"/ Create a new view switcher.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\view_switcher.rs","byte_start":701679,"byte_end":701710,"line_start":35,"line_end":35,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\view_switcher.rs","byte_start":701715,"byte_end":701718,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ The `child_picker` closure is called every time the application data changes.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\view_switcher.rs","byte_start":701723,"byte_end":701804,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ If the value it returns is the same as the one it returned during the previous","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\view_switcher.rs","byte_start":701809,"byte_end":701891,"line_start":38,"line_end":38,"column_start":5,"column_end":87}},{"value":"/ data change, nothing happens. If it returns a different value, then the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\view_switcher.rs","byte_start":701896,"byte_end":701971,"line_start":39,"line_end":39,"column_start":5,"column_end":80}},{"value":"/ `child_builder` closure is called with the new value.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\view_switcher.rs","byte_start":701976,"byte_end":702033,"line_start":40,"line_end":40,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\view_switcher.rs","byte_start":702038,"byte_end":702041,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ The `child_builder` closure creates a new child widget based on","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\view_switcher.rs","byte_start":702046,"byte_end":702113,"line_start":42,"line_end":42,"column_start":5,"column_end":72}},{"value":"/ the value passed to it.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\view_switcher.rs","byte_start":702118,"byte_end":702145,"line_start":43,"line_end":43,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":7331},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":706718,"byte_end":706726,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"WidgetId","qualname":"::widget::widget::WidgetId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A unique identifier for a single [`Widget`].","sig":null,"attributes":[{"value":"/ A unique identifier for a single [`Widget`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":705212,"byte_end":705260,"line_start":20,"line_end":20,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":705261,"byte_end":705264,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ `WidgetId`s are generated automatically for all widgets that participate","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":705265,"byte_end":705341,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ in layout. More specifically, each [`WidgetPod`] has a unique `WidgetId`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":705342,"byte_end":705419,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":705420,"byte_end":705423,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ These ids are used internally to route events, and can be used to communicate","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":705424,"byte_end":705505,"line_start":25,"line_end":25,"column_start":1,"column_end":82}},{"value":"/ between widgets, by submitting a command (as with [`EventCtx::submit_command`])","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":705506,"byte_end":705589,"line_start":26,"line_end":26,"column_start":1,"column_end":84}},{"value":"/ and passing a `WidgetId` as the [`Target`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":705590,"byte_end":705637,"line_start":27,"line_end":27,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":705638,"byte_end":705641,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ A widget can retrieve its id via methods on the various contexts, such as","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":705642,"byte_end":705719,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ [`LifeCycleCtx::widget_id`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":705720,"byte_end":705752,"line_start":30,"line_end":30,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":705753,"byte_end":705756,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ## Explicit `WidgetId`s.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":705757,"byte_end":705785,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":705786,"byte_end":705789,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Sometimes, you may want to know a widget's id when constructing the widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":705790,"byte_end":705869,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ You can give a widget an _explicit_ id by wrapping it in an [`IdentityWrapper`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":705870,"byte_end":705953,"line_start":35,"line_end":35,"column_start":1,"column_end":84}},{"value":"/ widget, or by using the [`WidgetExt::with_id`] convenience method.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":705954,"byte_end":706024,"line_start":36,"line_end":36,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":706025,"byte_end":706028,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ If you set a `WidgetId` directly, you are resposible for ensuring that it","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":706029,"byte_end":706106,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ is unique in time. That is: only one widget can exist with a given id at a","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":706107,"byte_end":706185,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ given time.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":706186,"byte_end":706201,"line_start":40,"line_end":40,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":706202,"byte_end":706205,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`Widget`]: trait.Widget.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":706206,"byte_end":706239,"line_start":42,"line_end":42,"column_start":1,"column_end":34}},{"value":"/ [`EventCtx::submit_command`]: struct.EventCtx.html#method.submit_command","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":706240,"byte_end":706316,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ [`Target`]: enum.Target.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":706317,"byte_end":706349,"line_start":44,"line_end":44,"column_start":1,"column_end":33}},{"value":"/ [`WidgetPod`]: struct.WidgetPod.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":706350,"byte_end":706390,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"/ [`LifeCycleCtx::widget_id`]: struct.LifeCycleCtx.html#method.widget_id","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":706391,"byte_end":706465,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"/ [`WidgetExt::with_id`]: trait.WidgetExt.html#method.with_id","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":706466,"byte_end":706529,"line_start":47,"line_end":47,"column_start":1,"column_end":64}},{"value":"/ [`IdentityWrapper`]: widget/struct.IdentityWrapper.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":706530,"byte_end":706589,"line_start":48,"line_end":48,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":4773},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":708490,"byte_end":708496,"line_start":92,"line_end":92,"column_start":11,"column_end":17},"name":"Widget","qualname":"::widget::widget::Widget","value":"Widget<T>","parent":null,"children":[{"krate":0,"index":4775},{"krate":0,"index":4776},{"krate":0,"index":4777},{"krate":0,"index":4778},{"krate":0,"index":4779},{"krate":0,"index":4780},{"krate":0,"index":4781}],"decl_id":null,"docs":" The trait implemented by all widgets.","sig":null,"attributes":[{"value":"/ The trait implemented by all widgets.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":706741,"byte_end":706782,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":706783,"byte_end":706786,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ All appearance and behavior for a widget is encapsulated in an","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":706787,"byte_end":706853,"line_start":55,"line_end":55,"column_start":1,"column_end":67}},{"value":"/ object that implements this trait.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":706854,"byte_end":706892,"line_start":56,"line_end":56,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":706893,"byte_end":706896,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The trait is parametrized by a type (`T`) for associated data.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":706897,"byte_end":706963,"line_start":58,"line_end":58,"column_start":1,"column_end":67}},{"value":"/ All trait methods are provided with access to this data, and","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":706964,"byte_end":707028,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/ in the case of [`event`] the reference is mutable, so that events","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":707029,"byte_end":707098,"line_start":60,"line_end":60,"column_start":1,"column_end":70}},{"value":"/ can directly update the data.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":707099,"byte_end":707132,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":707133,"byte_end":707136,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Whenever the application data changes, the framework traverses","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":707137,"byte_end":707203,"line_start":63,"line_end":63,"column_start":1,"column_end":67}},{"value":"/ the widget hierarchy with an [`update`] method. The framework","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":707204,"byte_end":707269,"line_start":64,"line_end":64,"column_start":1,"column_end":66}},{"value":"/ needs to know whether the data has actually changed or not, which","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":707270,"byte_end":707339,"line_start":65,"line_end":65,"column_start":1,"column_end":70}},{"value":"/ is why `T` has a [`Data`] bound.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":707340,"byte_end":707376,"line_start":66,"line_end":66,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":707377,"byte_end":707380,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ All the trait methods are provided with a corresponding context.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":707381,"byte_end":707449,"line_start":68,"line_end":68,"column_start":1,"column_end":69}},{"value":"/ The widget can request things and cause actions by calling methods","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":707450,"byte_end":707520,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ on that context.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":707521,"byte_end":707541,"line_start":70,"line_end":70,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":707542,"byte_end":707545,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ In addition, all trait methods are provided with an environment","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":707546,"byte_end":707613,"line_start":72,"line_end":72,"column_start":1,"column_end":68}},{"value":"/ ([`Env`]).","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":707614,"byte_end":707628,"line_start":73,"line_end":73,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":707629,"byte_end":707632,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Container widgets will generally not call `Widget` methods directly","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":707633,"byte_end":707704,"line_start":75,"line_end":75,"column_start":1,"column_end":72}},{"value":"/ on their child widgets, but rather will own their widget wrapped in","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":707705,"byte_end":707776,"line_start":76,"line_end":76,"column_start":1,"column_end":72}},{"value":"/ a [`WidgetPod`], and call the corresponding method on that. The","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":707777,"byte_end":707844,"line_start":77,"line_end":77,"column_start":1,"column_end":68}},{"value":"/ `WidgetPod` contains state and logic for these traversals. On the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":707845,"byte_end":707914,"line_start":78,"line_end":78,"column_start":1,"column_end":70}},{"value":"/ other hand, particularly light-weight containers might contain their","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":707915,"byte_end":707987,"line_start":79,"line_end":79,"column_start":1,"column_end":73}},{"value":"/ child `Widget` directly (when no layout or event flow logic is","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":707988,"byte_end":708054,"line_start":80,"line_end":80,"column_start":1,"column_end":67}},{"value":"/ needed), and in those cases will call these methods.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":708055,"byte_end":708111,"line_start":81,"line_end":81,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":708112,"byte_end":708115,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ As a general pattern, container widgets will call the corresponding","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":708116,"byte_end":708187,"line_start":83,"line_end":83,"column_start":1,"column_end":72}},{"value":"/ `WidgetPod` method on all their children. The `WidgetPod` applies","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":708188,"byte_end":708257,"line_start":84,"line_end":84,"column_start":1,"column_end":70}},{"value":"/ logic to determine whether to recurse, as needed.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":708258,"byte_end":708311,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":708312,"byte_end":708315,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ [`event`]: #tymethod.event","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":708316,"byte_end":708346,"line_start":87,"line_end":87,"column_start":1,"column_end":31}},{"value":"/ [`update`]: #tymethod.update","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":708347,"byte_end":708379,"line_start":88,"line_end":88,"column_start":1,"column_end":33}},{"value":"/ [`Data`]: trait.Data.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":708380,"byte_end":708409,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/ [`Env`]: struct.Env.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":708410,"byte_end":708438,"line_start":90,"line_end":90,"column_start":1,"column_end":29}},{"value":"/ [`WidgetPod`]: struct.WidgetPod.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":708439,"byte_end":708479,"line_start":91,"line_end":91,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":4775},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":708930,"byte_end":708935,"line_start":103,"line_end":103,"column_start":8,"column_end":13},"name":"event","qualname":"::widget::widget::Widget::event","value":"pub fn event(&mut Self, &mut EventCtx, &Event, &mut T, &Env)","parent":{"krate":0,"index":4773},"children":[],"decl_id":null,"docs":" Handle an event.","sig":null,"attributes":[{"value":"/ Handle an event.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":708506,"byte_end":708526,"line_start":93,"line_end":93,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":708531,"byte_end":708534,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ A number of different events (in the [`Event`] enum) are handled in this","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":708539,"byte_end":708615,"line_start":95,"line_end":95,"column_start":5,"column_end":81}},{"value":"/ method call. A widget can handle these events in a number of ways:","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":708620,"byte_end":708690,"line_start":96,"line_end":96,"column_start":5,"column_end":75}},{"value":"/ requesting things from the [`EventCtx`], mutating the data, or submitting","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":708695,"byte_end":708772,"line_start":97,"line_end":97,"column_start":5,"column_end":82}},{"value":"/ a [`Command`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":708777,"byte_end":708795,"line_start":98,"line_end":98,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":708800,"byte_end":708803,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ [`Event`]: enum.Event.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":708808,"byte_end":708838,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ [`EventCtx`]: struct.EventCtx.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":708843,"byte_end":708881,"line_start":101,"line_end":101,"column_start":5,"column_end":43}},{"value":"/ [`Command`]: struct.Command.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":708886,"byte_end":708922,"line_start":102,"line_end":102,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":4776},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":709731,"byte_end":709740,"line_start":119,"line_end":119,"column_start":8,"column_end":17},"name":"lifecycle","qualname":"::widget::widget::Widget::lifecycle","value":"pub fn lifecycle(&mut Self, &mut LifeCycleCtx, &LifeCycle, &T, &Env)","parent":{"krate":0,"index":4773},"children":[],"decl_id":null,"docs":" Handle a life cycle notification.","sig":null,"attributes":[{"value":"/ Handle a life cycle notification.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":709013,"byte_end":709050,"line_start":105,"line_end":105,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":709055,"byte_end":709058,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This method is called to notify your widget of certain special events,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":709063,"byte_end":709137,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ (available in the [`LifeCycle`] enum) that are generally related to","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":709142,"byte_end":709213,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ changes in the widget graph or in the state of your specific widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":709218,"byte_end":709290,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":709295,"byte_end":709298,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ A widget is not expected to mutate the application state in response","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":709303,"byte_end":709375,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/ to these events, but only to update its own internal state as required;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":709380,"byte_end":709455,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/ if a widget needs to mutate data, it can submit a [`Command`] that will","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":709460,"byte_end":709535,"line_start":113,"line_end":113,"column_start":5,"column_end":80}},{"value":"/ be executed at the next opportunity.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":709540,"byte_end":709580,"line_start":114,"line_end":114,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":709585,"byte_end":709588,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ [`LifeCycle`]: enum.LifeCycle.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":709593,"byte_end":709631,"line_start":116,"line_end":116,"column_start":5,"column_end":43}},{"value":"/ [`LifeCycleCtx`]: struct.LifeCycleCtx.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":709636,"byte_end":709682,"line_start":117,"line_end":117,"column_start":5,"column_end":51}},{"value":"/ [`Command`]: struct.Command.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":709687,"byte_end":709723,"line_start":118,"line_end":118,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":4777},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":711257,"byte_end":711263,"line_start":148,"line_end":148,"column_start":8,"column_end":14},"name":"update","qualname":"::widget::widget::Widget::update","value":"pub fn update(&mut Self, &mut UpdateCtx, &T, &T, &Env)","parent":{"krate":0,"index":4773},"children":[],"decl_id":null,"docs":" Update the widget's appearance in response to a change in the app's\n [`Data`] or [`Env`].","sig":null,"attributes":[{"value":"/ Update the widget's appearance in response to a change in the app's","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":709822,"byte_end":709893,"line_start":121,"line_end":121,"column_start":5,"column_end":76}},{"value":"/ [`Data`] or [`Env`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":709898,"byte_end":709922,"line_start":122,"line_end":122,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":709927,"byte_end":709930,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This method is called whenever the data or environment changes.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":709935,"byte_end":710002,"line_start":124,"line_end":124,"column_start":5,"column_end":72}},{"value":"/ When the appearance of the widget needs to be updated in response to","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":710007,"byte_end":710079,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ these changes, you can call [`request_paint`] or [`request_layout`] on","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":710084,"byte_end":710158,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ the provided [`UpdateCtx`] to schedule calls to [`paint`] and [`layout`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":710163,"byte_end":710239,"line_start":127,"line_end":127,"column_start":5,"column_end":81}},{"value":"/ as required.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":710244,"byte_end":710260,"line_start":128,"line_end":128,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":710265,"byte_end":710268,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ The previous value of the data is provided in case the widget wants to","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":710273,"byte_end":710347,"line_start":130,"line_end":130,"column_start":5,"column_end":79}},{"value":"/ compute a fine-grained delta; you should try to only request a new","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":710352,"byte_end":710422,"line_start":131,"line_end":131,"column_start":5,"column_end":75}},{"value":"/ layout or paint pass if it is actually required.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":710427,"byte_end":710479,"line_start":132,"line_end":132,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":710484,"byte_end":710487,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ To determine if the [`Env`] has changed, you can call [`env_changed`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":710492,"byte_end":710565,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ on the provided [`UpdateCtx`]; you can then call [`env_key_changed`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":710570,"byte_end":710642,"line_start":135,"line_end":135,"column_start":5,"column_end":77}},{"value":"/ with any keys that are used in your widget, to see if they have changed;","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":710647,"byte_end":710723,"line_start":136,"line_end":136,"column_start":5,"column_end":81}},{"value":"/ you can then request layout or paint as needed.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":710728,"byte_end":710779,"line_start":137,"line_end":137,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":710784,"byte_end":710787,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`Data`]: trait.Data.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":710792,"byte_end":710821,"line_start":139,"line_end":139,"column_start":5,"column_end":34}},{"value":"/ [`Env`]: struct.Env.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":710826,"byte_end":710854,"line_start":140,"line_end":140,"column_start":5,"column_end":33}},{"value":"/ [`UpdateCtx`]: struct.UpdateCtx.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":710859,"byte_end":710899,"line_start":141,"line_end":141,"column_start":5,"column_end":45}},{"value":"/ [`env_changed`]: struct.UpdateCtx.html#method.env_changed","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":710904,"byte_end":710965,"line_start":142,"line_end":142,"column_start":5,"column_end":66}},{"value":"/ [`env_key_changed`]: struct.UpdateCtx.html#method.env_changed","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":710970,"byte_end":711035,"line_start":143,"line_end":143,"column_start":5,"column_end":70}},{"value":"/ [`request_paint`]: struct.UpdateCtx.html#method.request_paint","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":711040,"byte_end":711105,"line_start":144,"line_end":144,"column_start":5,"column_end":70}},{"value":"/ [`request_layout`]: struct.UpdateCtx.html#method.request_layout","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":711110,"byte_end":711177,"line_start":145,"line_end":145,"column_start":5,"column_end":72}},{"value":"/ [`layout`]: #tymethod.layout","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":711182,"byte_end":711214,"line_start":146,"line_end":146,"column_start":5,"column_end":37}},{"value":"/ [`paint`]: #tymethod.paint","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":711219,"byte_end":711249,"line_start":147,"line_end":147,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4778},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":712340,"byte_end":712346,"line_start":170,"line_end":170,"column_start":8,"column_end":14},"name":"layout","qualname":"::widget::widget::Widget::layout","value":"pub fn layout(&mut Self, &mut LayoutCtx, &BoxConstraints, &T, &Env) -> Size","parent":{"krate":0,"index":4773},"children":[],"decl_id":null,"docs":" Compute layout.","sig":null,"attributes":[{"value":"/ Compute layout.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":711337,"byte_end":711356,"line_start":150,"line_end":150,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":711361,"byte_end":711364,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ A leaf widget should determine its size (subject to the provided","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":711369,"byte_end":711437,"line_start":152,"line_end":152,"column_start":5,"column_end":73}},{"value":"/ constraints) and return it.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":711442,"byte_end":711473,"line_start":153,"line_end":153,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":711478,"byte_end":711481,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ A container widget will recursively call [`WidgetPod::layout`] on its","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":711486,"byte_end":711559,"line_start":155,"line_end":155,"column_start":5,"column_end":78}},{"value":"/ child widgets, providing each of them an appropriate box constraint,","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":711564,"byte_end":711636,"line_start":156,"line_end":156,"column_start":5,"column_end":77}},{"value":"/ compute layout, then call [`set_origin`] on each of its children.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":711641,"byte_end":711710,"line_start":157,"line_end":157,"column_start":5,"column_end":74}},{"value":"/ Finally, it should return the size of the container. The container","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":711715,"byte_end":711785,"line_start":158,"line_end":158,"column_start":5,"column_end":75}},{"value":"/ can recurse in any order, which can be helpful to, for example, compute","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":711790,"byte_end":711865,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ the size of non-flex widgets first, to determine the amount of space","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":711870,"byte_end":711942,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ available for the flex widgets.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":711947,"byte_end":711982,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":711987,"byte_end":711990,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ For efficiency, a container should only invoke layout of a child widget","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":711995,"byte_end":712070,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/ once, though there is nothing enforcing this.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":712075,"byte_end":712124,"line_start":164,"line_end":164,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":712129,"byte_end":712132,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ The layout strategy is strongly inspired by Flutter.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":712137,"byte_end":712193,"line_start":166,"line_end":166,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":712198,"byte_end":712201,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ [`WidgetPod::layout`]: struct.WidgetPod.html#method.layout","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":712206,"byte_end":712268,"line_start":168,"line_end":168,"column_start":5,"column_end":67}},{"value":"/ [`set_origin`]: struct.WidgetPod.html#method.set_origin","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":712273,"byte_end":712332,"line_start":169,"line_end":169,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":4779},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":713067,"byte_end":713072,"line_start":185,"line_end":185,"column_start":8,"column_end":13},"name":"paint","qualname":"::widget::widget::Widget::paint","value":"pub fn paint(&mut Self, &mut PaintCtx, &T, &Env)","parent":{"krate":0,"index":4773},"children":[],"decl_id":null,"docs":" Paint the widget appearance.","sig":null,"attributes":[{"value":"/ Paint the widget appearance.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":712435,"byte_end":712467,"line_start":172,"line_end":172,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":712472,"byte_end":712475,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The [`PaintCtx`] derefs to something that implements the [`RenderContext`]","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":712480,"byte_end":712558,"line_start":174,"line_end":174,"column_start":5,"column_end":83}},{"value":"/ trait, which exposes various methods that the widget can use to paint","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":712563,"byte_end":712636,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ its appearance.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":712641,"byte_end":712660,"line_start":176,"line_end":176,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":712665,"byte_end":712668,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Container widgets can paint a background before recursing to their","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":712673,"byte_end":712743,"line_start":178,"line_end":178,"column_start":5,"column_end":75}},{"value":"/ children, or annotations (for example, scrollbars) by painting","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":712748,"byte_end":712814,"line_start":179,"line_end":179,"column_start":5,"column_end":71}},{"value":"/ afterwards. In addition, they can apply masks and transforms on","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":712819,"byte_end":712886,"line_start":180,"line_end":180,"column_start":5,"column_end":72}},{"value":"/ the render context, which is especially useful for scrolling.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":712891,"byte_end":712956,"line_start":181,"line_end":181,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":712961,"byte_end":712964,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ [`PaintCtx`]: struct.PaintCtx.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":712969,"byte_end":713007,"line_start":183,"line_end":183,"column_start":5,"column_end":43}},{"value":"/ [`RenderContext`]: trait.RenderContext.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":713012,"byte_end":713059,"line_start":184,"line_end":184,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4780},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":713306,"byte_end":713308,"line_start":190,"line_end":190,"column_start":8,"column_end":10},"name":"id","qualname":"::widget::widget::Widget::id","value":"pub fn id(&Self) -> Option<WidgetId>","parent":{"krate":0,"index":4773},"children":[],"decl_id":null,"docs":" Get the identity of the widget; this is basically only implemented by\n `IdentityWrapper`. Widgets should not implement this on their own.\n","sig":null,"attributes":[{"value":"/ Get the identity of the widget; this is basically only implemented by","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":713150,"byte_end":713223,"line_start":188,"line_end":188,"column_start":5,"column_end":78}},{"value":"/ `IdentityWrapper`. Widgets should not implement this on their own.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":713228,"byte_end":713298,"line_start":189,"line_end":189,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":4781},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":713503,"byte_end":713512,"line_start":197,"line_end":197,"column_start":8,"column_end":17},"name":"type_name","qualname":"::widget::widget::Widget::type_name","value":"pub fn type_name(&Self) -> &'static str","parent":{"krate":0,"index":4773},"children":[],"decl_id":null,"docs":" Get the (verbose) type name of the widget for debugging purposes.\n You should not override this method.\n","sig":null,"attributes":[{"value":"/ Get the (verbose) type name of the widget for debugging purposes.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":713381,"byte_end":713450,"line_start":195,"line_end":195,"column_start":5,"column_end":74}},{"value":"/ You should not override this method.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":713455,"byte_end":713495,"line_start":196,"line_end":196,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":4783},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":713986,"byte_end":713990,"line_start":211,"line_end":211,"column_start":12,"column_end":16},"name":"next","qualname":"<WidgetId>::next","value":"pub fn next() -> WidgetId","parent":null,"children":[],"decl_id":null,"docs":" Allocate a new, unique `WidgetId`.","sig":null,"attributes":[{"value":"/ Allocate a new, unique `WidgetId`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":713605,"byte_end":713643,"line_start":203,"line_end":203,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":713648,"byte_end":713651,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ All widgets are assigned ids automatically; you should only create","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":713656,"byte_end":713726,"line_start":205,"line_end":205,"column_start":5,"column_end":75}},{"value":"/ an explicit id if you need to know it ahead of time, for instance","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":713731,"byte_end":713800,"line_start":206,"line_end":206,"column_start":5,"column_end":74}},{"value":"/ if you want two sibling widgets to know each others' ids.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":713805,"byte_end":713866,"line_start":207,"line_end":207,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":713871,"byte_end":713874,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ You must ensure that a given `WidgetId` is only ever used for one","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":713879,"byte_end":713948,"line_start":209,"line_end":209,"column_start":5,"column_end":74}},{"value":"/ widget at a time.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":713953,"byte_end":713974,"line_start":210,"line_end":210,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4788},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":714607,"byte_end":714615,"line_start":226,"line_end":226,"column_start":18,"column_end":26},"name":"reserved","qualname":"<WidgetId>::reserved","value":"pub const fn reserved(u16) -> WidgetId","parent":null,"children":[],"decl_id":null,"docs":" Create a reserved `WidgetId`, suitable for reuse.","sig":null,"attributes":[{"value":"/ Create a reserved `WidgetId`, suitable for reuse.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":714164,"byte_end":714217,"line_start":217,"line_end":217,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":714222,"byte_end":714225,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring that this ID is in fact assigned","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":714230,"byte_end":714305,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/ to a single widget at any time, or your code may become haunted.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":714310,"byte_end":714378,"line_start":220,"line_end":220,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":714383,"byte_end":714386,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The actual inner representation of the returned `WidgetId` will not","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":714391,"byte_end":714462,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ be the same as the raw value that is passed in; it will be","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":714467,"byte_end":714529,"line_start":223,"line_end":223,"column_start":5,"column_end":67}},{"value":"/ `u64::max_value() - raw`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":714534,"byte_end":714563,"line_start":224,"line_end":224,"column_start":5,"column_end":34}},{"value":"allow(unsafe_code)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":714568,"byte_end":714589,"line_start":225,"line_end":225,"column_start":5,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":4871},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":716835,"byte_end":716844,"line_start":25,"line_end":25,"column_start":11,"column_end":20},"name":"WidgetExt","qualname":"::widget::widget_ext::WidgetExt","value":"WidgetExt<T: Data>: Widget<T> + Sized + 'static","parent":null,"children":[{"krate":0,"index":4873},{"krate":0,"index":4875},{"krate":0,"index":4876},{"krate":0,"index":4877},{"krate":0,"index":4878},{"krate":0,"index":4879},{"krate":0,"index":4880},{"krate":0,"index":4881},{"krate":0,"index":4882},{"krate":0,"index":4883},{"krate":0,"index":4884},{"krate":0,"index":4885},{"krate":0,"index":4886},{"krate":0,"index":4888},{"krate":0,"index":4891},{"krate":0,"index":4893},{"krate":0,"index":4895},{"krate":0,"index":4897},{"krate":0,"index":4899},{"krate":0,"index":4901},{"krate":0,"index":4902},{"krate":0,"index":4904},{"krate":0,"index":4907},{"krate":0,"index":4908},{"krate":0,"index":4909}],"decl_id":null,"docs":" A trait that provides extra methods for combining `Widget`s.\n","sig":null,"attributes":[{"value":"/ A trait that provides extra methods for combining `Widget`s.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":716760,"byte_end":716824,"line_start":24,"line_end":24,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":4873},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":717069,"byte_end":717076,"line_start":30,"line_end":30,"column_start":8,"column_end":15},"name":"padding","qualname":"::widget::widget_ext::WidgetExt::padding","value":"pub fn padding<impl Into<Insets>: Into<Insets>>(Self, impl Into<Insets>)\n-> Padding<T>","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Wrap this widget in a [`Padding`] widget with the given [`Insets`].","sig":null,"attributes":[{"value":"/ Wrap this widget in a [`Padding`] widget with the given [`Insets`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":716889,"byte_end":716960,"line_start":26,"line_end":26,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":716965,"byte_end":716968,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ [`Padding`]: widget/struct.Padding.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":716973,"byte_end":717016,"line_start":28,"line_end":28,"column_start":5,"column_end":48}},{"value":"/ [`Insets`]: kurbo/struct.Insets.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":717021,"byte_end":717061,"line_start":29,"line_end":29,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":4875},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":717301,"byte_end":717307,"line_start":37,"line_end":37,"column_start":8,"column_end":14},"name":"center","qualname":"::widget::widget_ext::WidgetExt::center","value":"pub fn center(Self) -> Align<T>","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Wrap this widget in an [`Align`] widget, configured to center it.","sig":null,"attributes":[{"value":"/ Wrap this widget in an [`Align`] widget, configured to center it.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":717172,"byte_end":717241,"line_start":34,"line_end":34,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":717246,"byte_end":717249,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ [`Align`]: widget/struct.Align.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":717254,"byte_end":717293,"line_start":36,"line_end":36,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4876},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":717499,"byte_end":717509,"line_start":44,"line_end":44,"column_start":8,"column_end":18},"name":"align_left","qualname":"::widget::widget_ext::WidgetExt::align_left","value":"pub fn align_left(Self) -> Align<T>","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Wrap this widget in an [`Align`] widget, configured to align left.","sig":null,"attributes":[{"value":"/ Wrap this widget in an [`Align`] widget, configured to align left.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":717369,"byte_end":717439,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":717444,"byte_end":717447,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`Align`]: widget/struct.Align.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":717452,"byte_end":717491,"line_start":43,"line_end":43,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4877},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":717698,"byte_end":717709,"line_start":51,"line_end":51,"column_start":8,"column_end":19},"name":"align_right","qualname":"::widget::widget_ext::WidgetExt::align_right","value":"pub fn align_right(Self) -> Align<T>","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Wrap this widget in an [`Align`] widget, configured to align right.","sig":null,"attributes":[{"value":"/ Wrap this widget in an [`Align`] widget, configured to align right.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":717567,"byte_end":717638,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":717643,"byte_end":717646,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ [`Align`]: widget/struct.Align.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":717651,"byte_end":717690,"line_start":50,"line_end":50,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4878},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":717904,"byte_end":717918,"line_start":58,"line_end":58,"column_start":8,"column_end":22},"name":"align_vertical","qualname":"::widget::widget_ext::WidgetExt::align_vertical","value":"pub fn align_vertical(Self, UnitPoint) -> Align<T>","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Wrap this widget in an [`Align`] widget, configured to align vertically.","sig":null,"attributes":[{"value":"/ Wrap this widget in an [`Align`] widget, configured to align vertically.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":717768,"byte_end":717844,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":717849,"byte_end":717852,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ [`Align`]: widget/struct.Align.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":717857,"byte_end":717896,"line_start":57,"line_end":57,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4879},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":718143,"byte_end":718159,"line_start":65,"line_end":65,"column_start":8,"column_end":24},"name":"align_horizontal","qualname":"::widget::widget_ext::WidgetExt::align_horizontal","value":"pub fn align_horizontal(Self, UnitPoint) -> Align<T>","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Wrap this widget in an [`Align`] widget, configured to align horizontally.","sig":null,"attributes":[{"value":"/ Wrap this widget in an [`Align`] widget, configured to align horizontally.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":718005,"byte_end":718083,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":718088,"byte_end":718091,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ [`Align`]: widget/struct.Align.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":718096,"byte_end":718135,"line_start":64,"line_end":64,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4880},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":718376,"byte_end":718385,"line_start":72,"line_end":72,"column_start":8,"column_end":17},"name":"fix_width","qualname":"::widget::widget_ext::WidgetExt::fix_width","value":"pub fn fix_width(Self, f64) -> SizedBox<T>","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Wrap this widget in a [`SizedBox`] with an explicit width.","sig":null,"attributes":[{"value":"/ Wrap this widget in a [`SizedBox`] with an explicit width.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":718248,"byte_end":718310,"line_start":69,"line_end":69,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":718315,"byte_end":718318,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ [`SizedBox`]: widget/struct.SizedBox.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":718323,"byte_end":718368,"line_start":71,"line_end":71,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4881},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":718601,"byte_end":718611,"line_start":79,"line_end":79,"column_start":8,"column_end":18},"name":"fix_height","qualname":"::widget::widget_ext::WidgetExt::fix_height","value":"pub fn fix_height(Self, f64) -> SizedBox<T>","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Wrap this widget in a [`SizedBox`] with an explicit width.","sig":null,"attributes":[{"value":"/ Wrap this widget in a [`SizedBox`] with an explicit width.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":718473,"byte_end":718535,"line_start":76,"line_end":76,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":718540,"byte_end":718543,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ [`SizedBox`]: widget/struct.SizedBox.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":718548,"byte_end":718593,"line_start":78,"line_end":78,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4882},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":718841,"byte_end":718849,"line_start":86,"line_end":86,"column_start":8,"column_end":16},"name":"fix_size","qualname":"::widget::widget_ext::WidgetExt::fix_size","value":"pub fn fix_size(Self, f64, f64) -> SizedBox<T>","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Wrap this widget in an [`SizedBox`] with an explicit width and height","sig":null,"attributes":[{"value":"/ Wrap this widget in an [`SizedBox`] with an explicit width and height","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":718702,"byte_end":718775,"line_start":83,"line_end":83,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":718780,"byte_end":718783,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [`SizedBox`]: widget/struct.SizedBox.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":718788,"byte_end":718833,"line_start":85,"line_end":85,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4883},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":719420,"byte_end":719426,"line_start":99,"line_end":99,"column_start":8,"column_end":14},"name":"expand","qualname":"::widget::widget_ext::WidgetExt::expand","value":"pub fn expand(Self) -> SizedBox<T>","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Wrap this widget in a [`SizedBox`] with an infinite width and height.","sig":null,"attributes":[{"value":"/ Wrap this widget in a [`SizedBox`] with an infinite width and height.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":718965,"byte_end":719038,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":719043,"byte_end":719046,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Only call this method if you want your widget to occupy all available","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":719051,"byte_end":719124,"line_start":92,"line_end":92,"column_start":5,"column_end":78}},{"value":"/ space. If you only care about expanding in one of width or height, use","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":719129,"byte_end":719203,"line_start":93,"line_end":93,"column_start":5,"column_end":79}},{"value":"/ [`expand_width`] or [`expand_height`] instead.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":719208,"byte_end":719258,"line_start":94,"line_end":94,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":719263,"byte_end":719266,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ [`expand_height`]: #method.expand_height","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":719271,"byte_end":719315,"line_start":96,"line_end":96,"column_start":5,"column_end":49}},{"value":"/ [`expand_width`]: #method.expand_width","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":719320,"byte_end":719362,"line_start":97,"line_end":97,"column_start":5,"column_end":47}},{"value":"/ [`SizedBox`]: widget/struct.SizedBox.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":719367,"byte_end":719412,"line_start":98,"line_end":98,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4884},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":719710,"byte_end":719722,"line_start":108,"line_end":108,"column_start":8,"column_end":20},"name":"expand_width","qualname":"::widget::widget_ext::WidgetExt::expand_width","value":"pub fn expand_width(Self) -> SizedBox<T>","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Wrap this widget in a [`SizedBox`] with an infinite width.","sig":null,"attributes":[{"value":"/ Wrap this widget in a [`SizedBox`] with an infinite width.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":719498,"byte_end":719560,"line_start":103,"line_end":103,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":719565,"byte_end":719568,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This will force the child to use all available space on the x-axis.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":719573,"byte_end":719644,"line_start":105,"line_end":105,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":719649,"byte_end":719652,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ [`SizedBox`]: widget/struct.SizedBox.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":719657,"byte_end":719702,"line_start":107,"line_end":107,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4885},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":720012,"byte_end":720025,"line_start":117,"line_end":117,"column_start":8,"column_end":21},"name":"expand_height","qualname":"::widget::widget_ext::WidgetExt::expand_height","value":"pub fn expand_height(Self) -> SizedBox<T>","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Wrap this widget in a [`SizedBox`] with an infinite width.","sig":null,"attributes":[{"value":"/ Wrap this widget in a [`SizedBox`] with an infinite width.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":719800,"byte_end":719862,"line_start":112,"line_end":112,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":719867,"byte_end":719870,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ This will force the child to use all available space on the y-axis.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":719875,"byte_end":719946,"line_start":114,"line_end":114,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":719951,"byte_end":719954,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ [`SizedBox`]: widget/struct.SizedBox.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":719959,"byte_end":720004,"line_start":116,"line_end":116,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4886},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":720393,"byte_end":720403,"line_start":127,"line_end":127,"column_start":8,"column_end":18},"name":"background","qualname":"::widget::widget_ext::WidgetExt::background","value":"pub fn background<impl Into<BackgroundBrush<T>>: Into<BackgroundBrush<T>>>(Self,\nimpl Into<BackgroundBrush<T>>) -> Container<T>","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Wrap this widget in a [`Container`] with the provided `background`.","sig":null,"attributes":[{"value":"/ Wrap this widget in a [`Container`] with the provided `background`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":720104,"byte_end":720175,"line_start":121,"line_end":121,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":720180,"byte_end":720183,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ See [`Container::background`] for more information.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":720188,"byte_end":720243,"line_start":123,"line_end":123,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":720248,"byte_end":720251,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ [`Container`]: widget/struct.Container.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":720256,"byte_end":720303,"line_start":125,"line_end":125,"column_start":5,"column_end":52}},{"value":"/ [`Container::background`]: widget/struct.Container.html#method.background","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":720308,"byte_end":720385,"line_start":126,"line_end":126,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":4888},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":720789,"byte_end":720795,"line_start":138,"line_end":138,"column_start":8,"column_end":14},"name":"border","qualname":"::widget::widget_ext::WidgetExt::border","value":"pub fn border<impl Into<KeyOrValue<Color>>: Into<KeyOrValue<Color>>,\nimpl Into<KeyOrValue<f64>>: Into<KeyOrValue<f64>>>(Self,\nimpl Into<KeyOrValue<Color>>, impl Into<KeyOrValue<f64>>) -> Container<T>","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Wrap this widget in a [`Container`] with the given border.","sig":null,"attributes":[{"value":"/ Wrap this widget in a [`Container`] with the given border.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":720524,"byte_end":720586,"line_start":131,"line_end":131,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":720591,"byte_end":720594,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Arguments can be either concrete values, or a [`Key`] of the respective","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":720599,"byte_end":720674,"line_start":133,"line_end":133,"column_start":5,"column_end":80}},{"value":"/ type.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":720679,"byte_end":720688,"line_start":134,"line_end":134,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":720693,"byte_end":720696,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ [`Container`]: widget/struct.Container.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":720701,"byte_end":720748,"line_start":136,"line_end":136,"column_start":5,"column_end":52}},{"value":"/ [`Key`]: struct.Key.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":720753,"byte_end":720781,"line_start":137,"line_end":137,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":4891},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":721193,"byte_end":721202,"line_start":151,"line_end":151,"column_start":8,"column_end":17},"name":"env_scope","qualname":"::widget::widget_ext::WidgetExt::env_scope","value":"pub fn env_scope<impl Fn(&mut Env, &T) + 'static: Fn(&mut Env, &T) -> () +\n'static>(Self, impl Fn(&mut Env, &T) + 'static) -> EnvScope<T, Self>","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Wrap this widget in a [`EnvScope`] widget, modifying the parent\n [`Env`] with the provided closure.","sig":null,"attributes":[{"value":"/ Wrap this widget in a [`EnvScope`] widget, modifying the parent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":720984,"byte_end":721051,"line_start":146,"line_end":146,"column_start":5,"column_end":72}},{"value":"/ [`Env`] with the provided closure.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":721056,"byte_end":721094,"line_start":147,"line_end":147,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":721099,"byte_end":721102,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ [`EnvScope`]: widget/struct.EnvScope.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":721107,"byte_end":721152,"line_start":149,"line_end":149,"column_start":5,"column_end":50}},{"value":"/ [`Env`]: struct.Env.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":721157,"byte_end":721185,"line_start":150,"line_end":150,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":4893},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":721433,"byte_end":721443,"line_start":158,"line_end":158,"column_start":8,"column_end":18},"name":"controller","qualname":"::widget::widget_ext::WidgetExt::controller","value":"pub fn controller<C: Controller<T, Self>>(Self, C) -> ControllerHost<Self, C>","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Wrap this widget with the provided [`Controller`].","sig":null,"attributes":[{"value":"/ Wrap this widget with the provided [`Controller`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":721310,"byte_end":721364,"line_start":155,"line_end":155,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":721369,"byte_end":721372,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ [`Controller`]: widget/trait.Controller.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":721377,"byte_end":721425,"line_start":157,"line_end":157,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4895},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":722073,"byte_end":722081,"line_start":172,"line_end":172,"column_start":8,"column_end":16},"name":"on_click","qualname":"::widget::widget_ext::WidgetExt::on_click","value":"pub fn on_click<impl Fn(&mut EventCtx, &mut T, &Env) + 'static: Fn(&mut EventCtx,\n&mut T, &Env) -> () +\n'static>(Self, impl Fn(&mut EventCtx, &mut T, &Env) + 'static)\n-> ControllerHost<Self, Click<T>>","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Control the events of this widget with a [`Click`] widget. The closure\n provided will be called when the widget is clicked with the left mouse\n button.","sig":null,"attributes":[{"value":"/ Control the events of this widget with a [`Click`] widget. The closure","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":721575,"byte_end":721649,"line_start":162,"line_end":162,"column_start":5,"column_end":79}},{"value":"/ provided will be called when the widget is clicked with the left mouse","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":721654,"byte_end":721728,"line_start":163,"line_end":163,"column_start":5,"column_end":79}},{"value":"/ button.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":721733,"byte_end":721744,"line_start":164,"line_end":164,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":721749,"byte_end":721752,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ The child widget will also be updated on [`LifeCycle::HotChanged`] and","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":721757,"byte_end":721831,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/ mouse down, which can be useful for painting based on `ctx.is_active()`","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":721836,"byte_end":721911,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ and `ctx.is_hot()`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":721916,"byte_end":721939,"line_start":168,"line_end":168,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":721944,"byte_end":721947,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ [`Click`]: widget/struct.Click.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":721952,"byte_end":721991,"line_start":170,"line_end":170,"column_start":5,"column_end":44}},{"value":"/ [`LifeCycle::HotChanged`]: enum.LifeCycle.html#variant.HotChanged","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":721996,"byte_end":722065,"line_start":171,"line_end":171,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":4897},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":722393,"byte_end":722411,"line_start":182,"line_end":182,"column_start":8,"column_end":26},"name":"debug_paint_layout","qualname":"::widget::widget_ext::WidgetExt::debug_paint_layout","value":"pub fn debug_paint_layout(Self) -> EnvScope<T, Self>","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Draw the [`layout`] `Rect`s of  this widget and its children.","sig":null,"attributes":[{"value":"/ Draw the [`layout`] `Rect`s of  this widget and its children.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":722258,"byte_end":722323,"line_start":179,"line_end":179,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":722328,"byte_end":722331,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ [`layout`]: trait.Widget.html#tymethod.layout","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":722336,"byte_end":722385,"line_start":181,"line_end":181,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4899},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":722864,"byte_end":722879,"line_start":193,"line_end":193,"column_start":8,"column_end":23},"name":"debug_widget_id","qualname":"::widget::widget_ext::WidgetExt::debug_widget_id","value":"pub fn debug_widget_id(Self) -> EnvScope<T, Self>","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Display the `WidgetId`s for this widget and its children, when hot.","sig":null,"attributes":[{"value":"/ Display the `WidgetId`s for this widget and its children, when hot.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":722522,"byte_end":722593,"line_start":186,"line_end":186,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":722598,"byte_end":722601,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ When this is `true`, widgets that are `hot` (are under the mouse cursor)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":722606,"byte_end":722682,"line_start":188,"line_end":188,"column_start":5,"column_end":81}},{"value":"/ will display their ids in their bottom right corner.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":722687,"byte_end":722743,"line_start":189,"line_end":189,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":722748,"byte_end":722751,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ These ids may overlap; in this case the id of a child will obscure","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":722756,"byte_end":722826,"line_start":191,"line_end":191,"column_start":5,"column_end":75}},{"value":"/ the id of its parent.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":722831,"byte_end":722856,"line_start":192,"line_end":192,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4901},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":723109,"byte_end":723127,"line_start":199,"line_end":199,"column_start":8,"column_end":26},"name":"debug_invalidation","qualname":"::widget::widget_ext::WidgetExt::debug_invalidation","value":"pub fn debug_invalidation(Self) -> DebugInvalidation<T, Self>","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Draw a color-changing rectangle over this widget, allowing you to see the\n invalidation regions.\n","sig":null,"attributes":[{"value":"/ Draw a color-changing rectangle over this widget, allowing you to see the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":722994,"byte_end":723071,"line_start":197,"line_end":197,"column_start":5,"column_end":82}},{"value":"/ invalidation regions.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":723076,"byte_end":723101,"line_start":198,"line_end":198,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4902},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":723546,"byte_end":723558,"line_start":209,"line_end":209,"column_start":8,"column_end":20},"name":"debug_widget","qualname":"::widget::widget_ext::WidgetExt::debug_widget","value":"pub fn debug_widget(Self) -> EnvScope<T, Self>","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Set the [`DEBUG_WIDGET`] env variable for this widget (and its descendants).","sig":null,"attributes":[{"value":"/ Set the [`DEBUG_WIDGET`] env variable for this widget (and its descendants).","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":723214,"byte_end":723294,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":723299,"byte_end":723302,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ This does nothing by default, but you can use this variable while","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":723307,"byte_end":723376,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ debugging to only print messages from particular instances of a widget.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":723381,"byte_end":723456,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":723461,"byte_end":723464,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ [`DEBUG_WIDGET`]: struct.Env.html#associatedconstant.DEBUG_WIDGET","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":723469,"byte_end":723538,"line_start":208,"line_end":208,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":4904},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":723843,"byte_end":723847,"line_start":218,"line_end":218,"column_start":8,"column_end":12},"name":"lens","qualname":"::widget::widget_ext::WidgetExt::lens","value":"pub fn lens<S: Data, L: Lens<S, T>>(Self, L) -> LensWrap<S, T, L, Self>","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Wrap this widget in a [`LensWrap`] widget for the provided [`Lens`].","sig":null,"attributes":[{"value":"/ Wrap this widget in a [`LensWrap`] widget for the provided [`Lens`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":723670,"byte_end":723742,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":723747,"byte_end":723750,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":723755,"byte_end":723758,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ [`LensWrap`]: struct.LensWrap.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":723763,"byte_end":723801,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ [`Lens`]: trait.Lens.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":723806,"byte_end":723835,"line_start":217,"line_end":217,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":4907},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":724089,"byte_end":724094,"line_start":224,"line_end":224,"column_start":8,"column_end":13},"name":"parse","qualname":"::widget::widget_ext::WidgetExt::parse","value":"pub fn parse(Self) -> Parse<Self> where Self: Widget<String>","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Parse a `Widget<String>`'s contents\n","sig":null,"attributes":[{"value":"/ Parse a `Widget<String>`'s contents","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":723961,"byte_end":724000,"line_start":222,"line_end":222,"column_start":5,"column_end":44}},{"value":"deprecated(since = \"0.7.0\", note = \"Use TextBox::with_formatter instead\")","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":724005,"byte_end":724081,"line_start":223,"line_end":223,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":4908},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":724565,"byte_end":724572,"line_start":240,"line_end":240,"column_start":8,"column_end":15},"name":"with_id","qualname":"::widget::widget_ext::WidgetExt::with_id","value":"pub fn with_id(Self, WidgetId) -> IdentityWrapper<Self>","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Assign the widget a specific [`WidgetId`].","sig":null,"attributes":[{"value":"/ Assign the widget a specific [`WidgetId`].","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":724198,"byte_end":724244,"line_start":231,"line_end":231,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":724249,"byte_end":724252,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ You must ensure that a given [`WidgetId`] is only ever used for","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":724257,"byte_end":724324,"line_start":233,"line_end":233,"column_start":5,"column_end":72}},{"value":"/ a single widget at a time.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":724329,"byte_end":724359,"line_start":234,"line_end":234,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":724364,"byte_end":724367,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ An id _may_ be reused over time; for instance if you replace one","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":724372,"byte_end":724440,"line_start":236,"line_end":236,"column_start":5,"column_end":73}},{"value":"/ widget with another, you may reuse the first widget's id.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":724445,"byte_end":724506,"line_start":237,"line_end":237,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":724511,"byte_end":724514,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ [`WidgetId`]: struct.WidgetId.html","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":724519,"byte_end":724557,"line_start":239,"line_end":239,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4909},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":724711,"byte_end":724716,"line_start":245,"line_end":245,"column_start":8,"column_end":13},"name":"boxed","qualname":"::widget::widget_ext::WidgetExt::boxed","value":"pub fn boxed(Self) -> Box<dyn Widget<T>>","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Wrap this widget in a `Box`.\n","sig":null,"attributes":[{"value":"/ Wrap this widget in a `Box`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":724671,"byte_end":724703,"line_start":244,"line_end":244,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4915},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":725053,"byte_end":725062,"line_start":258,"line_end":258,"column_start":12,"column_end":21},"name":"fix_width","qualname":"<SizedBox<T>>::fix_width","value":"pub fn fix_width(Self, f64) -> SizedBox<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4916},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":725142,"byte_end":725152,"line_start":262,"line_end":262,"column_start":12,"column_end":22},"name":"fix_height","qualname":"<SizedBox<T>>::fix_height","value":"pub fn fix_height(Self, f64) -> SizedBox<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4920},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":725374,"byte_end":725383,"line_start":270,"line_end":270,"column_start":12,"column_end":21},"name":"env_scope","qualname":"<EnvScope<T, W>>::env_scope","value":"pub fn env_scope<impl Fn(&mut Env, &T) + 'static: Fn(&mut Env, &T) -> () +\n'static>(Self, impl Fn(&mut Env, &T) + 'static) -> EnvScope<T, W>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4923},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":725704,"byte_end":725722,"line_start":282,"line_end":282,"column_start":12,"column_end":30},"name":"debug_paint_layout","qualname":"<EnvScope<T, W>>::debug_paint_layout","value":"pub fn debug_paint_layout(Self) -> EnvScope<T, W>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5113},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":399362,"byte_end":399369,"line_start":117,"line_end":117,"column_start":9,"column_end":16},"name":"prelude","qualname":"::widget::prelude","value":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","parent":null,"children":[{"krate":0,"index":5114},{"krate":0,"index":5115},{"krate":0,"index":5118},{"krate":0,"index":5119},{"krate":0,"index":5121},{"krate":0,"index":5124},{"krate":0,"index":5127},{"krate":0,"index":5130},{"krate":0,"index":5133},{"krate":0,"index":5136},{"krate":0,"index":5139},{"krate":0,"index":5142},{"krate":0,"index":5145},{"krate":0,"index":5148},{"krate":0,"index":5151},{"krate":0,"index":5154}],"decl_id":null,"docs":" The types required to implement a `Widget`.","sig":null,"attributes":[{"value":"/ The types required to implement a `Widget`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398588,"byte_end":398635,"line_start":96,"line_end":96,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398636,"byte_end":398639,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Structs","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398640,"byte_end":398653,"line_start":98,"line_end":98,"column_start":1,"column_end":14}},{"value":"/ [`BoxConstraints`](../../struct.BoxConstraints.html)\\","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398654,"byte_end":398711,"line_start":99,"line_end":99,"column_start":1,"column_end":58}},{"value":"/ [`Env`](../../struct.Env.html)\\","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398712,"byte_end":398747,"line_start":100,"line_end":100,"column_start":1,"column_end":36}},{"value":"/ [`EventCtx`](../../struct.EventCtx.html)\\","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398748,"byte_end":398793,"line_start":101,"line_end":101,"column_start":1,"column_end":46}},{"value":"/ [`LayoutCtx`](../../struct.LayoutCtx.html)\\","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398794,"byte_end":398841,"line_start":102,"line_end":102,"column_start":1,"column_end":48}},{"value":"/ [`LifeCycleCtx`](../../struct.LifeCycleCtx.html)\\","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398842,"byte_end":398895,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"/ [`PaintCtx`](../../struct.PaintCtx.html)\\","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398896,"byte_end":398941,"line_start":104,"line_end":104,"column_start":1,"column_end":46}},{"value":"/ [`Size`](../../struct.Size.html)\\","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398942,"byte_end":398979,"line_start":105,"line_end":105,"column_start":1,"column_end":38}},{"value":"/ [`UpdateCtx`](../../struct.UpdateCtx.html)\\","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":398980,"byte_end":399027,"line_start":106,"line_end":106,"column_start":1,"column_end":48}},{"value":"/ [`WidgetId`](../../struct.WidgetId.html)\\","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":399028,"byte_end":399073,"line_start":107,"line_end":107,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":399074,"byte_end":399077,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ # Enums","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":399078,"byte_end":399089,"line_start":109,"line_end":109,"column_start":1,"column_end":12}},{"value":"/ [`Event`](../../enum.Event.html)\\","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":399090,"byte_end":399127,"line_start":110,"line_end":110,"column_start":1,"column_end":38}},{"value":"/ [`LifeCycle`](../../enum.LifeCycle.html)\\","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":399128,"byte_end":399173,"line_start":111,"line_end":111,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":399174,"byte_end":399177,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ # Traits","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":399178,"byte_end":399190,"line_start":113,"line_end":113,"column_start":1,"column_end":13}},{"value":"/ [`RenderContext`](../../trait.RenderContext.html)\\","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":399191,"byte_end":399245,"line_start":114,"line_end":114,"column_start":1,"column_end":55}},{"value":"/ [`Widget`](../../trait.Widget.html)","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\mod.rs","byte_start":399246,"byte_end":399285,"line_start":115,"line_end":115,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5293},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\win_handler.rs","byte_start":729427,"byte_end":729439,"line_start":54,"line_end":54,"column_start":12,"column_end":24},"name":"DruidHandler","qualname":"::win_handler::DruidHandler","value":"DruidHandler {  }","parent":null,"children":[{"krate":0,"index":5295},{"krate":0,"index":5296}],"decl_id":null,"docs":" The struct implements the druid-shell `WinHandler` trait.","sig":null,"attributes":[{"value":"/ The struct implements the druid-shell `WinHandler` trait.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\win_handler.rs","byte_start":729205,"byte_end":729266,"line_start":48,"line_end":48,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\win_handler.rs","byte_start":729267,"byte_end":729270,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ One `DruidHandler` exists per window.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\win_handler.rs","byte_start":729271,"byte_end":729312,"line_start":50,"line_end":50,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\win_handler.rs","byte_start":729313,"byte_end":729316,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This is something of an internal detail and possibly we don't want to surface","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\win_handler.rs","byte_start":729317,"byte_end":729398,"line_start":52,"line_end":52,"column_start":1,"column_end":82}},{"value":"/ it publicly.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\win_handler.rs","byte_start":729399,"byte_end":729415,"line_start":53,"line_end":53,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":7355},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\window.rs","byte_start":759211,"byte_end":759219,"line_start":40,"line_end":40,"column_start":12,"column_end":20},"name":"WindowId","qualname":"::window::WindowId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A unique identifier for a window.\n","sig":null,"attributes":[{"value":"/ A unique identifier for a window.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\window.rs","byte_start":759094,"byte_end":759131,"line_start":38,"line_end":38,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5566},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\window.rs","byte_start":759283,"byte_end":759289,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"Window","qualname":"::window::Window","value":"Window {  }","parent":null,"children":[{"krate":0,"index":5568},{"krate":0,"index":5569},{"krate":0,"index":5570},{"krate":0,"index":5571},{"krate":0,"index":5572},{"krate":0,"index":5573},{"krate":0,"index":5574},{"krate":0,"index":5575},{"krate":0,"index":5576},{"krate":0,"index":5577},{"krate":0,"index":5578},{"krate":0,"index":5579},{"krate":0,"index":5580}],"decl_id":null,"docs":" Per-window state not owned by user code.\n","sig":null,"attributes":[{"value":"/ Per-window state not owned by user code.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\window.rs","byte_start":759227,"byte_end":759271,"line_start":42,"line_end":42,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":5617},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\window.rs","byte_start":774389,"byte_end":774393,"line_start":476,"line_end":476,"column_start":12,"column_end":16},"name":"next","qualname":"<WindowId>::next","value":"pub fn next() -> WindowId","parent":null,"children":[],"decl_id":null,"docs":" Allocate a new, unique window id.\n","sig":null,"attributes":[{"value":"/ Allocate a new, unique window id.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\window.rs","byte_start":774340,"byte_end":774377,"line_start":475,"line_end":475,"column_start":5,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":5913},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7995,"byte_end":8002,"line_start":227,"line_end":227,"column_start":10,"column_end":17},"name":"KeyCode","qualname":"::KeyCode","value":"KbKey","parent":null,"children":[],"decl_id":null,"docs":" The meaning (mapped value) of a keypress.","sig":null,"attributes":[{"value":"/ The meaning (mapped value) of a keypress.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7486,"byte_end":7531,"line_start":218,"line_end":218,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7532,"byte_end":7535,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ Note that in previous versions, the `KeyCode` field referred to the","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7536,"byte_end":7607,"line_start":220,"line_end":220,"column_start":1,"column_end":72}},{"value":"/ physical position of the key, rather than the mapped value. In most","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7608,"byte_end":7679,"line_start":221,"line_end":221,"column_start":1,"column_end":72}},{"value":"/ cases, applications should dispatch based on the value instead. This","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7680,"byte_end":7752,"line_start":222,"line_end":222,"column_start":1,"column_end":73}},{"value":"/ alias is provided to make that transition easy, but in any case make","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7753,"byte_end":7825,"line_start":223,"line_end":223,"column_start":1,"column_end":73}},{"value":"/ an explicit choice whether to use meaning or physical location and","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7826,"byte_end":7896,"line_start":224,"line_end":224,"column_start":1,"column_end":71}},{"value":"/ use the appropriate type.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7897,"byte_end":7926,"line_start":225,"line_end":225,"column_start":1,"column_end":30}},{"value":"deprecated(since = \"0.7.0\", note = \"Use KbKey instead\")","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":7927,"byte_end":7985,"line_start":226,"line_end":226,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":5914},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":8131,"byte_end":8143,"line_start":231,"line_end":231,"column_start":10,"column_end":22},"name":"KeyModifiers","qualname":"::KeyModifiers","value":"Modifiers","parent":null,"children":[],"decl_id":null,"docs":" See [`Modifiers`](struct.Modifiers.html).\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.7.0\", note = \"Use Modifiers instead\")","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":8013,"byte_end":8075,"line_start":229,"line_end":229,"column_start":1,"column_end":63}},{"value":"/ See [`Modifiers`](struct.Modifiers.html).","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":8076,"byte_end":8121,"line_start":230,"line_end":230,"column_start":1,"column_end":46}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":17613,"byte_end":17614,"line_start":239,"line_end":239,"column_start":61,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":17907,"byte_end":17912,"line_start":253,"line_end":253,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":18216,"byte_end":18221,"line_start":264,"line_end":264,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":19344,"byte_end":19348,"line_start":308,"line_end":308,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":19695,"byte_end":19699,"line_start":325,"line_end":325,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":20116,"byte_end":20120,"line_start":342,"line_end":342,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":20453,"byte_end":20456,"line_start":359,"line_end":359,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":20743,"byte_end":20746,"line_start":372,"line_end":372,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":21291,"byte_end":21296,"line_start":395,"line_end":395,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":21911,"byte_end":21914,"line_start":417,"line_end":417,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":22270,"byte_end":22275,"line_start":435,"line_end":435,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":22483,"byte_end":22488,"line_start":444,"line_end":444,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":23089,"byte_end":23097,"line_start":465,"line_end":465,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":23519,"byte_end":23524,"line_start":483,"line_end":483,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":23796,"byte_end":23801,"line_start":497,"line_end":497,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":24586,"byte_end":24590,"line_start":524,"line_end":524,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":24966,"byte_end":24969,"line_start":539,"line_end":539,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":25543,"byte_end":25551,"line_start":560,"line_end":560,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\util.rs","byte_start":27630,"byte_end":27637,"line_start":56,"line_end":56,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\util.rs","byte_start":28621,"byte_end":28628,"line_start":88,"line_end":88,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\util.rs","byte_start":28767,"byte_end":28774,"line_start":95,"line_end":95,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":31615,"byte_end":31628,"line_start":71,"line_end":71,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":32731,"byte_end":32742,"line_start":104,"line_end":104,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":35346,"byte_end":35358,"line_start":188,"line_end":188,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":35638,"byte_end":35650,"line_start":202,"line_end":202,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":39835,"byte_end":39845,"line_start":337,"line_end":337,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":411},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":44771,"byte_end":44782,"line_start":32,"line_end":32,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\bloom.rs","byte_start":50352,"byte_end":50357,"line_start":39,"line_end":39,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\bloom.rs","byte_start":52845,"byte_end":52850,"line_start":114,"line_end":114,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\bloom.rs","byte_start":53033,"byte_end":53038,"line_start":120,"line_end":120,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":55684,"byte_end":55698,"line_start":43,"line_end":43,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":527},{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":78943,"byte_end":78951,"line_start":302,"line_end":302,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":79280,"byte_end":79288,"line_start":314,"line_end":314,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":79604,"byte_end":79612,"line_start":326,"line_end":326,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":80230,"byte_end":80237,"line_start":343,"line_end":343,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":84467,"byte_end":84479,"line_start":467,"line_end":467,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":642},{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":85661,"byte_end":85670,"line_start":504,"line_end":504,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":85963,"byte_end":85970,"line_start":516,"line_end":516,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":86193,"byte_end":86201,"line_start":526,"line_end":526,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":86529,"byte_end":86537,"line_start":534,"line_end":534,"column_start":18,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":86562,"byte_end":86570,"line_start":535,"line_end":535,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":86634,"byte_end":86640,"line_start":541,"line_end":541,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":86867,"byte_end":86873,"line_start":550,"line_end":550,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":86974,"byte_end":86980,"line_start":556,"line_end":556,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":87087,"byte_end":87095,"line_start":562,"line_end":562,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":87210,"byte_end":87218,"line_start":568,"line_end":568,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":87328,"byte_end":87340,"line_start":574,"line_end":574,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":102821,"byte_end":102829,"line_start":395,"line_end":395,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":835},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":109397,"byte_end":109406,"line_start":566,"line_end":566,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":110720,"byte_end":110732,"line_start":605,"line_end":605,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":111620,"byte_end":111629,"line_start":629,"line_end":629,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":112917,"byte_end":112925,"line_start":659,"line_end":659,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":869},{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":115892,"byte_end":115904,"line_start":749,"line_end":749,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":875},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":117221,"byte_end":117229,"line_start":792,"line_end":792,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":117367,"byte_end":117375,"line_start":800,"line_end":800,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":123657,"byte_end":123666,"line_start":160,"line_end":160,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":131960,"byte_end":131969,"line_start":393,"line_end":393,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1043},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":155822,"byte_end":155831,"line_start":1013,"line_end":1013,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":156121,"byte_end":156132,"line_start":1023,"line_end":1023,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":160142,"byte_end":160154,"line_start":1129,"line_end":1129,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":168391,"byte_end":168394,"line_start":184,"line_end":184,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":168520,"byte_end":168522,"line_start":190,"line_end":190,"column_start":36,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":168635,"byte_end":168641,"line_start":196,"line_end":196,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":168874,"byte_end":168880,"line_start":206,"line_end":206,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":170596,"byte_end":170601,"line_start":270,"line_end":270,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1151}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":170699,"byte_end":170704,"line_start":276,"line_end":276,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1153}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":170835,"byte_end":170839,"line_start":282,"line_end":282,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":170970,"byte_end":170974,"line_start":288,"line_end":288,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":171123,"byte_end":171129,"line_start":294,"line_end":294,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1159}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":171337,"byte_end":171343,"line_start":302,"line_end":302,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":171568,"byte_end":171572,"line_start":311,"line_end":311,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":171797,"byte_end":171808,"line_start":320,"line_end":320,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":171962,"byte_end":171965,"line_start":326,"line_end":326,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":172295,"byte_end":172301,"line_start":336,"line_end":336,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":172798,"byte_end":172805,"line_start":350,"line_end":350,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":173176,"byte_end":173183,"line_start":362,"line_end":362,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":173474,"byte_end":173480,"line_start":374,"line_end":374,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":173631,"byte_end":173639,"line_start":380,"line_end":380,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":173864,"byte_end":173868,"line_start":389,"line_end":389,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":174003,"byte_end":174013,"line_start":395,"line_end":395,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1187}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":174133,"byte_end":174140,"line_start":401,"line_end":401,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1189}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":174301,"byte_end":174306,"line_start":407,"line_end":407,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":174435,"byte_end":174445,"line_start":413,"line_end":413,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":174542,"byte_end":174552,"line_start":419,"line_end":419,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":174649,"byte_end":174658,"line_start":425,"line_end":425,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1197}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":174755,"byte_end":174768,"line_start":431,"line_end":431,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":184066,"byte_end":184083,"line_start":121,"line_end":121,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1228},{"krate":0,"index":1230},{"krate":0,"index":1232},{"krate":0,"index":1234},{"krate":0,"index":1236},{"krate":0,"index":1237}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":193607,"byte_end":193610,"line_start":151,"line_end":151,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":193761,"byte_end":193771,"line_start":157,"line_end":157,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":194740,"byte_end":194743,"line_start":193,"line_end":193,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1310},{"krate":0,"index":1314},{"krate":0,"index":1317},{"krate":0,"index":1320},{"krate":0,"index":1322},{"krate":0,"index":1325},{"krate":0,"index":1328},{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":200340,"byte_end":200343,"line_start":351,"line_end":351,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1332}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":200909,"byte_end":200912,"line_start":372,"line_end":372,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1334}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":201381,"byte_end":201386,"line_start":388,"line_end":388,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1336},{"krate":0,"index":1338}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":202270,"byte_end":202275,"line_start":419,"line_end":419,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1341}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":202989,"byte_end":202992,"line_start":436,"line_end":436,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1343}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":203139,"byte_end":203146,"line_start":442,"line_end":442,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1345}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":203416,"byte_end":203419,"line_start":452,"line_end":452,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1349}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":204832,"byte_end":204838,"line_start":494,"line_end":494,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1352}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":204922,"byte_end":204936,"line_start":500,"line_end":500,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":205086,"byte_end":205100,"line_start":505,"line_end":505,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1356}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":205325,"byte_end":205340,"line_start":515,"line_end":515,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1358}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":205471,"byte_end":205486,"line_start":522,"line_end":522,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1360}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":205643,"byte_end":205657,"line_start":528,"line_end":528,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":205688,"byte_end":205703,"line_start":529,"line_end":529,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":206670,"byte_end":206680,"line_start":562,"line_end":562,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":207069,"byte_end":207079,"line_start":575,"line_end":575,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1369}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":207207,"byte_end":207217,"line_start":581,"line_end":581,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1372}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":220872,"byte_end":220877,"line_start":303,"line_end":303,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1411},{"krate":0,"index":1412}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":223487,"byte_end":223496,"line_start":374,"line_end":374,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":228098,"byte_end":228110,"line_start":57,"line_end":57,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":228899,"byte_end":228911,"line_start":87,"line_end":87,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1460}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":230151,"byte_end":230164,"line_start":122,"line_end":122,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1466}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":230327,"byte_end":230340,"line_start":128,"line_end":128,"column_start":28,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":234107,"byte_end":234118,"line_start":102,"line_end":102,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1551},{"krate":0,"index":1553}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":234816,"byte_end":234831,"line_start":124,"line_end":124,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1555},{"krate":0,"index":1557},{"krate":0,"index":1558}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":236968,"byte_end":236979,"line_start":181,"line_end":181,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1561},{"krate":0,"index":1564}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":241014,"byte_end":241029,"line_start":293,"line_end":293,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1577},{"krate":0,"index":1580},{"krate":0,"index":1582}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":243555,"byte_end":243564,"line_start":363,"line_end":363,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1588}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":243847,"byte_end":243859,"line_start":372,"line_end":372,"column_start":54,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":251461,"byte_end":251469,"line_start":171,"line_end":171,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1642},{"krate":0,"index":1644},{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1650},{"krate":0,"index":1651}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":253256,"byte_end":253264,"line_start":233,"line_end":233,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1655},{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":1661},{"krate":0,"index":1663},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1672}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":258540,"byte_end":258551,"line_start":390,"line_end":390,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1675}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":258707,"byte_end":258717,"line_start":397,"line_end":397,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":1687}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":259263,"byte_end":259271,"line_start":417,"line_end":417,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1690}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":260283,"byte_end":260292,"line_start":443,"line_end":443,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1696}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":260414,"byte_end":260423,"line_start":449,"line_end":449,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1699}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":276940,"byte_end":276950,"line_start":74,"line_end":74,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1811}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":277427,"byte_end":277433,"line_start":98,"line_end":98,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1813}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":278964,"byte_end":278979,"line_start":42,"line_end":42,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1861}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":281723,"byte_end":281738,"line_start":107,"line_end":107,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1863}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":281958,"byte_end":281973,"line_start":118,"line_end":118,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1877},{"krate":0,"index":1879}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":300121,"byte_end":300135,"line_start":96,"line_end":96,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1913},{"krate":0,"index":1914}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":302611,"byte_end":302618,"line_start":158,"line_end":158,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1924},{"krate":0,"index":1926},{"krate":0,"index":1930}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":306788,"byte_end":306792,"line_start":266,"line_end":266,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1934},{"krate":0,"index":1935}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":306975,"byte_end":306984,"line_start":276,"line_end":276,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1937},{"krate":0,"index":1939},{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":1943},{"krate":0,"index":1944},{"krate":0,"index":1945}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":308048,"byte_end":308055,"line_start":313,"line_end":313,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1949}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":319689,"byte_end":319695,"line_start":75,"line_end":75,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2004},{"krate":0,"index":2006},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2011},{"krate":0,"index":2012},{"krate":0,"index":2013},{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2017},{"krate":0,"index":2018},{"krate":0,"index":2019}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":322892,"byte_end":322895,"line_start":194,"line_end":194,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2021},{"krate":0,"index":2022},{"krate":0,"index":2024},{"krate":0,"index":2025},{"krate":0,"index":2026},{"krate":0,"index":2027},{"krate":0,"index":2028},{"krate":0,"index":2029},{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":2032},{"krate":0,"index":2033},{"krate":0,"index":2034},{"krate":0,"index":2035}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":326000,"byte_end":326012,"line_start":284,"line_end":284,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2050},{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":336060,"byte_end":336066,"line_start":41,"line_end":41,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2120},{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2123},{"krate":0,"index":2124}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":337372,"byte_end":337378,"line_start":84,"line_end":84,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2127},{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2132},{"krate":0,"index":2133},{"krate":0,"index":2134},{"krate":0,"index":2135},{"krate":0,"index":2136},{"krate":0,"index":2137},{"krate":0,"index":2138},{"krate":0,"index":2139},{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2143},{"krate":0,"index":2144},{"krate":0,"index":2146},{"krate":0,"index":2148},{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":2151}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":344749,"byte_end":344755,"line_start":295,"line_end":295,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2155}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":347409,"byte_end":347423,"line_start":35,"line_end":35,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2171},{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2174}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":348456,"byte_end":348470,"line_start":71,"line_end":71,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2176}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":353515,"byte_end":353525,"line_start":121,"line_end":121,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2204},{"krate":0,"index":2205},{"krate":0,"index":2207},{"krate":0,"index":2208},{"krate":0,"index":2209},{"krate":0,"index":2210}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":354764,"byte_end":354779,"line_start":164,"line_end":164,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2212}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":354993,"byte_end":355007,"line_start":171,"line_end":171,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2216}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":355184,"byte_end":355198,"line_start":180,"line_end":180,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2220}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":355483,"byte_end":355497,"line_start":190,"line_end":190,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2226}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":356038,"byte_end":356053,"line_start":211,"line_end":211,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2228}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":356198,"byte_end":356213,"line_start":217,"line_end":217,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2230}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":356360,"byte_end":356374,"line_start":223,"line_end":223,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2233}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":359206,"byte_end":359216,"line_start":70,"line_end":70,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2300},{"krate":0,"index":2301},{"krate":0,"index":2303},{"krate":0,"index":2305},{"krate":0,"index":2307},{"krate":0,"index":2309},{"krate":0,"index":2310}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":362155,"byte_end":362165,"line_start":162,"line_end":162,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2313},{"krate":0,"index":2314},{"krate":0,"index":2315},{"krate":0,"index":2316},{"krate":0,"index":2317},{"krate":0,"index":2319},{"krate":0,"index":2320},{"krate":0,"index":2322},{"krate":0,"index":2324},{"krate":0,"index":2326},{"krate":0,"index":2329},{"krate":0,"index":2331},{"krate":0,"index":2333}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":369721,"byte_end":369731,"line_start":366,"line_end":366,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2337}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":370267,"byte_end":370277,"line_start":384,"line_end":384,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2340}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":376265,"byte_end":376274,"line_start":36,"line_end":36,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2380},{"krate":0,"index":2381},{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2387},{"krate":0,"index":2388}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":379628,"byte_end":379636,"line_start":47,"line_end":47,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2427},{"krate":0,"index":2428},{"krate":0,"index":2430},{"krate":0,"index":2431},{"krate":0,"index":2432}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":380744,"byte_end":380750,"line_start":83,"line_end":83,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":380780,"byte_end":380788,"line_start":85,"line_end":85,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2436}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":380881,"byte_end":380887,"line_start":91,"line_end":91,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":380913,"byte_end":380916,"line_start":93,"line_end":93,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":380950,"byte_end":380958,"line_start":95,"line_end":95,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2440}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":383277,"byte_end":383291,"line_start":63,"line_end":63,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2464}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":383401,"byte_end":383415,"line_start":70,"line_end":70,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2466}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\align.rs","byte_start":400523,"byte_end":400528,"line_start":28,"line_end":28,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2630},{"krate":0,"index":2632},{"krate":0,"index":2634},{"krate":0,"index":2636},{"krate":0,"index":2638},{"krate":0,"index":2640}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\align.rs","byte_start":402213,"byte_end":402218,"line_start":79,"line_end":79,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2644},{"krate":0,"index":2645},{"krate":0,"index":2646},{"krate":0,"index":2647},{"krate":0,"index":2648}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":405308,"byte_end":405314,"line_start":32,"line_end":32,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2691},{"krate":0,"index":2693},{"krate":0,"index":2694},{"krate":0,"index":2696}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":407795,"byte_end":407801,"line_start":112,"line_end":112,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2700},{"krate":0,"index":2701},{"krate":0,"index":2702},{"krate":0,"index":2703},{"krate":0,"index":2704}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\checkbox.rs","byte_start":411783,"byte_end":411791,"line_start":27,"line_end":27,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2747},{"krate":0,"index":2749}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\checkbox.rs","byte_start":412159,"byte_end":412167,"line_start":41,"line_end":41,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2754},{"krate":0,"index":2755},{"krate":0,"index":2756}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\click.rs","byte_start":417214,"byte_end":417219,"line_start":43,"line_end":43,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2791}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\click.rs","byte_start":417482,"byte_end":417487,"line_start":52,"line_end":52,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2796},{"krate":0,"index":2797}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":419632,"byte_end":419640,"line_start":28,"line_end":28,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2824},{"krate":0,"index":2825},{"krate":0,"index":2826},{"krate":0,"index":2827}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":423683,"byte_end":423690,"line_start":125,"line_end":125,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2839},{"krate":0,"index":2840},{"krate":0,"index":2841},{"krate":0,"index":2842},{"krate":0,"index":2843},{"krate":0,"index":2844},{"krate":0,"index":2845},{"krate":0,"index":2846},{"krate":0,"index":2847},{"krate":0,"index":2848},{"krate":0,"index":2849},{"krate":0,"index":2850},{"krate":0,"index":2851},{"krate":0,"index":2852},{"krate":0,"index":2853}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":428876,"byte_end":428883,"line_start":265,"line_end":265,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2858},{"krate":0,"index":2859},{"krate":0,"index":2860},{"krate":0,"index":2861},{"krate":0,"index":2862}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\common.rs","byte_start":433459,"byte_end":433468,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2874}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\common.rs","byte_start":433539,"byte_end":433548,"line_start":43,"line_end":43,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2876}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":436034,"byte_end":436043,"line_start":35,"line_end":35,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2909},{"krate":0,"index":2911},{"krate":0,"index":2913},{"krate":0,"index":2915},{"krate":0,"index":2918},{"krate":0,"index":2921},{"krate":0,"index":2923}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":439213,"byte_end":439222,"line_start":131,"line_end":131,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2927},{"krate":0,"index":2928},{"krate":0,"index":2929},{"krate":0,"index":2930},{"krate":0,"index":2931}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":445027,"byte_end":445041,"line_start":101,"line_end":101,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2949}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":445268,"byte_end":445282,"line_start":108,"line_end":108,"column_start":58,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":2954},{"krate":0,"index":2955},{"krate":0,"index":2956},{"krate":0,"index":2957},{"krate":0,"index":2958},{"krate":0,"index":2959}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\either.rs","byte_start":447167,"byte_end":447173,"line_start":28,"line_end":28,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2980}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\either.rs","byte_start":447845,"byte_end":447851,"line_start":47,"line_end":47,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2986},{"krate":0,"index":2987},{"krate":0,"index":2988},{"krate":0,"index":2989},{"krate":0,"index":2990}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\either.rs","byte_start":449495,"byte_end":449501,"line_start":92,"line_end":92,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2993}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":450671,"byte_end":450679,"line_start":26,"line_end":26,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3014}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":451628,"byte_end":451636,"line_start":58,"line_end":58,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3019},{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3022},{"krate":0,"index":3023}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":460761,"byte_end":460765,"line_start":207,"line_end":207,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3063},{"krate":0,"index":3064},{"krate":0,"index":3065},{"krate":0,"index":3066},{"krate":0,"index":3067},{"krate":0,"index":3068},{"krate":0,"index":3069},{"krate":0,"index":3070},{"krate":0,"index":3071}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":465093,"byte_end":465103,"line_start":338,"line_end":338,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3073}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":465854,"byte_end":465865,"line_start":359,"line_end":359,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3077}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":466073,"byte_end":466077,"line_start":368,"line_end":368,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3081},{"krate":0,"index":3082},{"krate":0,"index":3083},{"krate":0,"index":3084},{"krate":0,"index":3085},{"krate":0,"index":3086},{"krate":0,"index":3087},{"krate":0,"index":3089},{"krate":0,"index":3092},{"krate":0,"index":3093},{"krate":0,"index":3095},{"krate":0,"index":3096},{"krate":0,"index":3097},{"krate":0,"index":3098},{"krate":0,"index":3099},{"krate":0,"index":3101},{"krate":0,"index":3104},{"krate":0,"index":3105},{"krate":0,"index":3107}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":474208,"byte_end":474212,"line_start":598,"line_end":598,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3110},{"krate":0,"index":3111},{"krate":0,"index":3112},{"krate":0,"index":3113},{"krate":0,"index":3116}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":482428,"byte_end":482446,"line_start":786,"line_end":786,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3118}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":483112,"byte_end":483119,"line_start":809,"line_end":809,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3127},{"krate":0,"index":3128}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":484417,"byte_end":484424,"line_start":845,"line_end":845,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3130},{"krate":0,"index":3131}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":486264,"byte_end":486270,"line_start":895,"line_end":895,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3134},{"krate":0,"index":3135},{"krate":0,"index":3136},{"krate":0,"index":3137},{"krate":0,"index":3138}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":486769,"byte_end":486779,"line_start":906,"line_end":906,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3140}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\identity_wrapper.rs","byte_start":491231,"byte_end":491246,"line_start":26,"line_end":26,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3152}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\identity_wrapper.rs","byte_start":491445,"byte_end":491460,"line_start":33,"line_end":33,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3156},{"krate":0,"index":3157},{"krate":0,"index":3158},{"krate":0,"index":3159},{"krate":0,"index":3160},{"krate":0,"index":3161}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":495070,"byte_end":495075,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3194},{"krate":0,"index":3195},{"krate":0,"index":3196},{"krate":0,"index":3197},{"krate":0,"index":3198},{"krate":0,"index":3199},{"krate":0,"index":3200},{"krate":0,"index":3201},{"krate":0,"index":3202}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":497677,"byte_end":497682,"line_start":166,"line_end":166,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3205},{"krate":0,"index":3206},{"krate":0,"index":3207},{"krate":0,"index":3208},{"krate":0,"index":3209}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\invalidation.rs","byte_start":509903,"byte_end":509920,"line_start":26,"line_end":26,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3227}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\invalidation.rs","byte_start":510182,"byte_end":510199,"line_start":37,"line_end":37,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3231},{"krate":0,"index":3232},{"krate":0,"index":3233},{"krate":0,"index":3234},{"krate":0,"index":3235},{"krate":0,"index":3236}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":516130,"byte_end":516138,"line_start":145,"line_end":145,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3308},{"krate":0,"index":3309},{"krate":0,"index":3311},{"krate":0,"index":3313},{"krate":0,"index":3315},{"krate":0,"index":3316},{"krate":0,"index":3317},{"krate":0,"index":3319},{"krate":0,"index":3321},{"krate":0,"index":3323},{"krate":0,"index":3324},{"krate":0,"index":3325},{"krate":0,"index":3327}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":520899,"byte_end":520904,"line_start":279,"line_end":279,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3330}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":521081,"byte_end":521086,"line_start":288,"line_end":288,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3333},{"krate":0,"index":3335},{"krate":0,"index":3337},{"krate":0,"index":3338},{"krate":0,"index":3340},{"krate":0,"index":3342},{"krate":0,"index":3344},{"krate":0,"index":3346},{"krate":0,"index":3347},{"krate":0,"index":3348}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":525713,"byte_end":525719,"line_start":420,"line_end":420,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3351},{"krate":0,"index":3352}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":525989,"byte_end":525996,"line_start":435,"line_end":435,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3355}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":526235,"byte_end":526244,"line_start":444,"line_end":444,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3358},{"krate":0,"index":3361},{"krate":0,"index":3362}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":527350,"byte_end":527355,"line_start":476,"line_end":476,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3365},{"krate":0,"index":3366},{"krate":0,"index":3367},{"krate":0,"index":3368},{"krate":0,"index":3369}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":528833,"byte_end":528841,"line_start":513,"line_end":513,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3372},{"krate":0,"index":3373},{"krate":0,"index":3374},{"krate":0,"index":3375},{"krate":0,"index":3376}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":530519,"byte_end":530527,"line_start":561,"line_end":561,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3379}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":530607,"byte_end":530612,"line_start":567,"line_end":567,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3382},{"krate":0,"index":3383}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":530743,"byte_end":530748,"line_start":574,"line_end":574,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3386}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":530862,"byte_end":530871,"line_start":579,"line_end":579,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3389}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":531003,"byte_end":531012,"line_start":585,"line_end":585,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3392}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":531144,"byte_end":531153,"line_start":591,"line_end":591,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3395}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":531298,"byte_end":531307,"line_start":597,"line_end":597,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3398}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":531468,"byte_end":531477,"line_start":603,"line_end":603,"column_start":58,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3402}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":533778,"byte_end":533786,"line_start":56,"line_end":56,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3429}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":534233,"byte_end":534241,"line_start":71,"line_end":71,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3435},{"krate":0,"index":3437},{"krate":0,"index":3439},{"krate":0,"index":3442},{"krate":0,"index":3444},{"krate":0,"index":3446}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\list.rs","byte_start":536867,"byte_end":536871,"line_start":39,"line_end":39,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3518},{"krate":0,"index":3522},{"krate":0,"index":3523},{"krate":0,"index":3525},{"krate":0,"index":3527}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\list.rs","byte_start":540177,"byte_end":540180,"line_start":148,"line_end":148,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3539},{"krate":0,"index":3541},{"krate":0,"index":3543}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\list.rs","byte_start":542108,"byte_end":542112,"line_start":219,"line_end":219,"column_start":45,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3555},{"krate":0,"index":3557},{"krate":0,"index":3559},{"krate":0,"index":3561},{"krate":0,"index":3563}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":546087,"byte_end":546094,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3589}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":547569,"byte_end":547576,"line_start":72,"line_end":72,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3594},{"krate":0,"index":3595},{"krate":0,"index":3596},{"krate":0,"index":3597},{"krate":0,"index":3598}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":552279,"byte_end":552286,"line_start":99,"line_end":99,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3650}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":552545,"byte_end":552560,"line_start":108,"line_end":108,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3654}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":553237,"byte_end":553244,"line_start":125,"line_end":125,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3657},{"krate":0,"index":3658},{"krate":0,"index":3659},{"krate":0,"index":3660},{"krate":0,"index":3661}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":553812,"byte_end":553827,"line_start":141,"line_end":141,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3664}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":553955,"byte_end":553970,"line_start":147,"line_end":147,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3667}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":554110,"byte_end":554125,"line_start":153,"line_end":153,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3670}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":554267,"byte_end":554282,"line_start":159,"line_end":159,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3673}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":554423,"byte_end":554438,"line_start":165,"line_end":165,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3676}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":554574,"byte_end":554589,"line_start":171,"line_end":171,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3679}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":554724,"byte_end":554739,"line_start":177,"line_end":177,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3682}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\parse.rs","byte_start":555979,"byte_end":555984,"line_start":28,"line_end":28,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3703}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\parse.rs","byte_start":556226,"byte_end":556231,"line_start":38,"line_end":38,"column_start":76,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":3707},{"krate":0,"index":3708},{"krate":0,"index":3709},{"krate":0,"index":3710},{"krate":0,"index":3711},{"krate":0,"index":3712}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\progress_bar.rs","byte_start":558490,"byte_end":558501,"line_start":26,"line_end":26,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3732}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\progress_bar.rs","byte_start":558628,"byte_end":558639,"line_start":33,"line_end":33,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3734},{"krate":0,"index":3735},{"krate":0,"index":3736},{"krate":0,"index":3737},{"krate":0,"index":3738}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\radio.rs","byte_start":561768,"byte_end":561778,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3773}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\radio.rs","byte_start":562535,"byte_end":562540,"line_start":53,"line_end":53,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3784}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\radio.rs","byte_start":562830,"byte_end":562835,"line_start":63,"line_end":63,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3788},{"krate":0,"index":3789},{"krate":0,"index":3790},{"krate":0,"index":3791},{"krate":0,"index":3792}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":567931,"byte_end":567949,"line_start":57,"line_end":57,"column_start":5,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3829}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":568273,"byte_end":568291,"line_start":69,"line_end":69,"column_start":5,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3835}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":568645,"byte_end":568663,"line_start":79,"line_end":79,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3839},{"krate":0,"index":3840},{"krate":0,"index":3841},{"krate":0,"index":3842}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":569233,"byte_end":569250,"line_start":99,"line_end":99,"column_start":37,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3854}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":569615,"byte_end":569632,"line_start":110,"line_end":110,"column_start":67,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":3859},{"krate":0,"index":3860},{"krate":0,"index":3861},{"krate":0,"index":3863}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572819,"byte_end":572824,"line_start":205,"line_end":205,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3880},{"krate":0,"index":3881},{"krate":0,"index":3884}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":574380,"byte_end":574385,"line_start":254,"line_end":254,"column_start":7,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3889}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":574776,"byte_end":574781,"line_start":263,"line_end":263,"column_start":5,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3896}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":575146,"byte_end":575151,"line_start":271,"line_end":271,"column_start":64,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":3900},{"krate":0,"index":3902},{"krate":0,"index":3904},{"krate":0,"index":3906},{"krate":0,"index":3908}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":577711,"byte_end":577717,"line_start":38,"line_end":38,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3934},{"krate":0,"index":3935},{"krate":0,"index":3936},{"krate":0,"index":3937},{"krate":0,"index":3938},{"krate":0,"index":3939},{"krate":0,"index":3940},{"krate":0,"index":3941},{"krate":0,"index":3942}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":579723,"byte_end":579729,"line_start":101,"line_end":101,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3946},{"krate":0,"index":3949},{"krate":0,"index":3950},{"krate":0,"index":3951},{"krate":0,"index":3953}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":583055,"byte_end":583063,"line_start":37,"line_end":37,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3970},{"krate":0,"index":3972},{"krate":0,"index":3973},{"krate":0,"index":3974},{"krate":0,"index":3975},{"krate":0,"index":3976},{"krate":0,"index":3977},{"krate":0,"index":3978}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":585774,"byte_end":585782,"line_start":129,"line_end":129,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3981},{"krate":0,"index":3982},{"krate":0,"index":3983},{"krate":0,"index":3984},{"krate":0,"index":3985},{"krate":0,"index":3986}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\slider.rs","byte_start":589240,"byte_end":589246,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4017},{"krate":0,"index":4018}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\slider.rs","byte_start":589771,"byte_end":589777,"line_start":60,"line_end":60,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4020},{"krate":0,"index":4021},{"krate":0,"index":4022}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\slider.rs","byte_start":590414,"byte_end":590420,"line_start":78,"line_end":78,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4024},{"krate":0,"index":4025},{"krate":0,"index":4026},{"krate":0,"index":4027},{"krate":0,"index":4028}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\spinner.rs","byte_start":596044,"byte_end":596051,"line_start":34,"line_end":34,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4060},{"krate":0,"index":4061},{"krate":0,"index":4063}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\spinner.rs","byte_start":596761,"byte_end":596768,"line_start":60,"line_end":60,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4066}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\spinner.rs","byte_start":596929,"byte_end":596936,"line_start":69,"line_end":69,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4069},{"krate":0,"index":4070},{"krate":0,"index":4071},{"krate":0,"index":4072},{"krate":0,"index":4073}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":600399,"byte_end":600404,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4118},{"krate":0,"index":4121},{"krate":0,"index":4124},{"krate":0,"index":4127},{"krate":0,"index":4128},{"krate":0,"index":4129},{"krate":0,"index":4130},{"krate":0,"index":4131},{"krate":0,"index":4132},{"krate":0,"index":4133},{"krate":0,"index":4134},{"krate":0,"index":4135},{"krate":0,"index":4136},{"krate":0,"index":4137},{"krate":0,"index":4138},{"krate":0,"index":4139},{"krate":0,"index":4140},{"krate":0,"index":4141}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":609400,"byte_end":609405,"line_start":267,"line_end":267,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4144},{"krate":0,"index":4145},{"krate":0,"index":4146},{"krate":0,"index":4147},{"krate":0,"index":4148}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\stepper.rs","byte_start":617832,"byte_end":617839,"line_start":42,"line_end":42,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4195},{"krate":0,"index":4196},{"krate":0,"index":4197},{"krate":0,"index":4198},{"krate":0,"index":4199},{"krate":0,"index":4200}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\stepper.rs","byte_start":619942,"byte_end":619949,"line_start":111,"line_end":111,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4202}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\stepper.rs","byte_start":620029,"byte_end":620036,"line_start":117,"line_end":117,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4204},{"krate":0,"index":4205},{"krate":0,"index":4206},{"krate":0,"index":4207},{"krate":0,"index":4208}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\switch.rs","byte_start":625417,"byte_end":625423,"line_start":39,"line_end":39,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4248}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\switch.rs","byte_start":625821,"byte_end":625827,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4250},{"krate":0,"index":4251},{"krate":0,"index":4252}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\switch.rs","byte_start":627223,"byte_end":627229,"line_start":89,"line_end":89,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4254},{"krate":0,"index":4255},{"krate":0,"index":4256},{"krate":0,"index":4257},{"krate":0,"index":4258}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":636144,"byte_end":636151,"line_start":44,"line_end":44,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4346}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":639483,"byte_end":639493,"line_start":127,"line_end":127,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4364}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":639599,"byte_end":639609,"line_start":133,"line_end":133,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4367}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":639796,"byte_end":639806,"line_start":140,"line_end":140,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4370},{"krate":0,"index":4371},{"krate":0,"index":4372},{"krate":0,"index":4373},{"krate":0,"index":4374},{"krate":0,"index":4375},{"krate":0,"index":4376},{"krate":0,"index":4377},{"krate":0,"index":4378},{"krate":0,"index":4380},{"krate":0,"index":4381}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":641749,"byte_end":641759,"line_start":204,"line_end":204,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4388}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":642313,"byte_end":642322,"line_start":224,"line_end":224,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4393}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":642818,"byte_end":642824,"line_start":244,"line_end":244,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4403},{"krate":0,"index":4404},{"krate":0,"index":4406}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":645089,"byte_end":645095,"line_start":304,"line_end":304,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4411},{"krate":0,"index":4412},{"krate":0,"index":4413},{"krate":0,"index":4414},{"krate":0,"index":4415}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":649162,"byte_end":649181,"line_start":435,"line_end":435,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4422},{"krate":0,"index":4423},{"krate":0,"index":4424},{"krate":0,"index":4425},{"krate":0,"index":4426}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":651122,"byte_end":651130,"line_start":503,"line_end":503,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4440},{"krate":0,"index":4441},{"krate":0,"index":4443},{"krate":0,"index":4444},{"krate":0,"index":4446}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":652231,"byte_end":652239,"line_start":540,"line_end":540,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4451},{"krate":0,"index":4452},{"krate":0,"index":4453},{"krate":0,"index":4454},{"krate":0,"index":4455}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":656532,"byte_end":656547,"line_start":673,"line_end":673,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4464}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":656736,"byte_end":656751,"line_start":682,"line_end":682,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4467},{"krate":0,"index":4468},{"krate":0,"index":4469},{"krate":0,"index":4470}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":657526,"byte_end":657540,"line_start":704,"line_end":704,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4472}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":657662,"byte_end":657676,"line_start":710,"line_end":710,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4474}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":658260,"byte_end":658268,"line_start":728,"line_end":728,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4476}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":658541,"byte_end":658551,"line_start":739,"line_end":739,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4483}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659758,"byte_end":659762,"line_start":792,"line_end":792,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4504}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":660013,"byte_end":660017,"line_start":800,"line_end":800,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4507}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":660112,"byte_end":660116,"line_start":806,"line_end":806,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4510},{"krate":0,"index":4511},{"krate":0,"index":4512},{"krate":0,"index":4513},{"krate":0,"index":4514},{"krate":0,"index":4515},{"krate":0,"index":4516},{"krate":0,"index":4519},{"krate":0,"index":4522}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":663361,"byte_end":663365,"line_start":909,"line_end":909,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4525},{"krate":0,"index":4526},{"krate":0,"index":4527},{"krate":0,"index":4528},{"krate":0,"index":4529}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":670303,"byte_end":670310,"line_start":126,"line_end":126,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4654}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":670643,"byte_end":670650,"line_start":137,"line_end":137,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4657},{"krate":0,"index":4658},{"krate":0,"index":4659},{"krate":0,"index":4661},{"krate":0,"index":4663},{"krate":0,"index":4664},{"krate":0,"index":4666},{"krate":0,"index":4668},{"krate":0,"index":4670},{"krate":0,"index":4672},{"krate":0,"index":4674},{"krate":0,"index":4675},{"krate":0,"index":4677},{"krate":0,"index":4678}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":676981,"byte_end":676988,"line_start":313,"line_end":313,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4680}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":677564,"byte_end":677571,"line_start":330,"line_end":330,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4685},{"krate":0,"index":4686},{"krate":0,"index":4687},{"krate":0,"index":4688},{"krate":0,"index":4689},{"krate":0,"index":4690}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":680912,"byte_end":680919,"line_start":413,"line_end":413,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4693},{"krate":0,"index":4694},{"krate":0,"index":4695},{"krate":0,"index":4696},{"krate":0,"index":4697}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":689931,"byte_end":689943,"line_start":630,"line_end":630,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4701},{"krate":0,"index":4703},{"krate":0,"index":4705},{"krate":0,"index":4706},{"krate":0,"index":4707},{"krate":0,"index":4708},{"krate":0,"index":4709},{"krate":0,"index":4710}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":693535,"byte_end":693547,"line_start":730,"line_end":730,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4713},{"krate":0,"index":4714},{"krate":0,"index":4715},{"krate":0,"index":4717},{"krate":0,"index":4718}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":700328,"byte_end":700335,"line_start":888,"line_end":888,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4721}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\view_switcher.rs","byte_start":701654,"byte_end":701666,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4750}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\view_switcher.rs","byte_start":702552,"byte_end":702564,"line_start":57,"line_end":57,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4756},{"krate":0,"index":4757},{"krate":0,"index":4758},{"krate":0,"index":4759},{"krate":0,"index":4760}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":713590,"byte_end":713598,"line_start":202,"line_end":202,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4783},{"krate":0,"index":4788},{"krate":0,"index":4789}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":714916,"byte_end":714919,"line_start":237,"line_end":237,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4792},{"krate":0,"index":4793},{"krate":0,"index":4794},{"krate":0,"index":4795},{"krate":0,"index":4796},{"krate":0,"index":4797},{"krate":0,"index":4798}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":724834,"byte_end":724835,"line_start":250,"line_end":250,"column_start":56,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":725028,"byte_end":725036,"line_start":257,"line_end":257,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4915},{"krate":0,"index":4916}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":725346,"byte_end":725354,"line_start":269,"line_end":269,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4920},{"krate":0,"index":4923}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\win_handler.rs","byte_start":730942,"byte_end":730949,"line_start":107,"line_end":107,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5321},{"krate":0,"index":5322},{"krate":0,"index":5323},{"krate":0,"index":5324},{"krate":0,"index":5326},{"krate":0,"index":5327},{"krate":0,"index":5328}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\win_handler.rs","byte_start":732014,"byte_end":732024,"line_start":142,"line_end":142,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5331}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\win_handler.rs","byte_start":732130,"byte_end":732138,"line_start":148,"line_end":148,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5334},{"krate":0,"index":5335}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\win_handler.rs","byte_start":732797,"byte_end":732802,"line_start":176,"line_end":176,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5338},{"krate":0,"index":5341},{"krate":0,"index":5342},{"krate":0,"index":5345},{"krate":0,"index":5347},{"krate":0,"index":5349},{"krate":0,"index":5351},{"krate":0,"index":5354},{"krate":0,"index":5356},{"krate":0,"index":5357},{"krate":0,"index":5358},{"krate":0,"index":5359},{"krate":0,"index":5360},{"krate":0,"index":5361},{"krate":0,"index":5362},{"krate":0,"index":5364},{"krate":0,"index":5365},{"krate":0,"index":5366},{"krate":0,"index":5367},{"krate":0,"index":5368},{"krate":0,"index":5369}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\win_handler.rs","byte_start":743454,"byte_end":743466,"line_start":470,"line_end":470,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5372}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\win_handler.rs","byte_start":743767,"byte_end":743775,"line_start":481,"line_end":481,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5375},{"krate":0,"index":5376},{"krate":0,"index":5377},{"krate":0,"index":5378},{"krate":0,"index":5379},{"krate":0,"index":5380},{"krate":0,"index":5381},{"krate":0,"index":5382},{"krate":0,"index":5383},{"krate":0,"index":5384},{"krate":0,"index":5385},{"krate":0,"index":5386},{"krate":0,"index":5387},{"krate":0,"index":5388},{"krate":0,"index":5392},{"krate":0,"index":5395},{"krate":0,"index":5398},{"krate":0,"index":5399},{"krate":0,"index":5400},{"krate":0,"index":5401},{"krate":0,"index":5402},{"krate":0,"index":5403},{"krate":0,"index":5404},{"krate":0,"index":5405},{"krate":0,"index":5406},{"krate":0,"index":5407},{"krate":0,"index":5408}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\win_handler.rs","byte_start":754188,"byte_end":754198,"line_start":770,"line_end":770,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5412}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\win_handler.rs","byte_start":754330,"byte_end":754342,"line_start":776,"line_end":776,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5415},{"krate":0,"index":5416},{"krate":0,"index":5417},{"krate":0,"index":5418},{"krate":0,"index":5419},{"krate":0,"index":5420},{"krate":0,"index":5421},{"krate":0,"index":5422},{"krate":0,"index":5423},{"krate":0,"index":5424},{"krate":0,"index":5425},{"krate":0,"index":5426},{"krate":0,"index":5427},{"krate":0,"index":5428},{"krate":0,"index":5429},{"krate":0,"index":5430},{"krate":0,"index":5431},{"krate":0,"index":5432},{"krate":0,"index":5433},{"krate":0,"index":5434},{"krate":0,"index":5435},{"krate":0,"index":5436}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\win_handler.rs","byte_start":757570,"byte_end":757577,"line_start":884,"line_end":884,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5439}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\window.rs","byte_start":759916,"byte_end":759922,"line_start":61,"line_end":61,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5583}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\window.rs","byte_start":760539,"byte_end":760545,"line_start":86,"line_end":86,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5586},{"krate":0,"index":5587},{"krate":0,"index":5588},{"krate":0,"index":5589},{"krate":0,"index":5590},{"krate":0,"index":5591},{"krate":0,"index":5592},{"krate":0,"index":5593},{"krate":0,"index":5594},{"krate":0,"index":5595},{"krate":0,"index":5596},{"krate":0,"index":5598},{"krate":0,"index":5599},{"krate":0,"index":5600},{"krate":0,"index":5605},{"krate":0,"index":5606},{"krate":0,"index":5610},{"krate":0,"index":5611}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\window.rs","byte_start":774325,"byte_end":774333,"line_start":474,"line_end":474,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5617}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":5310,"byte_end":5314,"line_start":146,"line_end":146,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":17}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":5541,"byte_end":5557,"line_start":166,"line_end":166,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":1814}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":5627,"byte_end":5631,"line_start":170,"line_end":170,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1881}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\mod.rs","byte_start":296394,"byte_end":296403,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1950}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\mod.rs","byte_start":296465,"byte_end":296471,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2177}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\mod.rs","byte_start":296493,"byte_end":296501,"line_start":24,"line_end":24,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2341}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\mod.rs","byte_start":296511,"byte_end":296520,"line_start":25,"line_end":25,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":2365}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":5641,"byte_end":5646,"line_start":171,"line_end":171,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2534}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lib.rs","byte_start":5656,"byte_end":5662,"line_start":172,"line_end":172,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2603}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":12491,"byte_end":12495,"line_start":56,"line_end":56,"column_start":42,"column_end":46},"kind":"SuperTrait","from":{"krate":0,"index":31},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":17613,"byte_end":17614,"line_start":239,"line_end":239,"column_start":61,"column_end":62},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":64},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":17907,"byte_end":17912,"line_start":253,"line_end":253,"column_start":19,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":65},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":18216,"byte_end":18221,"line_start":264,"line_end":264,"column_start":40,"column_end":45},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":65},"to":{"krate":0,"index":31}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":19344,"byte_end":19348,"line_start":308,"line_end":308,"column_start":23,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":5915},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":19695,"byte_end":19699,"line_start":325,"line_end":325,"column_start":36,"column_end":40},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":5915},"to":{"krate":0,"index":31}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":20116,"byte_end":20120,"line_start":342,"line_end":342,"column_start":39,"column_end":43},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":5915},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":20453,"byte_end":20456,"line_start":359,"line_end":359,"column_start":16,"column_end":19},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":5931},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":20743,"byte_end":20746,"line_start":372,"line_end":372,"column_start":45,"column_end":48},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":5931},"to":{"krate":0,"index":31}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":21291,"byte_end":21296,"line_start":395,"line_end":395,"column_start":40,"column_end":45},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":5947},"to":{"krate":0,"index":31}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":21911,"byte_end":21914,"line_start":417,"line_end":417,"column_start":43,"column_end":46},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":5954},"to":{"krate":0,"index":31}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":22270,"byte_end":22275,"line_start":435,"line_end":435,"column_start":9,"column_end":14},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":5961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":22483,"byte_end":22488,"line_start":444,"line_end":444,"column_start":35,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":5961},"to":{"krate":0,"index":31}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":23089,"byte_end":23097,"line_start":465,"line_end":465,"column_start":32,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":5972},"to":{"krate":0,"index":31}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":23519,"byte_end":23524,"line_start":483,"line_end":483,"column_start":9,"column_end":14},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":5979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":23796,"byte_end":23801,"line_start":497,"line_end":497,"column_start":35,"column_end":40},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":5979},"to":{"krate":0,"index":31}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":24586,"byte_end":24590,"line_start":524,"line_end":524,"column_start":25,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":5990},"to":{"krate":0,"index":31}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":24966,"byte_end":24969,"line_start":539,"line_end":539,"column_start":27,"column_end":30},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":5999},"to":{"krate":0,"index":31}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\lens\\lens.rs","byte_start":25543,"byte_end":25551,"line_start":560,"line_end":560,"column_start":34,"column_end":42},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":6006},"to":{"krate":0,"index":31}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\util.rs","byte_start":27630,"byte_end":27637,"line_start":56,"line_end":56,"column_start":28,"column_end":35},"kind":{"Impl":{"id":18}},"from":{"krate":1,"index":1294},"to":{"krate":0,"index":260}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\util.rs","byte_start":28621,"byte_end":28628,"line_start":88,"line_end":88,"column_start":6,"column_end":13},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":6018},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\util.rs","byte_start":28767,"byte_end":28774,"line_start":95,"line_end":95,"column_start":21,"column_end":28},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":6018},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":31615,"byte_end":31628,"line_start":71,"line_end":71,"column_start":15,"column_end":28},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":32731,"byte_end":32742,"line_start":104,"line_end":104,"column_start":15,"column_end":26},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":35346,"byte_end":35358,"line_start":188,"line_end":188,"column_start":18,"column_end":30},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":345},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":35638,"byte_end":35650,"line_start":202,"line_end":202,"column_start":6,"column_end":18},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app.rs","byte_start":39835,"byte_end":39845,"line_start":337,"line_end":337,"column_start":15,"column_end":25},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\app_delegate.rs","byte_start":44771,"byte_end":44782,"line_start":32,"line_end":32,"column_start":10,"column_end":21},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\bloom.rs","byte_start":50352,"byte_end":50357,"line_start":39,"line_end":39,"column_start":24,"column_end":29},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":6037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\bloom.rs","byte_start":52845,"byte_end":52850,"line_start":114,"line_end":114,"column_start":37,"column_end":42},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":6037},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\bloom.rs","byte_start":53033,"byte_end":53038,"line_start":120,"line_end":120,"column_start":29,"column_end":34},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":6037},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\box_constraints.rs","byte_start":55684,"byte_end":55698,"line_start":43,"line_end":43,"column_start":6,"column_end":20},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":6047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":78943,"byte_end":78951,"line_start":302,"line_end":302,"column_start":6,"column_end":14},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":6055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":79280,"byte_end":79288,"line_start":314,"line_end":314,"column_start":9,"column_end":17},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":6055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":79604,"byte_end":79612,"line_start":326,"line_end":326,"column_start":14,"column_end":22},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":6055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":80230,"byte_end":80237,"line_start":343,"line_end":343,"column_start":6,"column_end":13},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":6074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":84467,"byte_end":84479,"line_start":467,"line_end":467,"column_start":6,"column_end":18},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":6082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":85661,"byte_end":85670,"line_start":504,"line_end":504,"column_start":14,"column_end":23},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":85963,"byte_end":85970,"line_start":516,"line_end":516,"column_start":25,"column_end":32},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":6074},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":86193,"byte_end":86201,"line_start":526,"line_end":526,"column_start":31,"column_end":39},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":6055},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":86529,"byte_end":86537,"line_start":534,"line_end":534,"column_start":18,"column_end":26},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":6055},"to":{"krate":2,"index":3067}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":86562,"byte_end":86570,"line_start":535,"line_end":535,"column_start":19,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":6055},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":86634,"byte_end":86640,"line_start":541,"line_end":541,"column_start":6,"column_end":12},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":6088},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":86867,"byte_end":86873,"line_start":550,"line_end":550,"column_start":25,"column_end":31},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":6088},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":86974,"byte_end":86980,"line_start":556,"line_end":556,"column_start":25,"column_end":31},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":6088},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":87087,"byte_end":87095,"line_start":562,"line_end":562,"column_start":31,"column_end":39},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":7355},"to":{"krate":2,"index":2960}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":87210,"byte_end":87218,"line_start":568,"line_end":568,"column_start":31,"column_end":39},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":7331},"to":{"krate":2,"index":2960}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\command.rs","byte_start":87328,"byte_end":87340,"line_start":574,"line_end":574,"column_start":26,"column_end":38},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":6082},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":102821,"byte_end":102829,"line_start":395,"line_end":395,"column_start":6,"column_end":14},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":109397,"byte_end":109406,"line_start":566,"line_end":566,"column_start":6,"column_end":15},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":110720,"byte_end":110732,"line_start":605,"line_end":605,"column_start":6,"column_end":18},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":111620,"byte_end":111629,"line_start":629,"line_end":629,"column_start":6,"column_end":15},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":814},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":112917,"byte_end":112925,"line_start":659,"line_end":659,"column_start":6,"column_end":14},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":115892,"byte_end":115904,"line_start":749,"line_end":749,"column_start":10,"column_end":22},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":117221,"byte_end":117229,"line_start":792,"line_end":792,"column_start":20,"column_end":28},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":824},"to":{"krate":2,"index":3276}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\contexts.rs","byte_start":117367,"byte_end":117375,"line_start":800,"line_end":800,"column_start":23,"column_end":31},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":824},"to":{"krate":2,"index":3289}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":123657,"byte_end":123666,"line_start":160,"line_end":160,"column_start":23,"column_end":32},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":131960,"byte_end":131969,"line_start":393,"line_end":393,"column_start":29,"column_end":38},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":155822,"byte_end":155831,"line_start":1013,"line_end":1013,"column_start":33,"column_end":42},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":156121,"byte_end":156132,"line_start":1023,"line_end":1023,"column_start":6,"column_end":17},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":6209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\core.rs","byte_start":160142,"byte_end":160154,"line_start":1129,"line_end":1129,"column_start":6,"column_end":18},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":6249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":166129,"byte_end":166134,"line_start":107,"line_end":107,"column_start":17,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":2679},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":168391,"byte_end":168394,"line_start":184,"line_end":184,"column_start":36,"column_end":39},"kind":{"Impl":{"id":107}},"from":{"krate":5,"index":5980},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":168520,"byte_end":168522,"line_start":190,"line_end":190,"column_start":36,"column_end":38},"kind":{"Impl":{"id":108}},"from":{"krate":5,"index":4659},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":168635,"byte_end":168641,"line_start":196,"line_end":196,"column_start":24,"column_end":30},"kind":{"Impl":{"id":109}},"from":{"krate":2,"index":46283},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":168874,"byte_end":168880,"line_start":206,"line_end":206,"column_start":33,"column_end":39},"kind":{"Impl":{"id":110}},"from":{"krate":2,"index":46410},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":170596,"byte_end":170601,"line_start":270,"line_end":270,"column_start":15,"column_end":20},"kind":{"Impl":{"id":111}},"from":{"krate":17,"index":2969},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":170699,"byte_end":170704,"line_start":276,"line_end":276,"column_start":22,"column_end":27},"kind":{"Impl":{"id":112}},"from":{"krate":18,"index":1847},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":170835,"byte_end":170839,"line_start":282,"line_end":282,"column_start":22,"column_end":26},"kind":{"Impl":{"id":113}},"from":{"krate":18,"index":1942},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":170970,"byte_end":170974,"line_start":288,"line_end":288,"column_start":22,"column_end":26},"kind":{"Impl":{"id":114}},"from":{"krate":18,"index":1900},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":171123,"byte_end":171129,"line_start":294,"line_end":294,"column_start":22,"column_end":28},"kind":{"Impl":{"id":115}},"from":{"krate":18,"index":1678},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":171337,"byte_end":171343,"line_start":302,"line_end":302,"column_start":22,"column_end":28},"kind":{"Impl":{"id":116}},"from":{"krate":18,"index":1811},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":171568,"byte_end":171572,"line_start":311,"line_end":311,"column_start":22,"column_end":26},"kind":{"Impl":{"id":117}},"from":{"krate":18,"index":1872},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":171797,"byte_end":171808,"line_start":320,"line_end":320,"column_start":22,"column_end":33},"kind":{"Impl":{"id":118}},"from":{"krate":18,"index":1886},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":171962,"byte_end":171965,"line_start":326,"line_end":326,"column_start":22,"column_end":25},"kind":{"Impl":{"id":119}},"from":{"krate":18,"index":1692},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":172295,"byte_end":172301,"line_start":336,"line_end":336,"column_start":22,"column_end":28},"kind":{"Impl":{"id":120}},"from":{"krate":18,"index":1716},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":172798,"byte_end":172805,"line_start":350,"line_end":350,"column_start":22,"column_end":29},"kind":{"Impl":{"id":121}},"from":{"krate":18,"index":1743},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":173176,"byte_end":173183,"line_start":362,"line_end":362,"column_start":22,"column_end":29},"kind":{"Impl":{"id":122}},"from":{"krate":18,"index":1707},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":173474,"byte_end":173480,"line_start":374,"line_end":374,"column_start":22,"column_end":28},"kind":{"Impl":{"id":123}},"from":{"krate":18,"index":1770},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":173631,"byte_end":173639,"line_start":380,"line_end":380,"column_start":22,"column_end":30},"kind":{"Impl":{"id":124}},"from":{"krate":18,"index":1784},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":173864,"byte_end":173868,"line_start":389,"line_end":389,"column_start":22,"column_end":26},"kind":{"Impl":{"id":125}},"from":{"krate":18,"index":1827},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":174003,"byte_end":174013,"line_start":395,"line_end":395,"column_start":22,"column_end":32},"kind":{"Impl":{"id":126}},"from":{"krate":18,"index":1839},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":174133,"byte_end":174140,"line_start":401,"line_end":401,"column_start":22,"column_end":29},"kind":{"Impl":{"id":127}},"from":{"krate":18,"index":1859},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":174301,"byte_end":174306,"line_start":407,"line_end":407,"column_start":21,"column_end":26},"kind":{"Impl":{"id":128}},"from":{"krate":21,"index":766},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":174435,"byte_end":174445,"line_start":413,"line_end":413,"column_start":21,"column_end":31},"kind":{"Impl":{"id":129}},"from":{"krate":21,"index":809},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":174542,"byte_end":174552,"line_start":419,"line_end":419,"column_start":21,"column_end":31},"kind":{"Impl":{"id":130}},"from":{"krate":21,"index":852},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":174649,"byte_end":174658,"line_start":425,"line_end":425,"column_start":21,"column_end":30},"kind":{"Impl":{"id":131}},"from":{"krate":21,"index":870},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\data.rs","byte_start":174755,"byte_end":174768,"line_start":431,"line_end":431,"column_start":21,"column_end":34},"kind":{"Impl":{"id":132}},"from":{"krate":21,"index":1066},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\dialog.rs","byte_start":184066,"byte_end":184083,"line_start":121,"line_end":121,"column_start":6,"column_end":23},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":6396},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":193607,"byte_end":193610,"line_start":151,"line_end":151,"column_start":35,"column_end":38},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":6417},"to":{"krate":0,"index":1292}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":193761,"byte_end":193771,"line_start":157,"line_end":157,"column_start":24,"column_end":34},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":6472},"to":{"krate":0,"index":1292}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":194074,"byte_end":194079,"line_start":167,"line_end":167,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":1301}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":194082,"byte_end":194087,"line_start":167,"line_end":167,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2679},"to":{"krate":0,"index":1301}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":194090,"byte_end":194094,"line_start":167,"line_end":167,"column_start":38,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":2960},"to":{"krate":0,"index":1301}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":194740,"byte_end":194743,"line_start":193,"line_end":193,"column_start":6,"column_end":9},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":6406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":200340,"byte_end":200343,"line_start":351,"line_end":351,"column_start":9,"column_end":12},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":6417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":200909,"byte_end":200912,"line_start":372,"line_end":372,"column_start":6,"column_end":9},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":6417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":201381,"byte_end":201386,"line_start":388,"line_end":388,"column_start":6,"column_end":11},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":6433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":202270,"byte_end":202275,"line_start":419,"line_end":419,"column_start":16,"column_end":21},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":6433},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":202989,"byte_end":202992,"line_start":436,"line_end":436,"column_start":15,"column_end":18},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":6406},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":203139,"byte_end":203146,"line_start":442,"line_end":442,"column_start":15,"column_end":22},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":6411},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":203416,"byte_end":203419,"line_start":452,"line_end":452,"column_start":18,"column_end":21},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":6406},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":204832,"byte_end":204838,"line_start":494,"line_end":494,"column_start":26,"column_end":32},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2425},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":204922,"byte_end":204936,"line_start":500,"line_end":500,"column_start":6,"column_end":20},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":6492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":205086,"byte_end":205100,"line_start":505,"line_end":505,"column_start":28,"column_end":42},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":6492},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":205325,"byte_end":205340,"line_start":515,"line_end":515,"column_start":6,"column_end":21},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":6499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":205471,"byte_end":205486,"line_start":522,"line_end":522,"column_start":28,"column_end":43},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":6499},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":205643,"byte_end":205657,"line_start":528,"line_end":528,"column_start":28,"column_end":42},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":6492},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":205688,"byte_end":205703,"line_start":529,"line_end":529,"column_start":28,"column_end":43},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":6499},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":206670,"byte_end":206680,"line_start":562,"line_end":562,"column_start":20,"column_end":30},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":6472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":207069,"byte_end":207079,"line_start":575,"line_end":575,"column_start":34,"column_end":44},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":6472},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\env.rs","byte_start":207207,"byte_end":207217,"line_start":581,"line_end":581,"column_start":37,"column_end":47},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":6472},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":220872,"byte_end":220877,"line_start":303,"line_end":303,"column_start":6,"column_end":11},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":6545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\event.rs","byte_start":223487,"byte_end":223496,"line_start":374,"line_end":374,"column_start":6,"column_end":15},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":6608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":228098,"byte_end":228110,"line_start":57,"line_end":57,"column_start":6,"column_end":18},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":6642},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":228899,"byte_end":228911,"line_start":87,"line_end":87,"column_start":6,"column_end":18},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":6637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":230151,"byte_end":230164,"line_start":122,"line_end":122,"column_start":28,"column_end":41},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":6648},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\ext_event.rs","byte_start":230327,"byte_end":230340,"line_start":128,"line_end":128,"column_start":28,"column_end":41},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":6648},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":234107,"byte_end":234118,"line_start":102,"line_end":102,"column_start":6,"column_end":17},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":234816,"byte_end":234831,"line_start":124,"line_end":124,"column_start":6,"column_end":21},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":236968,"byte_end":236979,"line_start":181,"line_end":181,"column_start":6,"column_end":17},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":241014,"byte_end":241029,"line_start":293,"line_end":293,"column_start":9,"column_end":24},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":6661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":243555,"byte_end":243564,"line_start":363,"line_end":363,"column_start":29,"column_end":38},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":6654},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\localization.rs","byte_start":243847,"byte_end":243859,"line_start":372,"line_end":372,"column_start":54,"column_end":66},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1589},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":251461,"byte_end":251469,"line_start":171,"line_end":171,"column_start":9,"column_end":17},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":6697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":253256,"byte_end":253264,"line_start":233,"line_end":233,"column_start":15,"column_end":23},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":6674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":258540,"byte_end":258551,"line_start":390,"line_end":390,"column_start":9,"column_end":20},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":6712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":258707,"byte_end":258717,"line_start":397,"line_end":397,"column_start":6,"column_end":16},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":6722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":259263,"byte_end":259271,"line_start":417,"line_end":417,"column_start":29,"column_end":37},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":6674},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":260283,"byte_end":260292,"line_start":443,"line_end":443,"column_start":31,"column_end":40},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":6681},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\menu.rs","byte_start":260414,"byte_end":260423,"line_start":449,"line_end":449,"column_start":31,"column_end":40},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":6681},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":276940,"byte_end":276950,"line_start":74,"line_end":74,"column_start":40,"column_end":50},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":6737},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\mouse.rs","byte_start":277427,"byte_end":277433,"line_start":98,"line_end":98,"column_start":15,"column_end":21},"kind":{"Impl":{"id":195}},"from":{"krate":17,"index":2779},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":278964,"byte_end":278979,"line_start":42,"line_end":42,"column_start":6,"column_end":21},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":6750},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":281723,"byte_end":281738,"line_start":107,"line_end":107,"column_start":18,"column_end":33},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":6776},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\scroll_component.rs","byte_start":281958,"byte_end":281973,"line_start":118,"line_end":118,"column_start":6,"column_end":21},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":6776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":300121,"byte_end":300135,"line_start":96,"line_end":96,"column_start":6,"column_end":20},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":6786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":302611,"byte_end":302618,"line_start":158,"line_end":158,"column_start":16,"column_end":23},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":6800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":306788,"byte_end":306792,"line_start":266,"line_end":266,"column_start":9,"column_end":13},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":6809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":306975,"byte_end":306984,"line_start":276,"line_end":276,"column_start":6,"column_end":15},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":6825},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\attribute.rs","byte_start":308048,"byte_end":308055,"line_start":313,"line_end":313,"column_start":21,"column_end":28},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":6800},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":317710,"byte_end":317715,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":1987}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":319689,"byte_end":319695,"line_start":75,"line_end":75,"column_start":23,"column_end":29},"kind":{"Impl":{"id":204}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":1987}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":322892,"byte_end":322895,"line_start":194,"line_end":194,"column_start":23,"column_end":26},"kind":{"Impl":{"id":205}},"from":{"krate":5,"index":5980},"to":{"krate":0,"index":1987}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editable_text.rs","byte_start":326000,"byte_end":326012,"line_start":284,"line_end":284,"column_start":45,"column_end":57},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":6883},"to":{"krate":0,"index":2036}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":336060,"byte_end":336066,"line_start":41,"line_end":41,"column_start":9,"column_end":15},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":6890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":337372,"byte_end":337378,"line_start":84,"line_end":84,"column_start":37,"column_end":43},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":6890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\editor.rs","byte_start":344749,"byte_end":344755,"line_start":295,"line_end":295,"column_start":21,"column_end":27},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":6890},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":347409,"byte_end":347423,"line_start":35,"line_end":35,"column_start":6,"column_end":20},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":6902},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\font_descriptor.rs","byte_start":348456,"byte_end":348470,"line_start":71,"line_end":71,"column_start":18,"column_end":32},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":6902},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":353515,"byte_end":353525,"line_start":121,"line_end":121,"column_start":6,"column_end":16},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":354764,"byte_end":354779,"line_start":164,"line_end":164,"column_start":6,"column_end":21},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":6917},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":354993,"byte_end":355007,"line_start":171,"line_end":171,"column_start":28,"column_end":42},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":2200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":355184,"byte_end":355198,"line_start":180,"line_end":180,"column_start":9,"column_end":23},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":355483,"byte_end":355497,"line_start":190,"line_end":190,"column_start":26,"column_end":40},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2200},"to":{"krate":0,"index":2190}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":356038,"byte_end":356053,"line_start":211,"line_end":211,"column_start":28,"column_end":43},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":6917},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":356198,"byte_end":356213,"line_start":217,"line_end":217,"column_start":28,"column_end":43},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":6917},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\format.rs","byte_start":356360,"byte_end":356374,"line_start":223,"line_end":223,"column_start":40,"column_end":54},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2200},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":359206,"byte_end":359216,"line_start":70,"line_end":70,"column_start":9,"column_end":19},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":6925},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":362155,"byte_end":362165,"line_start":162,"line_end":162,"column_start":22,"column_end":32},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":6925},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":369721,"byte_end":369731,"line_start":366,"line_end":366,"column_start":29,"column_end":39},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":6925},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\layout.rs","byte_start":370267,"byte_end":370277,"line_start":384,"line_end":384,"column_start":34,"column_end":44},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":6925},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\selection.rs","byte_start":376265,"byte_end":376274,"line_start":36,"line_end":36,"column_start":6,"column_end":15},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":6978},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":378921,"byte_end":378936,"line_start":25,"line_end":25,"column_start":24,"column_end":39},"kind":"SuperTrait","from":{"krate":21,"index":679},"to":{"krate":0,"index":2423}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":378939,"byte_end":378943,"line_start":25,"line_end":25,"column_start":42,"column_end":46},"kind":"SuperTrait","from":{"krate":0,"index":1093},"to":{"krate":0,"index":2423}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":379628,"byte_end":379636,"line_start":47,"line_end":47,"column_start":6,"column_end":14},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":6987},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":380744,"byte_end":380750,"line_start":83,"line_end":83,"column_start":22,"column_end":28},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2425},"to":{"krate":0,"index":2423}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":380780,"byte_end":380788,"line_start":85,"line_end":85,"column_start":26,"column_end":34},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":6987},"to":{"krate":21,"index":679}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":380881,"byte_end":380887,"line_start":91,"line_end":91,"column_start":22,"column_end":28},"kind":{"Impl":{"id":231}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":2423}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":380913,"byte_end":380916,"line_start":93,"line_end":93,"column_start":22,"column_end":25},"kind":{"Impl":{"id":232}},"from":{"krate":5,"index":5980},"to":{"krate":0,"index":2423}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\storage.rs","byte_start":380950,"byte_end":380958,"line_start":95,"line_end":95,"column_start":22,"column_end":30},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":6987},"to":{"krate":0,"index":2423}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":383277,"byte_end":383291,"line_start":63,"line_end":63,"column_start":6,"column_end":20},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":7047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\text\\text_input.rs","byte_start":383401,"byte_end":383415,"line_start":70,"line_end":70,"column_start":20,"column_end":34},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":7047},"to":{"krate":0,"index":2461}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\align.rs","byte_start":400523,"byte_end":400528,"line_start":28,"line_end":28,"column_start":9,"column_end":14},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\align.rs","byte_start":402213,"byte_end":402218,"line_start":79,"line_end":79,"column_start":29,"column_end":34},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2622},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":405308,"byte_end":405314,"line_start":32,"line_end":32,"column_start":15,"column_end":21},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2685},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\button.rs","byte_start":407795,"byte_end":407801,"line_start":112,"line_end":112,"column_start":29,"column_end":35},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2685},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\checkbox.rs","byte_start":411783,"byte_end":411791,"line_start":27,"line_end":27,"column_start":6,"column_end":14},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2744},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\checkbox.rs","byte_start":412159,"byte_end":412167,"line_start":41,"line_end":41,"column_start":23,"column_end":31},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2744},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\click.rs","byte_start":417214,"byte_end":417219,"line_start":43,"line_end":43,"column_start":15,"column_end":20},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\click.rs","byte_start":417482,"byte_end":417487,"line_start":52,"line_end":52,"column_start":50,"column_end":55},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2786},"to":{"krate":0,"index":2935}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":419632,"byte_end":419640,"line_start":28,"line_end":28,"column_start":6,"column_end":14},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":7055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":423683,"byte_end":423690,"line_start":125,"line_end":125,"column_start":23,"column_end":30},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":2829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\clip_box.rs","byte_start":428876,"byte_end":428883,"line_start":265,"line_end":265,"column_start":43,"column_end":50},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":2829},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\common.rs","byte_start":433459,"byte_end":433468,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":7069},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\common.rs","byte_start":433539,"byte_end":433548,"line_start":43,"line_end":43,"column_start":6,"column_end":15},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":7069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":436034,"byte_end":436043,"line_start":35,"line_end":35,"column_start":15,"column_end":24},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":2901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\container.rs","byte_start":439213,"byte_end":439222,"line_start":131,"line_end":131,"column_start":29,"column_end":38},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":2901},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":445027,"byte_end":445041,"line_start":101,"line_end":101,"column_start":12,"column_end":26},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":2941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\controller.rs","byte_start":445268,"byte_end":445282,"line_start":108,"line_end":108,"column_start":58,"column_end":72},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":2941},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\either.rs","byte_start":447167,"byte_end":447173,"line_start":28,"line_end":28,"column_start":9,"column_end":15},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":2972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\either.rs","byte_start":447845,"byte_end":447851,"line_start":47,"line_end":47,"column_start":29,"column_end":35},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":2972},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\either.rs","byte_start":449495,"byte_end":449501,"line_start":92,"line_end":92,"column_start":9,"column_end":15},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":2972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":450671,"byte_end":450679,"line_start":26,"line_end":26,"column_start":23,"column_end":31},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3006},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\env_scope.rs","byte_start":451628,"byte_end":451636,"line_start":58,"line_end":58,"column_start":43,"column_end":51},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3006},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":460761,"byte_end":460765,"line_start":207,"line_end":207,"column_start":6,"column_end":10},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":7098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":465093,"byte_end":465103,"line_start":338,"line_end":338,"column_start":6,"column_end":16},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":7090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":465854,"byte_end":465865,"line_start":359,"line_end":359,"column_start":9,"column_end":20},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":466073,"byte_end":466077,"line_start":368,"line_end":368,"column_start":15,"column_end":19},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3048},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":474208,"byte_end":474212,"line_start":598,"line_end":598,"column_start":29,"column_end":33},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3048},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":482428,"byte_end":482446,"line_start":786,"line_end":786,"column_start":6,"column_end":24},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":7113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":483112,"byte_end":483119,"line_start":809,"line_end":809,"column_start":6,"column_end":13},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":3119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":484417,"byte_end":484424,"line_start":845,"line_end":845,"column_start":19,"column_end":26},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3119},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":486264,"byte_end":486270,"line_start":895,"line_end":895,"column_start":29,"column_end":35},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3059},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\flex.rs","byte_start":486769,"byte_end":486779,"line_start":906,"line_end":906,"column_start":20,"column_end":30},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":7090},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\identity_wrapper.rs","byte_start":491231,"byte_end":491246,"line_start":26,"line_end":26,"column_start":9,"column_end":24},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\identity_wrapper.rs","byte_start":491445,"byte_end":491460,"line_start":33,"line_end":33,"column_start":43,"column_end":58},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3146},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":495070,"byte_end":495075,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\image.rs","byte_start":497677,"byte_end":497682,"line_start":166,"line_end":166,"column_start":29,"column_end":34},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3187},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\invalidation.rs","byte_start":509903,"byte_end":509920,"line_start":26,"line_end":26,"column_start":29,"column_end":46},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\invalidation.rs","byte_start":510182,"byte_end":510199,"line_start":37,"line_end":37,"column_start":43,"column_end":60},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3218},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":516130,"byte_end":516138,"line_start":145,"line_end":145,"column_start":22,"column_end":30},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":520899,"byte_end":520904,"line_start":279,"line_end":279,"column_start":22,"column_end":27},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3278},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":521081,"byte_end":521086,"line_start":288,"line_end":288,"column_start":15,"column_end":20},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":3278},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":525713,"byte_end":525719,"line_start":420,"line_end":420,"column_start":6,"column_end":12},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":3303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":525989,"byte_end":525996,"line_start":435,"line_end":435,"column_start":9,"column_end":16},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":3299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":526235,"byte_end":526244,"line_start":444,"line_end":444,"column_start":15,"column_end":24},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":3288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":527350,"byte_end":527355,"line_start":476,"line_end":476,"column_start":29,"column_end":34},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":3278},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":528833,"byte_end":528841,"line_start":513,"line_end":513,"column_start":36,"column_end":44},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":3284},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":530519,"byte_end":530527,"line_start":561,"line_end":561,"column_start":34,"column_end":42},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":3284},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":530607,"byte_end":530612,"line_start":567,"line_end":567,"column_start":19,"column_end":24},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":3278},"to":{"krate":2,"index":3276}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":530743,"byte_end":530748,"line_start":574,"line_end":574,"column_start":22,"column_end":27},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":3278},"to":{"krate":2,"index":3289}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":530862,"byte_end":530871,"line_start":579,"line_end":579,"column_start":26,"column_end":35},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":3288},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":531003,"byte_end":531012,"line_start":585,"line_end":585,"column_start":24,"column_end":33},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":3288},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":531144,"byte_end":531153,"line_start":591,"line_end":591,"column_start":26,"column_end":35},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":3288},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":531298,"byte_end":531307,"line_start":597,"line_end":597,"column_start":38,"column_end":47},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":3288},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\label.rs","byte_start":531468,"byte_end":531477,"line_start":603,"line_end":603,"column_start":58,"column_end":67},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":3288},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":533778,"byte_end":533786,"line_start":56,"line_end":56,"column_start":18,"column_end":26},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":3415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\lens_wrap.rs","byte_start":534233,"byte_end":534241,"line_start":71,"line_end":71,"column_start":32,"column_end":40},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":3415},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\list.rs","byte_start":536867,"byte_end":536871,"line_start":39,"line_end":39,"column_start":15,"column_end":19},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":3510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\list.rs","byte_start":538626,"byte_end":538630,"line_start":89,"line_end":89,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":1093},"to":{"krate":0,"index":3530}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\list.rs","byte_start":540177,"byte_end":540180,"line_start":148,"line_end":148,"column_start":31,"column_end":34},"kind":{"Impl":{"id":297}},"from":{"krate":5,"index":5980},"to":{"krate":0,"index":3530}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\list.rs","byte_start":542108,"byte_end":542112,"line_start":219,"line_end":219,"column_start":45,"column_end":49},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":3510},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":546087,"byte_end":546094,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":3580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\padding.rs","byte_start":547569,"byte_end":547576,"line_start":72,"line_end":72,"column_start":29,"column_end":36},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":3580},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":552279,"byte_end":552286,"line_start":99,"line_end":99,"column_start":9,"column_end":16},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":3624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":552545,"byte_end":552560,"line_start":108,"line_end":108,"column_start":15,"column_end":30},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":3628},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":553237,"byte_end":553244,"line_start":125,"line_end":125,"column_start":29,"column_end":36},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":3624},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":553812,"byte_end":553827,"line_start":141,"line_end":141,"column_start":25,"column_end":40},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":3628},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":553955,"byte_end":553970,"line_start":147,"line_end":147,"column_start":30,"column_end":45},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":3628},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":554110,"byte_end":554125,"line_start":153,"line_end":153,"column_start":34,"column_end":49},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":3628},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":554267,"byte_end":554282,"line_start":159,"line_end":159,"column_start":34,"column_end":49},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":3628},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":554423,"byte_end":554438,"line_start":165,"line_end":165,"column_start":33,"column_end":48},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":3628},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":554574,"byte_end":554589,"line_start":171,"line_end":171,"column_start":30,"column_end":45},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":3628},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\painter.rs","byte_start":554724,"byte_end":554739,"line_start":177,"line_end":177,"column_start":30,"column_end":45},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":3628},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\parse.rs","byte_start":555979,"byte_end":555984,"line_start":28,"line_end":28,"column_start":9,"column_end":14},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":3697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\parse.rs","byte_start":556226,"byte_end":556231,"line_start":38,"line_end":38,"column_start":76,"column_end":81},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":3697},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\progress_bar.rs","byte_start":558490,"byte_end":558501,"line_start":26,"line_end":26,"column_start":6,"column_end":17},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":7172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\progress_bar.rs","byte_start":558628,"byte_end":558639,"line_start":33,"line_end":33,"column_start":22,"column_end":33},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":7172},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\radio.rs","byte_start":561768,"byte_end":561778,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":7180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\radio.rs","byte_start":562535,"byte_end":562540,"line_start":53,"line_end":53,"column_start":15,"column_end":20},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":3778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\radio.rs","byte_start":562830,"byte_end":562835,"line_start":63,"line_end":63,"column_start":41,"column_end":46},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":3778},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":567931,"byte_end":567949,"line_start":57,"line_end":57,"column_start":5,"column_end":23},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":3821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":568273,"byte_end":568291,"line_start":69,"line_end":69,"column_start":5,"column_end":23},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":3821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":568645,"byte_end":568663,"line_start":79,"line_end":79,"column_start":9,"column_end":27},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":3821},"to":{"krate":0,"index":3811}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":569233,"byte_end":569250,"line_start":99,"line_end":99,"column_start":37,"column_end":54},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":3843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":569615,"byte_end":569632,"line_start":110,"line_end":110,"column_start":67,"column_end":84},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":3843},"to":{"krate":0,"index":3816}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":572819,"byte_end":572824,"line_start":205,"line_end":205,"column_start":45,"column_end":50},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":3872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":574380,"byte_end":574385,"line_start":254,"line_end":254,"column_start":7,"column_end":12},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":3872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":574776,"byte_end":574781,"line_start":263,"line_end":263,"column_start":5,"column_end":10},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":3872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scope.rs","byte_start":575146,"byte_end":575151,"line_start":271,"line_end":271,"column_start":64,"column_end":69},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":3872},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":577711,"byte_end":577717,"line_start":38,"line_end":38,"column_start":23,"column_end":29},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":3926},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\scroll.rs","byte_start":579723,"byte_end":579729,"line_start":101,"line_end":101,"column_start":43,"column_end":49},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":3926},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":583055,"byte_end":583063,"line_start":37,"line_end":37,"column_start":9,"column_end":17},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":3963},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\sized_box.rs","byte_start":585774,"byte_end":585782,"line_start":129,"line_end":129,"column_start":29,"column_end":37},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":3963},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\slider.rs","byte_start":589240,"byte_end":589246,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":7186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\slider.rs","byte_start":589771,"byte_end":589777,"line_start":60,"line_end":60,"column_start":6,"column_end":12},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":7186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\slider.rs","byte_start":590414,"byte_end":590420,"line_start":78,"line_end":78,"column_start":22,"column_end":28},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":7186},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\spinner.rs","byte_start":596044,"byte_end":596051,"line_start":34,"line_end":34,"column_start":6,"column_end":13},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":4056},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\spinner.rs","byte_start":596761,"byte_end":596768,"line_start":60,"line_end":60,"column_start":18,"column_end":25},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":4056},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\spinner.rs","byte_start":596929,"byte_end":596936,"line_start":69,"line_end":69,"column_start":29,"column_end":36},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4056},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":600399,"byte_end":600404,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\split.rs","byte_start":609400,"byte_end":609405,"line_start":267,"line_end":267,"column_start":29,"column_end":34},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4104},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\stepper.rs","byte_start":617832,"byte_end":617839,"line_start":42,"line_end":42,"column_start":6,"column_end":13},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\stepper.rs","byte_start":619942,"byte_end":619949,"line_start":111,"line_end":111,"column_start":18,"column_end":25},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4186},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\stepper.rs","byte_start":620029,"byte_end":620036,"line_start":117,"line_end":117,"column_start":22,"column_end":29},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":4186},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\switch.rs","byte_start":625417,"byte_end":625423,"line_start":39,"line_end":39,"column_start":18,"column_end":24},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":7198},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\switch.rs","byte_start":625821,"byte_end":625827,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":7198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\switch.rs","byte_start":627223,"byte_end":627229,"line_start":89,"line_end":89,"column_start":23,"column_end":29},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":7198},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":636144,"byte_end":636151,"line_start":44,"line_end":44,"column_start":13,"column_end":20},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":4340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":636465,"byte_end":636469,"line_start":55,"line_end":55,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":1093},"to":{"krate":0,"index":4348}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":639483,"byte_end":639493,"line_start":127,"line_end":127,"column_start":21,"column_end":31},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":7209},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":639599,"byte_end":639609,"line_start":133,"line_end":133,"column_start":24,"column_end":34},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":7209},"to":{"krate":0,"index":1093}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":639796,"byte_end":639806,"line_start":140,"line_end":140,"column_start":30,"column_end":40},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":7209},"to":{"krate":0,"index":4348}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":641515,"byte_end":641525,"line_start":195,"line_end":195,"column_start":19,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":4348},"to":{"krate":0,"index":4382}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":641749,"byte_end":641759,"line_start":204,"line_end":204,"column_start":26,"column_end":36},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":7209},"to":{"krate":0,"index":4382}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":642313,"byte_end":642322,"line_start":224,"line_end":224,"column_start":22,"column_end":31},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":7215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":642818,"byte_end":642824,"line_start":244,"line_end":244,"column_start":22,"column_end":28},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":4394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":645089,"byte_end":645095,"line_start":304,"line_end":304,"column_start":48,"column_end":54},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":4394},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":649162,"byte_end":649181,"line_start":435,"line_end":435,"column_start":6,"column_end":25},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":4416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":651122,"byte_end":651130,"line_start":503,"line_end":503,"column_start":22,"column_end":30},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":4431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":652231,"byte_end":652239,"line_start":540,"line_end":540,"column_start":48,"column_end":56},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":4431},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":656532,"byte_end":656547,"line_start":673,"line_end":673,"column_start":10,"column_end":25},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":4458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":656736,"byte_end":656751,"line_start":682,"line_end":682,"column_start":38,"column_end":53},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":4458},"to":{"krate":0,"index":3811}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":657526,"byte_end":657540,"line_start":704,"line_end":704,"column_start":18,"column_end":32},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":7277},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":657662,"byte_end":657676,"line_start":710,"line_end":710,"column_start":6,"column_end":20},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":7277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":658260,"byte_end":658268,"line_start":728,"line_end":728,"column_start":18,"column_end":26},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":7296},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":658541,"byte_end":658551,"line_start":739,"line_end":739,"column_start":15,"column_end":25},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":4477},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":659758,"byte_end":659762,"line_start":792,"line_end":792,"column_start":15,"column_end":19},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":4496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":660013,"byte_end":660017,"line_start":800,"line_end":800,"column_start":27,"column_end":31},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":4496},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":660112,"byte_end":660116,"line_start":806,"line_end":806,"column_start":22,"column_end":26},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":4496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\tabs.rs","byte_start":663361,"byte_end":663365,"line_start":909,"line_end":909,"column_start":44,"column_end":48},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":4496},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":670303,"byte_end":670310,"line_start":126,"line_end":126,"column_start":6,"column_end":13},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":7311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":670643,"byte_end":670650,"line_start":137,"line_end":137,"column_start":9,"column_end":16},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":7311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":676981,"byte_end":676988,"line_start":313,"line_end":313,"column_start":6,"column_end":13},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":7311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":677564,"byte_end":677571,"line_start":330,"line_end":330,"column_start":37,"column_end":44},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":7311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":680912,"byte_end":680919,"line_start":413,"line_end":413,"column_start":51,"column_end":58},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":7311},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":689931,"byte_end":689943,"line_start":630,"line_end":630,"column_start":15,"column_end":27},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":4624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":693535,"byte_end":693547,"line_start":730,"line_end":730,"column_start":29,"column_end":41},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":4624},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\textbox.rs","byte_start":700328,"byte_end":700335,"line_start":888,"line_end":888,"column_start":21,"column_end":28},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":7311},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\view_switcher.rs","byte_start":701654,"byte_end":701666,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":4740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\view_switcher.rs","byte_start":702552,"byte_end":702564,"line_start":57,"line_end":57,"column_start":38,"column_end":50},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":4740},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":713590,"byte_end":713598,"line_start":202,"line_end":202,"column_start":6,"column_end":14},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":7331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget.rs","byte_start":714916,"byte_end":714919,"line_start":237,"line_end":237,"column_start":23,"column_end":26},"kind":{"Impl":{"id":381}},"from":{"krate":5,"index":321},"to":{"krate":0,"index":4773}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":716855,"byte_end":716861,"line_start":25,"line_end":25,"column_start":31,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":4773},"to":{"krate":0,"index":4871}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":716867,"byte_end":716872,"line_start":25,"line_end":25,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":4871}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":724834,"byte_end":724835,"line_start":250,"line_end":250,"column_start":56,"column_end":57},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":4912},"to":{"krate":0,"index":4871}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":725028,"byte_end":725036,"line_start":257,"line_end":257,"column_start":15,"column_end":23},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":3963},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\widget\\widget_ext.rs","byte_start":725346,"byte_end":725354,"line_start":269,"line_end":269,"column_start":18,"column_end":26},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":3006},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\win_handler.rs","byte_start":730942,"byte_end":730949,"line_start":107,"line_end":107,"column_start":9,"column_end":16},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":5315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\win_handler.rs","byte_start":732014,"byte_end":732024,"line_start":142,"line_end":142,"column_start":9,"column_end":19},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":5297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\win_handler.rs","byte_start":732130,"byte_end":732138,"line_start":148,"line_end":148,"column_start":9,"column_end":17},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":7349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\win_handler.rs","byte_start":732797,"byte_end":732802,"line_start":176,"line_end":176,"column_start":15,"column_end":20},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":5304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\win_handler.rs","byte_start":743454,"byte_end":743466,"line_start":470,"line_end":470,"column_start":15,"column_end":27},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":5293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\win_handler.rs","byte_start":743767,"byte_end":743775,"line_start":481,"line_end":481,"column_start":15,"column_end":23},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":7349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\win_handler.rs","byte_start":754188,"byte_end":754198,"line_start":770,"line_end":770,"column_start":44,"column_end":54},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":5297},"to":{"krate":17,"index":56}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\win_handler.rs","byte_start":754330,"byte_end":754342,"line_start":776,"line_end":776,"column_start":30,"column_end":42},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":5293},"to":{"krate":17,"index":2355}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\win_handler.rs","byte_start":757570,"byte_end":757577,"line_start":884,"line_end":884,"column_start":21,"column_end":28},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":5315},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\window.rs","byte_start":759916,"byte_end":759922,"line_start":61,"line_end":61,"column_start":9,"column_end":15},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":5566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\window.rs","byte_start":760539,"byte_end":760545,"line_start":86,"line_end":86,"column_start":15,"column_end":21},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":5566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.7.0\\src\\window.rs","byte_start":774325,"byte_end":774333,"line_start":474,"line_end":474,"column_start":6,"column_end":14},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":7355},"to":{"krate":4294967295,"index":4294967295}}]}