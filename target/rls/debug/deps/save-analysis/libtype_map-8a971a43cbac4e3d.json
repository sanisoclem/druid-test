{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0","program":"C:\\Users\\Mel\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","type_map","--edition=2018","C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=8a971a43cbac4e3d","-C","extra-filename=-8a971a43cbac4e3d","--out-dir","c:\\Users\\Mel\\Workspace\\src\\druid-test\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Mel\\Workspace\\src\\druid-test\\target\\rls\\debug\\deps","--extern","rustc_hash=c:\\Users\\Mel\\Workspace\\src\\druid-test\\target\\rls\\debug\\deps\\librustc_hash-225491ca64c64166.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Mel\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Mel\\Workspace\\src\\druid-test\\target\\rls\\debug\\deps\\libtype_map-8a971a43cbac4e3d.rmeta"},"prelude":{"crate_id":{"name":"type_map","disambiguator":[3336351917265666195,0]},"crate_root":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src","external_crates":[{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","num":16,"id":{"name":"rustc_hash","disambiguator":[917962479219036198,0]}}],"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":0,"byte_end":11761,"line_start":1,"line_end":349,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":0,"byte_end":11761,"line_start":1,"line_end":349,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":130},{"krate":0,"index":135},{"krate":0,"index":19},{"krate":0,"index":139},{"krate":0,"index":144},{"krate":0,"index":29},{"krate":0,"index":148},{"krate":0,"index":157},{"krate":0,"index":33},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":39},{"krate":0,"index":66}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":199,"byte_end":212,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134}],"decl_id":null,"docs":" A view into an occupied entry in a `TypeMap`.\n","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `TypeMap`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":121,"byte_end":170,"line_start":8,"line_end":8,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":425,"byte_end":428,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":366,"byte_end":413,"line_start":16,"line_end":16,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":569,"byte_end":576,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":"Gets a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/Gets a mutable reference to the value in the entry.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":503,"byte_end":557,"line_start":21,"line_end":21,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":807,"byte_end":815,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Converts the `OccupiedEntry` into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts the `OccupiedEntry` into a mutable reference to the value in the entry","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":663,"byte_end":746,"line_start":26,"line_end":26,"column_start":5,"column_end":88}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":751,"byte_end":795,"line_start":27,"line_end":27,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":980,"byte_end":986,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":901,"byte_end":968,"line_start":32,"line_end":32,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":1177,"byte_end":1183,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.    \n","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.    ","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":1108,"byte_end":1165,"line_start":37,"line_end":37,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":1348,"byte_end":1359,"line_start":45,"line_end":45,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143}],"decl_id":null,"docs":" A view into a vacant entry in a `TypeMap`.\n","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `TypeMap`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":1273,"byte_end":1319,"line_start":43,"line_end":43,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":1626,"byte_end":1632,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, T) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the key of the `VacantEntry`, and returns a mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the key of the `VacantEntry`, and returns a mutable reference to it.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":1509,"byte_end":1614,"line_start":51,"line_end":51,"column_start":5,"column_end":110}}]},{"kind":"TupleVariant","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":1865,"byte_end":1873,"line_start":60,"line_end":60,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":1901,"byte_end":1907,"line_start":61,"line_end":61,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":1846,"byte_end":1851,"line_start":59,"line_end":59,"column_start":10,"column_end":15},"name":"Entry","qualname":"::Entry","value":"pub enum Entry<'a, T> { Occupied(OccupiedEntry), Vacant(VacantEntry), }","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":154}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.\n","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":1739,"byte_end":1819,"line_start":57,"line_end":57,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":2121,"byte_end":2130,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, T) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":1972,"byte_end":2054,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":2059,"byte_end":2109,"line_start":66,"line_end":66,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":2493,"byte_end":2507,"line_start":76,"line_end":76,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F: FnOnce() -> T>(Self, F) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty, and returns\n a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty, and returns","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":2321,"byte_end":2426,"line_start":74,"line_end":74,"column_start":5,"column_end":110}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":2431,"byte_end":2481,"line_start":75,"line_end":75,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":2779,"byte_end":2786,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"TypeMap","qualname":"::TypeMap","value":"TypeMap {  }","parent":null,"children":[{"krate":0,"index":162}],"decl_id":null,"docs":" The typemap container\n","sig":null,"attributes":[{"value":"/ The typemap container","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":2742,"byte_end":2767,"line_start":85,"line_end":85,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":2917,"byte_end":2920,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"new","qualname":"<TypeMap>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `TypeMap`.\n","sig":null,"attributes":[{"value":"/ Create an empty `TypeMap`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":2861,"byte_end":2891,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":2896,"byte_end":2905,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":3099,"byte_end":3105,"line_start":100,"line_end":100,"column_start":12,"column_end":18},"name":"insert","qualname":"<TypeMap>::insert","value":"pub fn insert<T: 'static>(&mut Self, T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Insert a value into this `TypeMap`.","sig":null,"attributes":[{"value":"/ Insert a value into this `TypeMap`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":2971,"byte_end":3010,"line_start":97,"line_end":97,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":3015,"byte_end":3018,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ If a value of this type already exists, it will be returned.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":3023,"byte_end":3087,"line_start":99,"line_end":99,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":3422,"byte_end":3430,"line_start":108,"line_end":108,"column_start":12,"column_end":20},"name":"contains","qualname":"<TypeMap>::contains","value":"pub fn contains<T: 'static>(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if container contains value for type\n","sig":null,"attributes":[{"value":"/ Check if container contains value for type","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":3364,"byte_end":3410,"line_start":107,"line_end":107,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":3628,"byte_end":3631,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"get","qualname":"<TypeMap>::get","value":"pub fn get<T: 'static>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a value previously inserted on this `TypeMap`.\n","sig":null,"attributes":[{"value":"/ Get a reference to a value previously inserted on this `TypeMap`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":3547,"byte_end":3616,"line_start":112,"line_end":112,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":3911,"byte_end":3918,"line_start":121,"line_end":121,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TypeMap>::get_mut","value":"pub fn get_mut<T: 'static>(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a value previously inserted on this `TypeMap`.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to a value previously inserted on this `TypeMap`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":3822,"byte_end":3899,"line_start":120,"line_end":120,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":4241,"byte_end":4247,"line_start":131,"line_end":131,"column_start":12,"column_end":18},"name":"remove","qualname":"<TypeMap>::remove","value":"pub fn remove<T: 'static>(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove a value from this `TypeMap`.","sig":null,"attributes":[{"value":"/ Remove a value from this `TypeMap`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":4121,"byte_end":4160,"line_start":128,"line_end":128,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":4165,"byte_end":4168,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If a value of this type exists, it will be returned.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":4173,"byte_end":4229,"line_start":130,"line_end":130,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":4538,"byte_end":4543,"line_start":140,"line_end":140,"column_start":12,"column_end":17},"name":"clear","qualname":"<TypeMap>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear the `TypeMap` of all inserted values.\n","sig":null,"attributes":[{"value":"/ Clear the `TypeMap` of all inserted values.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":4465,"byte_end":4512,"line_start":138,"line_end":138,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":4517,"byte_end":4526,"line_start":139,"line_end":139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":4665,"byte_end":4670,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"entry","qualname":"<TypeMap>::entry","value":"pub fn entry<T: 'static>(&mut Self) -> Entry<, T>","parent":null,"children":[],"decl_id":null,"docs":" Get an entry in the `TypeMap` for in-place manipulation.\n","sig":null,"attributes":[{"value":"/ Get an entry in the `TypeMap` for in-place manipulation.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":4593,"byte_end":4653,"line_start":144,"line_end":144,"column_start":5,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":5188,"byte_end":5198,"line_start":158,"line_end":158,"column_start":9,"column_end":19},"name":"concurrent","qualname":"::concurrent","value":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":167},{"krate":0,"index":172},{"krate":0,"index":83},{"krate":0,"index":176},{"krate":0,"index":181},{"krate":0,"index":93},{"krate":0,"index":185},{"krate":0,"index":194},{"krate":0,"index":97},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":103}],"decl_id":null,"docs":" Provides the same `TypeMap` container, but with `Send` + `Sync` bounds on values\n","sig":null,"attributes":[{"value":"/ Provides the same `TypeMap` container, but with `Send` + `Sync` bounds on values","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":5095,"byte_end":5179,"line_start":157,"line_end":157,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":5429,"byte_end":5442,"line_start":169,"line_end":169,"column_start":16,"column_end":29},"name":"OccupiedEntry","qualname":"::concurrent::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171}],"decl_id":null,"docs":" A view into an occupied entry in a `TypeMap`.\n","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `TypeMap`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":5343,"byte_end":5392,"line_start":167,"line_end":167,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":5707,"byte_end":5710,"line_start":176,"line_end":176,"column_start":16,"column_end":19},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":5644,"byte_end":5691,"line_start":175,"line_end":175,"column_start":9,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":5867,"byte_end":5874,"line_start":181,"line_end":181,"column_start":16,"column_end":23},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":"Gets a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/Gets a mutable reference to the value in the entry.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":5797,"byte_end":5851,"line_start":180,"line_end":180,"column_start":9,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":6125,"byte_end":6133,"line_start":187,"line_end":187,"column_start":16,"column_end":24},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Converts the `OccupiedEntry` into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts the `OccupiedEntry` into a mutable reference to the value in the entry","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":5973,"byte_end":6056,"line_start":185,"line_end":185,"column_start":9,"column_end":92}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":6065,"byte_end":6109,"line_start":186,"line_end":186,"column_start":9,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":6314,"byte_end":6320,"line_start":192,"line_end":192,"column_start":16,"column_end":22},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":6231,"byte_end":6298,"line_start":191,"line_end":191,"column_start":9,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":6596,"byte_end":6602,"line_start":200,"line_end":200,"column_start":16,"column_end":22},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.    \n","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.    ","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":6523,"byte_end":6580,"line_start":199,"line_end":199,"column_start":9,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":6809,"byte_end":6820,"line_start":207,"line_end":207,"column_start":16,"column_end":27},"name":"VacantEntry","qualname":"::concurrent::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"decl_id":null,"docs":" A view into a vacant entry in a `TypeMap`.\n","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `TypeMap`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":6726,"byte_end":6772,"line_start":205,"line_end":205,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":7139,"byte_end":7145,"line_start":214,"line_end":214,"column_start":16,"column_end":22},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, T) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the key of the `VacantEntry`, and returns a mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the key of the `VacantEntry`, and returns a mutable reference to it.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":7018,"byte_end":7123,"line_start":213,"line_end":213,"column_start":9,"column_end":114}}]},{"kind":"TupleVariant","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":7406,"byte_end":7414,"line_start":222,"line_end":222,"column_start":9,"column_end":17},"name":"Occupied","qualname":"::concurrent::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":7446,"byte_end":7452,"line_start":223,"line_end":223,"column_start":9,"column_end":15},"name":"Vacant","qualname":"::concurrent::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":7383,"byte_end":7388,"line_start":221,"line_end":221,"column_start":14,"column_end":19},"name":"Entry","qualname":"::concurrent::Entry","value":"pub enum Entry<'a, T> { Occupied(OccupiedEntry), Vacant(VacantEntry), }","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":191}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.\n","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":7268,"byte_end":7348,"line_start":219,"line_end":219,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":7700,"byte_end":7709,"line_start":229,"line_end":229,"column_start":16,"column_end":25},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, T) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":7543,"byte_end":7625,"line_start":227,"line_end":227,"column_start":9,"column_end":91}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":7634,"byte_end":7684,"line_start":228,"line_end":228,"column_start":9,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":8104,"byte_end":8118,"line_start":238,"line_end":238,"column_start":16,"column_end":30},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F: FnOnce() -> T>(Self, F) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty, and returns\n a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty, and returns","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":7924,"byte_end":8029,"line_start":236,"line_end":236,"column_start":9,"column_end":114}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":8038,"byte_end":8088,"line_start":237,"line_end":237,"column_start":9,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":8426,"byte_end":8433,"line_start":248,"line_end":248,"column_start":16,"column_end":23},"name":"TypeMap","qualname":"::concurrent::TypeMap","value":"TypeMap {  }","parent":null,"children":[{"krate":0,"index":199}],"decl_id":null,"docs":" The typemap container\n","sig":null,"attributes":[{"value":"/ The typemap container","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":8385,"byte_end":8410,"line_start":247,"line_end":247,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":8602,"byte_end":8605,"line_start":255,"line_end":255,"column_start":16,"column_end":19},"name":"new","qualname":"<TypeMap>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `TypeMap`.\n","sig":null,"attributes":[{"value":"/ Create an empty `TypeMap`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":8538,"byte_end":8568,"line_start":253,"line_end":253,"column_start":9,"column_end":39}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":8577,"byte_end":8586,"line_start":254,"line_end":254,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":8808,"byte_end":8814,"line_start":262,"line_end":262,"column_start":16,"column_end":22},"name":"insert","qualname":"<TypeMap>::insert","value":"pub fn insert<T: Send + Sync + 'static>(&mut Self, T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Insert a value into this `TypeMap`.","sig":null,"attributes":[{"value":"/ Insert a value into this `TypeMap`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":8668,"byte_end":8707,"line_start":259,"line_end":259,"column_start":9,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":8716,"byte_end":8719,"line_start":260,"line_end":260,"column_start":9,"column_end":12}},{"value":"/ If a value of this type already exists, it will be returned.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":8728,"byte_end":8792,"line_start":261,"line_end":261,"column_start":9,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":9191,"byte_end":9199,"line_start":270,"line_end":270,"column_start":16,"column_end":24},"name":"contains","qualname":"<TypeMap>::contains","value":"pub fn contains<T: 'static>(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if container contains value for type\n","sig":null,"attributes":[{"value":"/ Check if container contains value for type","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":9129,"byte_end":9175,"line_start":269,"line_end":269,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":9413,"byte_end":9416,"line_start":275,"line_end":275,"column_start":16,"column_end":19},"name":"get","qualname":"<TypeMap>::get","value":"pub fn get<T: 'static>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a value previously inserted on this `TypeMap`.\n","sig":null,"attributes":[{"value":"/ Get a reference to a value previously inserted on this `TypeMap`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":9328,"byte_end":9397,"line_start":274,"line_end":274,"column_start":9,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":9724,"byte_end":9731,"line_start":283,"line_end":283,"column_start":16,"column_end":23},"name":"get_mut","qualname":"<TypeMap>::get_mut","value":"pub fn get_mut<T: 'static>(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a value previously inserted on this `TypeMap`.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to a value previously inserted on this `TypeMap`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":9631,"byte_end":9708,"line_start":282,"line_end":282,"column_start":9,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":10090,"byte_end":10096,"line_start":293,"line_end":293,"column_start":16,"column_end":22},"name":"remove","qualname":"<TypeMap>::remove","value":"pub fn remove<T: 'static>(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove a value from this `TypeMap`.","sig":null,"attributes":[{"value":"/ Remove a value from this `TypeMap`.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":9958,"byte_end":9997,"line_start":290,"line_end":290,"column_start":9,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":10006,"byte_end":10009,"line_start":291,"line_end":291,"column_start":9,"column_end":12}},{"value":"/ If a value of this type exists, it will be returned.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":10018,"byte_end":10074,"line_start":292,"line_end":292,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":10437,"byte_end":10442,"line_start":302,"line_end":302,"column_start":16,"column_end":21},"name":"clear","qualname":"<TypeMap>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear the `TypeMap` of all inserted values.\n","sig":null,"attributes":[{"value":"/ Clear the `TypeMap` of all inserted values.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":10356,"byte_end":10403,"line_start":300,"line_end":300,"column_start":9,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":10412,"byte_end":10421,"line_start":301,"line_end":301,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":10580,"byte_end":10585,"line_start":307,"line_end":307,"column_start":16,"column_end":21},"name":"entry","qualname":"<TypeMap>::entry","value":"pub fn entry<T: 'static + Send + Sync>(&mut Self) -> Entry<, T>","parent":null,"children":[],"decl_id":null,"docs":" Get an entry in the `TypeMap` for in-place manipulation.\n","sig":null,"attributes":[{"value":"/ Get an entry in the `TypeMap` for in-place manipulation.","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":10504,"byte_end":10564,"line_start":306,"line_end":306,"column_start":9,"column_end":69}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":339,"byte_end":352,"line_start":15,"line_end":15,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":1484,"byte_end":1495,"line_start":50,"line_end":50,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":1953,"byte_end":1958,"line_start":64,"line_end":64,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":2847,"byte_end":2854,"line_start":90,"line_end":90,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":53},{"krate":0,"index":57},{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":5613,"byte_end":5626,"line_start":174,"line_end":174,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":6989,"byte_end":7000,"line_start":212,"line_end":212,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":7520,"byte_end":7525,"line_start":226,"line_end":226,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":8520,"byte_end":8527,"line_start":252,"line_end":252,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":117},{"krate":0,"index":121},{"krate":0,"index":126},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":339,"byte_end":352,"line_start":15,"line_end":15,"column_start":22,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":1484,"byte_end":1495,"line_start":50,"line_end":50,"column_start":22,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":1953,"byte_end":1958,"line_start":64,"line_end":64,"column_start":22,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":2847,"byte_end":2854,"line_start":90,"line_end":90,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":5613,"byte_end":5626,"line_start":174,"line_end":174,"column_start":40,"column_end":53},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":6989,"byte_end":7000,"line_start":212,"line_end":212,"column_start":40,"column_end":51},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":7520,"byte_end":7525,"line_start":226,"line_end":226,"column_start":40,"column_end":45},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Mel\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.4.0\\src\\lib.rs","byte_start":8520,"byte_end":8527,"line_start":252,"line_end":252,"column_start":10,"column_end":17},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":198},"to":{"krate":4294967295,"index":4294967295}}]}